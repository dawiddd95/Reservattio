{"version":3,"sources":["assets/img/login.jpg","assets/img/signup.jpg","assets/img/forgot.png","assets/img/404.png","serviceWorker.js","components/ProtectAgainstLogout/ProtectAgainstLogout.js","components/ProtectAgainstLogin/ProtectAgainstLogin.js","pages/Auth/LoginPage/StyledLoginPage.js","components/Header/StyledHeader.js","components/Header/Header.js","assets/colors.js","components/Auth/LoginPanel/StyledLoginPanel.js","components/Auth/ManagerLoginForm/StyledManagerLoginForm.js","components/FormAlert/StyledFormAlert.js","components/FormAlert/FormAlert.js","components/Auth/ManagerLoginForm/ManagerLoginForm.js","components/Auth/EmployeeLoginForm/StyledEmployeeLoginForm.js","components/Auth/EmployeeLoginForm/EmployeeLoginForm.js","components/Auth/LoginPanel/LoginPanel.js","pages/Auth/LoginPage/LoginPage.js","pages/Auth/SignupPage/StyledSignupPage.js","components/Auth/SignupForm/StyledSignupForm.js","hooks/useAuthForm.js","components/Auth/SignupForm/SignupForm.js","pages/Auth/SignupPage/SignupPage.js","pages/Auth/ForgotPasswordPage/StyledForgotPasswordPage.js","components/Auth/ForgotPasswordForm/StyledForgotPasswordForm.js","components/Auth/ForgotPasswordForm/ForgotPasswordForm.js","pages/Auth/ForgotPasswordPage/ForgotPasswordPage.js","pages/ErrorPage/StyledErrorPage.js","pages/ErrorPage/ErrorPage.js","routes/AuthRoutes.js","app/services/types.js","app/services/actions.js","app/services/thunks.js","app/clients/types.js","app/clients/actions.js","app/clients/thunks.js","app/employees/types.js","app/employees/actions.js","app/employees/thunks.js","app/reservations/types.js","app/reservations/actions.js","app/reservations/thunks.js","layout/AppLayout/StyledAppLayout.js","components/Navigation/StyledNavigation.js","components/Navigation/Navigation.js","pages/Reservations/ReservationsPage/StyledReservationsPage.js","components/Breadcrumb/StyledBreadcrumb.js","components/Breadcrumb/Breadcrumb.js","components/ButtonsGroup/StyledButtonsGroup.js","components/Clients/ClientsExportToExcel/ClientsExportToExcel.js","components/ExportToExcel/ExportToExcel.js","components/ButtonsGroup/ButtonsGroup.js","components/Reservations/SearchReservationsForm/StyledSearchReservationsForm.js","components/Reservations/SelectClient/StyledSelectClient.js","components/Reservations/SelectClient/SelectClient.js","components/Reservations/RangeDatePicker/StyledRangeDatePicker.js","components/Reservations/RangeDatePicker/RangeDatePicker.js","components/Reservations/SelectEmployee/StyledSelectEmployee.js","components/Reservations/SelectEmployee/SelectEmployee.js","components/Reservations/SelectService/StyledSelectService.js","components/Reservations/SelectService/SelectService.js","components/FormInput/StyledFormInput.js","components/FormInput/FormInput.js","components/Reservations/SelectStatus/StyledSelectStatus.js","components/Reservations/SelectStatus/SelectStatus.js","components/Reservations/SearchReservationsForm/SearchReservationsForm.js","components/Reservations/ReservationsTable/StyledReservationsTable.js","components/Reservations/DeleteReservation/DeleteReservation.js","components/Reservations/ColumnEmployee/ColumnEmployee.js","components/Reservations/ColumnClient/ColumnClient.js","components/Reservations/ColumnService/ColumnService.js","assets/data/reservationsTableColumns.js","components/Reservations/ReservationsTable/ReservationsTable.js","hooks/useReservationsTable.js","pages/Reservations/ReservationsPage/ReservationsPage.js","pages/Reservations/ReservationNewPage/StyledReservationNewPage.js","components/Reservations/NewReservationForm/StyledNewReservationForm.js","components/FormTextArea/StyledFormTextArea.js","components/FormTextArea/FormTextArea.js","components/Reservations/NewReservationForm/NewReservationForm.js","pages/Reservations/ReservationNewPage/ReservationNewPage.js","hooks/useFetchItem.js","pages/LoadingPage/StyledLoadingPage.js","pages/LoadingPage/LoadingPage.js","pages/Reservations/ReservationDetailsPage/StyledReservationDetailsPage.js","pages/Reservations/ReservationDetailsPage/ReservationDetailsPage.js","components/Reservations/FetchReservation/FetchReservation.js","pages/Reservations/ReservationEditPage/StyledReservationEditPage.js","components/Reservations/EditReservationForm/StyledEditReservationForm.js","components/Reservations/EditReservationForm/EditReservationForm.js","pages/Reservations/ReservationEditPage/ReservationEditPage.js","components/Reservations/FetchReservationToEdit/FetchReservationToEdit.js","routes/ReservationsRoutes.js","pages/Clients/ClientsPage/StyledClientsPage.js","components/Clients/SearchClientsForm/StyledSearchClientsForm.js","components/Clients/SearchClientsForm/SearchClientsForm.js","components/Clients/ClientsTable/StyledClientsTable.js","components/Clients/DeleteClient/DeleteClient.js","assets/data/clientsTableColumns.js","components/Clients/ClientsTable/ClientsTable.js","hooks/useClientsTable.js","pages/Clients/ClientsPage/ClientsPage.js","components/Clients/NewClientForm/StyledNewClientForm.js","components/Clients/NewClientForm/NewClientForm.js","pages/Clients/ClientNewPage/StyledClientNewPage.js","pages/Clients/ClientNewPage/ClientNewPage.js","pages/Clients/ImportClientsPage/StyledImportClientsPage.js","components/Clients/ClientsImport/StyledClientsImport.js","components/Clients/ClientsImport/ClientsImport.js","hooks/useImport.js","pages/Clients/ImportClientsPage/ImportClientsPage.js","hooks/useFetchClient.js","pages/Clients/ClientDetailsPage/StyledClientDetailsPage.js","pages/Clients/ClientDetailsPage/ClientDetailsPage.js","components/Clients/FetchClient/FetchClient.js","pages/Clients/ClientEditPage/StyledClientEditPage.js","components/Clients/EditClientForm/StyledEditClientForm.js","components/Clients/EditClientForm/EditClientForm.js","pages/Clients/ClientEditPage/ClientEditPage.js","components/Clients/FetchClientToEdit/FetchClientToEdit.js","routes/ClientsRoutes.js","pages/Services/ServicesPage/StyledServicesPage.js","components/Services/SearchServicesForm/StyledSearchServicesForm.js","components/Services/SearchServicesForm/SearchServicesForm.js","components/Services/ServicesTable/StyledServicesTable.js","components/Services/DeleteService/DeleteService.js","assets/data/servicesTableColumns.js","components/Services/ServicesTable/ServicesTable.js","hooks/useServicesTable.js","pages/Services/ServicesPage/ServicesPage.js","components/Services/NewServiceForm/StyledNewServiceForm.js","components/Services/NewServiceForm/NewServiceForm.js","pages/Services/ServiceNewPage/StyledServiceNewPage.js","pages/Services/ServiceNewPage/ServiceNewPage.js","hooks/useFetchService.js","pages/Services/ServiceDetailsPage/StyledServiceDetailsPage.js","pages/Services/ServiceDetailsPage/ServiceDetailsPage.js","components/Services/FetchService/FetchService.js","components/Services/EditServiceForm/StyledEditServiceForm.js","components/Services/EditServiceForm/EditServiceForm.js","pages/Services/ServiceEditPage/StyledServiceEditPage.js","pages/Services/ServiceEditPage/ServiceEditPage.js","components/Services/FetchServiceToEdit/FetchServiceToEdit.js","routes/ServicesRoutes.js","pages/Employees/EmployeesPage/StyledEmployeesPage.js","components/Employees/EmployeesTable/StyledEmployeesTable.js","components/Employees/DeleteEmployee/DeleteEmployee.js","components/Employees/ChangeEmployeePassword/StyledChangeEmployeePassword.js","components/Employees/ChangeEmployeePassword/ChangeEmployeePassword.js","assets/data/employeesTableColumns.js","components/Employees/EmployeesTable/EmployeesTable.js","hooks/useEmployeesTable.js","components/Employees/SearchEmployeesForm/StyledSearchEmployeesForm.js","components/Employees/SelectEnable/StyledSelectEnable.js","components/Employees/SelectEnable/SelectEnable.js","components/Employees/SearchEmployeesForm/SearchEmployeesForm.js","pages/Employees/EmployeesPage/EmployeesPage.js","components/Employees/NewEmployeeForm/StyledNewEmployeeForm.js","assets/data/selectRoles.js","components/SelectRoles/StyledSelectRoles.js","components/SelectRoles/SelectRoles.js","components/FormSwitch/StyledFormSwitch.js","components/FormSwitch/FormSwitch.js","components/Employees/NewEmployeeForm/NewEmployeeForm.js","pages/Employees/EmployeeNewPage/StyledEmployeeNewPage.js","pages/Employees/EmployeeNewPage/EmployeeNewPage.js","pages/Employees/EmployeeDetailsPage/StyledEmployeeDetailsPage.js","pages/Employees/EmployeeDetailsPage/EmployeeDetailsPage.js","components/Employees/FetchEmployee/FetchEmployee.js","pages/Employees/EmployeeEditPage/StyledEmployeeEditPage.js","components/Employees/EditEmployeeForm/StyledEditEmployeeForm.js","components/Employees/EditEmployeeForm/EditEmployeeForm.js","pages/Employees/EmployeeEditPage/EmployeeEditPage.js","components/Employees/FetchEmployeeToEdit/FetchEmployeeToEdit.js","routes/EmployeesRoutes.js","routes/AppRoutes.js","layout/AppLayout/AppLayout.js","components/FetchAccountData/FetchAccountData.js","routes/RootRoutes.js","app/services/reducer.js","app/services/index.js","app/clients/reducer.js","app/clients/index.js","app/employees/reducer.js","app/employees/index.js","app/reservations/reducer.js","app/reservations/index.js","reducers.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ProtectAgainstLogout","_ref","Component","component","session","sessionStorage","getItem","react","react_router","render","props","to","ProtectAgainstLogin","react_default","a","createElement","Wrapper","styled","div","_templateObject","background","Content","_templateObject2","Header","h1","StyledHeader_templateObject","text","StyledHeader_Header","colors","LoginAsWrapper","StyledLoginPanel_templateObject","LoginAsButton","StyledLoginPanel_templateObject2","selected_style","StyledLink","Link","_templateObject3","StyledManagerLoginForm_templateObject","FieldWrapper","StyledManagerLoginForm_templateObject2","StyledInput","Input","StyledManagerLoginForm_templateObject3","StyledErrorMessage","ErrorMessage","_templateObject4","CheckboxWrapper","_templateObject5","_templateObject6","SubmitButtonWrapper","label","_templateObject7","_templateObject8","_templateObject9","StyledFormAlert_templateObject","FormAlert","result","success","error","successText","StyledFormAlert_Wrapper","es_alert","message","description","type","showIcon","ManagerLoginForm","_useForm","_React$useState","React","useState","_React$useState2","Object","slicedToArray","loading","setLoading","_React$useState3","_React$useState4","setResult","asyncToGenerator","regenerator_default","mark","_callee","values","response","remember","email","wrap","_context","prev","next","axios","post","sent","data","localStorage","setItem","stop","_x","apply","this","arguments","useForm","_useForm2","submitForm","StyledManagerLoginForm_Wrapper","components_FormAlert_FormAlert","formik_esm","initialValues","password","validationSchema","Yup","shape","required","onSubmit","_ref2","handleSubmit","form_form","name","placeholder","es_checkbox","StyledManagerLoginForm_StyledLink","submit_button","block","StyledEmployeeLoginForm_templateObject","StyledEmployeeLoginForm_templateObject2","StyledEmployeeLoginForm_templateObject3","StyledEmployeeLoginForm_templateObject4","StyledEmployeeLoginForm_templateObject5","EmployeeLoginForm","username","console","log","StyledEmployeeLoginForm_Wrapper","StyledEmployeeLoginForm_FieldWrapper","StyledEmployeeLoginForm_StyledInput","StyledEmployeeLoginForm_StyledErrorMessage","StyledEmployeeLoginForm_SubmitButtonWrapper","LoginPanel","_useLoginType","loginAs","setLoginAs","useLoginType","_useLoginType2","handleOnClick","onClick","Auth_ManagerLoginForm_ManagerLoginForm","Auth_EmployeeLoginForm_EmployeeLoginForm","LoginPage","components_Header_Header","Auth_LoginPanel_LoginPanel","StyledSignupPage_templateObject","StyledSignupPage_templateObject2","StyledSignupPage_templateObject3","StyledSignupForm_templateObject","StyledSignupForm_templateObject2","StyledSignupForm_templateObject3","StyledSignupForm_templateObject4","useAuthForm","StyledSignupForm_templateObject5","url","SignupForm","_useAuthForm","_useAuthForm2","StyledSignupForm_Wrapper","surname","confirmPassword","min","matches","oneOf","StyledSignupForm_FieldWrapper","StyledSignupForm_StyledInput","StyledSignupForm_StyledErrorMessage","SignupPage","StyledSignupPage_Wrapper","StyledSignupPage_Content","Auth_SignupForm_SignupForm","StyledSignupPage_StyledLink","StyledForgotPasswordPage_templateObject","StyledForgotPasswordPage_templateObject2","StyledForgotPasswordPage_templateObject3","StyledForgotPasswordForm_templateObject","StyledForgotPasswordForm_templateObject2","StyledForgotPasswordForm_templateObject3","StyledForgotPasswordForm_templateObject4","ForgotPasswordForm","StyledForgotPasswordForm_Wrapper","StyledForgotPasswordForm_FieldWrapper","StyledForgotPasswordForm_StyledInput","StyledForgotPasswordForm_StyledErrorMessage","ForgotPasswordPage","StyledForgotPasswordPage_Wrapper","StyledForgotPasswordPage_Content","Auth_ForgotPasswordForm_ForgotPasswordForm","StyledForgotPasswordPage_StyledLink","StyledErrorPage_templateObject","Img","img","StyledErrorPage_templateObject2","TextWrapper","StyledErrorPage_templateObject3","StyledErrorPage_templateObject4","Text","StyledErrorPage_templateObject5","ErrorPage","StyledErrorPage_Wrapper","src","errorImg","StyledErrorPage_Header","react_router_dom","es_button","AuthRoutes","exact","path","types","actions","item","fetchedServicesThunk","dispatch","clients_types","clients_actions","fetchedClientsThunk","employees_types","employees_actions","fetchedEmployeesThunk","reservations_types","reservations_actions","fetchedReservationsThunk","Layout","StyledLayout","Footer","Sider","StyledAppLayout_templateObject","SiderWrapper","StyledAppLayout_templateObject2","Logo","StyledAppLayout_templateObject3","H2","h2","StyledAppLayout_templateObject4","hide","StyledHeader","StyledAppLayout_templateObject5","StyledMenu","Menu","StyledNavigation_templateObject","Span","span","StyledNavigation_templateObject2","Navigation","iconStyle","fontSize","theme","mode","menu","Item","key","className","UserOutlined","style","TeamOutlined","FieldTimeOutlined","TagOutlined","CopyOutlined","StyledReservationsPage_templateObject","StyledCard","Card","StyledReservationsPage_templateObject2","margin_style","StyledBreadcrumb_templateObject","Breadcrumb","links","StyledBreadcrumb_Wrapper","es_breadcrumb","map","breadcrumb","index","StyledButtonsGroup_templateObject","StyledButtonsGroup_templateObject2","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ClientsExportToExcel","fileName","buttonText","clients","element","FileExcelOutlined","filename","fileExtension","value","ExportToExcel","entity","useSelector","state","clientsReducer","Fragment","Clients_ClientsExportToExcel_ClientsExportToExcel","ButtonsGroup","showImport","showExport","StyledButtonsGroup_Wrapper","StyledButtonsGroup_StyledLink","concat","PlusOutlined","color","UploadOutlined","components_ExportToExcel_ExportToExcel","StyledSearchReservationsForm_templateObject","StyledForm","Form","StyledSearchReservationsForm_templateObject2","ButtonsWrapper","StyledSearchReservationsForm_templateObject3","StyledSearchReservationsForm_templateObject4","StyledSearchReservationsForm_templateObject5","StyledSelectClient_templateObject","Label","StyledSelectClient_templateObject2","StyledSelectClient_templateObject3","Option","Select","SelectClient","StyledSelectClient_FieldWrapper","StyledSelectClient_Label","es_select","optionFilterProp","showSearch","filterOption","allowClear","client","id","phone","StyledSelectClient_StyledErrorMessage","StyledRangeDatePicker_templateObject","StyledRangeDatePicker_templateObject2","StyledRangeDatePicker_templateObject3","RangePicker","DatePicker","RangeDatePicker","StyledRangeDatePicker_FieldWrapper","StyledRangeDatePicker_Label","showTime","format","width","StyledRangeDatePicker_StyledErrorMessage","StyledSelectEmployee_templateObject","StyledSelectEmployee_templateObject2","StyledSelectEmployee_templateObject3","SelectEmployee","employees","employeesReducer","StyledSelectEmployee_FieldWrapper","StyledSelectEmployee_Label","employee","SelectEmployee_Option","StyledSelectEmployee_StyledErrorMessage","StyledSelectService_templateObject","StyledSelectService_templateObject2","StyledSelectService_templateObject3","SelectService","services","servicesReducer","StyledSelectService_FieldWrapper","StyledSelectService_Label","service","SelectService_Option","StyledSelectService_StyledErrorMessage","StyledFormInput_templateObject","StyledFormInput_templateObject2","StyledFormInput_templateObject3","FormInput","StyledFormInput_FieldWrapper","StyledFormInput_Label","input","StyledFormInput_StyledErrorMessage","StyledSelectStatus_templateObject","StyledSelectStatus_templateObject2","StyledSelectStatus_templateObject3","SelectStatus","StyledSelectStatus_FieldWrapper","StyledSelectStatus_Label","SelectStatus_Option","StyledSelectStatus_StyledErrorMessage","SearchReservationsForm","reservationsReducer","useDispatch","date","formValues","undefined","moment","_d","objectSpread","withCredentials","StyledSearchReservationsForm_Wrapper","room","status","clientId","employeeId","serviceId","notRequired","components_FormInput_FormInput","Reservations_SelectEmployee_SelectEmployee","Reservations_RangeDatePicker_RangeDatePicker","Reservations_SelectClient_SelectClient","Reservations_SelectService_SelectService","Reservations_SelectStatus_SelectStatus","SearchOutlined","reset_button","UndoOutlined","StyledReservationsTable_templateObject","StyledReservationsTable_templateObject2","P","StyledReservationsTable_templateObject3","StyledReservationsTable_templateObject4","TableWrapper","StyledReservationsTable_templateObject5","DeleteReservation","buttonType","_useTableAction","setSuccess","useTableAction","_useTableAction2","confirmDelete","popconfirm","placement","title","onConfirm","okText","cancelText","DeleteOutlined","ColumnEmployee","filter","ColumnClient","ColumnService","reservationsTableColumns","dataIndex","sorter","b","sortDirections","defaultSortOrder","arrival","trim","localeCompare","departure","Reservations_ColumnEmployee_ColumnEmployee","Reservations_ColumnService_ColumnService","Reservations_ColumnClient_ColumnClient","tag","createdAt","StyledReservationsTable_StyledLink","Reservations_DeleteReservation_DeleteReservation","ReservationsTable","_useReservationsTable","_useSelector","reservations","isSearching","searchedReservations","isReloading","setIsReloading","selectedRowKeys","setSelectedRowKeys","length","useReservationsTable","_useReservationsTable2","showTotal","reloadData","handleChangeRow","reservation","rowSelection","onChange","markedItems","includes","StyledReservationsTable_Wrapper","StyledReservationsTable_ButtonsWrapper","disabled","table","columns","dataSource","scroll","x","pagination","showSizeChanger","ReservationsPage","StyledReservationsPage_Wrapper","components_Breadcrumb_Breadcrumb","bordered","components_ButtonsGroup_ButtonsGroup","Reservations_SearchReservationsForm_SearchReservationsForm","Reservations_ReservationsTable_ReservationsTable","StyledReservationNewPage_templateObject","StyledReservationNewPage_templateObject2","StyledNewReservationForm_templateObject","StyledNewReservationForm_templateObject2","StyledFormTextArea_templateObject","StyledFormTextArea_templateObject2","TextArea","FormTextArea","StyledFormTextArea_FieldWrapper","StyledFormTextArea_Label","rows","autoSize","NewReservationForm","_React$useState5","_React$useState6","err","setErr","_response$data","StyledNewReservationForm_Wrapper","margin","note","cancellationNote","components_FormTextArea_FormTextArea","StyledNewReservationForm_ButtonsWrapper","SaveOutlined","ReservationNewPage","StyledReservationNewPage_Wrapper","StyledReservationNewPage_StyledCard","Reservations_NewReservationForm_NewReservationForm","useFetchItem","setError","setData","useEffect","get","t0","fetchData","StyledLoadingPage_templateObject","MainContent","main","StyledLoadingPage_templateObject2","Box","StyledLoadingPage_templateObject3","spinnerLoader","keyframes","StyledLoadingPage_templateObject4","StyledLoadingPage_templateObject5","Spinner","StyledLoadingPage_templateObject6","LoadingPage","StyledLoadingPage_Wrapper","StyledLoadingPage_P","StyledReservationDetailsPage_templateObject","StyledReservationDetailsPage_templateObject2","StyledReservationDetailsPage_templateObject3","DetailsWrapper","StyledReservationDetailsPage_templateObject4","StyledReservationDetailsPage_templateObject5","StyledReservationDetailsPage_templateObject6","StyledReservationDetailsPage_templateObject7","Value","StyledReservationDetailsPage_templateObject8","font_light","NoData","StyledReservationDetailsPage_templateObject9","ReservationDetailsPage","StyledReservationDetailsPage_Wrapper","StyledReservationDetailsPage_StyledCard","StyledReservationDetailsPage_ButtonsWrapper","EditOutlined","StyledReservationDetailsPage_Label","StyledReservationDetailsPage_StyledLink","In Progress","Reserved","Cancelled","Completed","updatedAt","FetchReservation","_useFetchItem","params","_useFetchItem2","pages_LoadingPage_LoadingPage","pages_ErrorPage_ErrorPage","Reservations_ReservationDetailsPage_ReservationDetailsPage","StyledReservationEditPage_templateObject","StyledReservationEditPage_templateObject2","StyledEditReservationForm_templateObject","StyledEditReservationForm_templateObject2","EditReservationForm","StyledEditReservationForm_Wrapper","_ref3","StyledEditReservationForm_ButtonsWrapper","ReservationEditPage","StyledReservationEditPage_Wrapper","StyledReservationEditPage_StyledCard","Reservations_EditReservationForm_EditReservationForm","FetchReservationToEdit","Reservations_ReservationEditPage_ReservationEditPage","ReservationsRoutes","StyledClientsPage_templateObject","StyledClientsPage_templateObject2","StyledSearchClientsForm_templateObject","StyledSearchClientsForm_templateObject2","StyledSearchClientsForm_templateObject3","StyledSearchClientsForm_templateObject4","StyledSearchClientsForm_templateObject5","SearchClientsForm","StyledSearchClientsForm_Wrapper","StyledSearchClientsForm_StyledForm","StyledSearchClientsForm_FieldWrapper","StyledSearchClientsForm_Label","StyledSearchClientsForm_ButtonsWrapper","StyledClientsTable_templateObject","StyledClientsTable_templateObject2","StyledClientsTable_templateObject3","StyledClientsTable_templateObject4","StyledClientsTable_templateObject5","DeleteClient","clientsTableColumns","toLowerCase","StyledClientsTable_StyledLink","Clients_DeleteClient_DeleteClient","ClientsTable","_useClientsTable","searchedClients","useClientsTable","_useClientsTable2","StyledClientsTable_Wrapper","StyledClientsTable_ButtonsWrapper","StyledClientsTable_P","StyledClientsTable_TableWrapper","ClientsPage","StyledClientsPage_Wrapper","StyledClientsPage_StyledCard","Clients_SearchClientsForm_SearchClientsForm","Clients_ClientsTable_ClientsTable","StyledNewClientForm_templateObject","StyledNewClientForm_templateObject2","NewClientForm","StyledNewClientForm_Wrapper","StyledNewClientForm_ButtonsWrapper","StyledClientNewPage_templateObject","StyledClientNewPage_templateObject2","ClientNewPage","StyledClientNewPage_Wrapper","StyledClientNewPage_StyledCard","Clients_NewClientForm_NewClientForm","StyledImportClientsPage_templateObject","StyledImportClientsPage_templateObject2","StyledClientsImport_templateObject","ImportButton","button","StyledClientsImport_templateObject2","ImportInput","StyledClientsImport_templateObject3","IconWrapper","StyledClientsImport_templateObject4","StyledAlert","Alert","StyledClientsImport_templateObject5","Div","StyledClientsImport_templateObject6","StyledClientsImport_templateObject7","indent","ClientsImport","_useImport","importedClients","counter","e","f","target","files","reader","FileReader","onload","readedData","wsname","ws","dataParse","i","_data","_error","XLSX","read","SheetNames","Sheets","utils","sheet_to_json","header","push","readAsBinaryString","notification","useImport","_useImport2","uploadFile","showError","StyledClientsImport_Wrapper","spin","size","spinning","InboxOutlined","accept","event","card","StyledClientsImport_P","ImportClientsPage","StyledImportClientsPage_Wrapper","StyledImportClientsPage_StyledCard","Clients_ClientsImport_ClientsImport","useFetchClient","StyledClientDetailsPage_templateObject","StyledClientDetailsPage_templateObject2","StyledClientDetailsPage_templateObject3","StyledClientDetailsPage_templateObject4","StyledClientDetailsPage_templateObject5","StyledClientDetailsPage_templateObject6","StyledClientDetailsPage_templateObject7","StyledClientDetailsPage_templateObject8","ClientDetailsPage","StyledClientDetailsPage_Wrapper","StyledClientDetailsPage_StyledCard","StyledClientDetailsPage_ButtonsWrapper","StyledClientDetailsPage_DetailsWrapper","StyledClientDetailsPage_Item","StyledClientDetailsPage_Label","StyledClientDetailsPage_Value","StyledClientDetailsPage_NoData","FetchClient","_useFetchClient","_useFetchClient2","Clients_ClientDetailsPage_ClientDetailsPage","StyledClientEditPage_templateObject","StyledClientEditPage_templateObject2","StyledEditClientForm_templateObject","StyledEditClientForm_templateObject2","EditClientForm","StyledEditClientForm_Wrapper","StyledEditClientForm_ButtonsWrapper","ClientEditPage","StyledClientEditPage_Wrapper","StyledClientEditPage_StyledCard","Clients_EditClientForm_EditClientForm","Clients_ClientEditPage_ClientEditPage","ClientsRoutes","FetchClientToEdit","StyledServicesPage_templateObject","StyledServicesPage_templateObject2","StyledSearchServicesForm_templateObject","StyledSearchServicesForm_templateObject2","StyledSearchServicesForm_templateObject3","StyledSearchServicesForm_templateObject4","StyledSearchServicesForm_templateObject5","SearchServicesForm","StyledSearchServicesForm_Wrapper","priceFrom","priceTo","lessThan","positive","StyledSearchServicesForm_StyledForm","StyledSearchServicesForm_ButtonsWrapper","StyledServicesTable_templateObject","StyledServicesTable_templateObject2","StyledServicesTable_templateObject3","StyledServicesTable_templateObject4","StyledServicesTable_templateObject5","DeleteService","servicesTableColumns","price","StyledServicesTable_StyledLink","Services_DeleteService_DeleteService","ServicesTable","_useServicesTable","searchedServices","useServicesTable","_useServicesTable2","StyledServicesTable_Wrapper","StyledServicesTable_ButtonsWrapper","StyledServicesTable_P","StyledServicesTable_TableWrapper","ServicesPage","StyledServicesPage_Wrapper","StyledServicesPage_StyledCard","showExportImport","Services_SearchServicesForm_SearchServicesForm","Services_ServicesTable_ServicesTable","StyledNewServiceForm_templateObject","StyledNewServiceForm_templateObject2","NewServiceForm","StyledNewServiceForm_Wrapper","StyledNewServiceForm_ButtonsWrapper","StyledServiceNewPage_templateObject","StyledServiceNewPage_templateObject2","ServiceNewPage","StyledServiceNewPage_Wrapper","StyledServiceNewPage_StyledCard","Services_NewServiceForm_NewServiceForm","useFetchService","StyledServiceDetailsPage_templateObject","StyledServiceDetailsPage_templateObject2","StyledServiceDetailsPage_templateObject3","StyledServiceDetailsPage_templateObject4","StyledServiceDetailsPage_templateObject5","StyledServiceDetailsPage_templateObject6","StyledServiceDetailsPage_templateObject7","StyledServiceDetailsPage_templateObject8","ServiceDetailsPage","StyledServiceDetailsPage_Wrapper","StyledServiceDetailsPage_StyledCard","StyledServiceDetailsPage_ButtonsWrapper","StyledServiceDetailsPage_DetailsWrapper","StyledServiceDetailsPage_Item","StyledServiceDetailsPage_Label","StyledServiceDetailsPage_Value","StyledServiceDetailsPage_NoData","FetchService","_useFetchService","_useFetchService2","Services_ServiceDetailsPage_ServiceDetailsPage","StyledEditServiceForm_templateObject","StyledEditServiceForm_templateObject2","EditServiceForm","StyledEditServiceForm_Wrapper","StyledEditServiceForm_ButtonsWrapper","StyledServiceEditPage_templateObject","StyledServiceEditPage_templateObject2","ServiceEditPage","StyledServiceEditPage_Wrapper","StyledServiceEditPage_StyledCard","Services_EditServiceForm_EditServiceForm","FetchServiceToEdit","Services_ServiceEditPage_ServiceEditPage","ServicesRoutes","StyledEmployeesPage_templateObject","StyledEmployeesPage_templateObject2","StyledEmployeesTable_templateObject","StyledEmployeesTable_templateObject2","StyledEmployeesTable_templateObject3","StyledEmployeesTable_templateObject4","StyledEmployeesTable_templateObject5","DeleteEmployee","FormWrapper","StyledChangeEmployeePassword_templateObject","DataWrapper","StyledChangeEmployeePassword_templateObject2","StyledChangeEmployeePassword_templateObject3","FormInputWrapper","StyledChangeEmployeePassword_templateObject4","StyledChangeEmployeePassword_templateObject5","StyledChangeEmployeePassword_templateObject6","ChangeEmployeePassword","_useModal","visible","setVisible","useModal","_useModal2","showModal","handleCancel","modal","footer","onCancel","StyledChangeEmployeePassword_Label","Password","StyledChangeEmployeePassword_StyledErrorMessage","StyledChangeEmployeePassword_ButtonsWrapper","employeesTableColumns","StyledEmployeesTable_StyledLink","Employees_ChangeEmployeePassword_ChangeEmployeePassword","Employees_DeleteEmployee_DeleteEmployee","EmployeesTable","_useEmployeesTable","searchedEmployees","useEmployeesTable","_useEmployeesTable2","StyledEmployeesTable_Wrapper","StyledEmployeesTable_ButtonsWrapper","StyledEmployeesTable_P","StyledEmployeesTable_TableWrapper","StyledSearchEmployeesForm_templateObject","StyledSearchEmployeesForm_templateObject2","StyledSearchEmployeesForm_templateObject3","StyledSearchEmployeesForm_templateObject4","StyledSearchEmployeesForm_templateObject5","StyledSelectEnable_templateObject","StyledSelectEnable_templateObject2","SelectEnable","StyledSelectEnable_FieldWrapper","StyledSelectEnable_Label","defaultValue","SelectEnable_Option","SearchEmployeesForm","StyledSearchEmployeesForm_Wrapper","enable","StyledSearchEmployeesForm_StyledForm","StyledSearchEmployeesForm_FieldWrapper","StyledSearchEmployeesForm_Label","Employees_SelectEnable_SelectEnable","StyledSearchEmployeesForm_ButtonsWrapper","EmployeesPage","StyledEmployeesPage_Wrapper","StyledEmployeesPage_StyledCard","Employees_SearchEmployeesForm_SearchEmployeesForm","Employees_EmployeesTable_EmployeesTable","StyledNewEmployeeForm_templateObject","StyledNewEmployeeForm_templateObject2","profile","audit","StyledSelectRoles_templateObject","StyledSelectRoles_templateObject2","StyledSelectRoles_templateObject3","OptGroup","SelectRoles","_useSelect","initialRoles","selectedItems","setSelectedItems","useSelect","_useSelect2","handleChange","StyledSelectRoles_FieldWrapper","StyledSelectRoles_Label","SelectRoles_Option","StyledSelectRoles_StyledErrorMessage","StyledFormSwitch_templateObject","StyledFormSwitch_templateObject2","StyledSwitch","Switch","StyledFormSwitch_templateObject3","FormSwitch","defaultChecked","StyledFormSwitch_FieldWrapper","StyledFormSwitch_Label","NewEmployeeForm","StyledNewEmployeeForm_Wrapper","roles","of","components_SelectRoles_SelectRoles","components_FormSwitch_FormSwitch","StyledNewEmployeeForm_ButtonsWrapper","StyledEmployeeNewPage_templateObject","StyledEmployeeNewPage_templateObject2","EmployeeNewPage","StyledEmployeeNewPage_Wrapper","StyledEmployeeNewPage_StyledCard","Employees_NewEmployeeForm_NewEmployeeForm","StyledEmployeeDetailsPage_templateObject","StyledEmployeeDetailsPage_templateObject2","StyledEmployeeDetailsPage_templateObject3","StyledEmployeeDetailsPage_templateObject4","StyledEmployeeDetailsPage_templateObject5","StyledEmployeeDetailsPage_templateObject6","StyledEmployeeDetailsPage_templateObject7","StyledTag","Tag","StyledEmployeeDetailsPage_templateObject8","StyledEmployeeDetailsPage_templateObject9","EmployeeDetailsPage","employeeRoles","role","StyledEmployeeDetailsPage_Wrapper","StyledEmployeeDetailsPage_StyledCard","StyledEmployeeDetailsPage_ButtonsWrapper","StyledEmployeeDetailsPage_DetailsWrapper","StyledEmployeeDetailsPage_Item","StyledEmployeeDetailsPage_Label","StyledEmployeeDetailsPage_Value","StyledEmployeeDetailsPage_NoData","FetchEmployee","Employees_EmployeeDetailsPage_EmployeeDetailsPage","StyledEmployeeEditPage_templateObject","StyledEmployeeEditPage_templateObject2","StyledEditEmployeeForm_templateObject","StyledEditEmployeeForm_templateObject2","EditEmployeeForm","StyledEditEmployeeForm_Wrapper","StyledEditEmployeeForm_ButtonsWrapper","EmployeeEditPage","StyledEmployeeEditPage_Wrapper","StyledEmployeeEditPage_StyledCard","Employees_EditEmployeeForm_EditEmployeeForm","Employees_EmployeeEditPage_EmployeeEditPage","EmployeesRoutes","FetchEmployeeToEdit","AppRoutes","AppLayout","_useLayout","collapsed","setCollapsed","useLayout","_useLayout2","collapseMenuToggle","layout","trigger","collapsible","components_Navigation_Navigation","MenuUnfoldOutlined","MenuFoldOutlined","routes_AppRoutes","FetchAccountData","_useFetch","account","fetched","Reservations","Employees","Clients","Services","useFetch","layout_AppLayout_AppLayout","RootRoutes","components_ProtectAgainstLogout_ProtectAgainstLogout","components_ProtectAgainstLogin_ProtectAgainstLogin","INITIAL_STATE","action","produce","draftState","appReducer","combineReducers","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","routes_RootRoutes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c53c596b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.270d628f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/signup.c588981d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/forgot.8a0fd2ad.png\";","module.exports = __webpack_public_path__ + \"static/media/404.46e93061.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectAgainstLogout = ({ component: Component }) => {\r\n   const session = sessionStorage.getItem('session');\r\n\r\n   return <Route render={(props) => (\r\n      session ? <Redirect to='/user/reservations' /> : <Component {...props} />\r\n   )} />\r\n}\r\n \r\nexport default ProtectAgainstLogout;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectAgainstLogin = ({component: Component}) => {\r\n   const session = sessionStorage.getItem('session');\r\n\r\n   return <Route render={(props) => (\r\n      session ? <Component {...props} /> : <Redirect to='/auth/login' />\r\n   )} />\r\n}\r\n\r\nexport default ProtectAgainstLogin;","import styled from 'styled-components';\r\nimport background from '../../../assets/img/login.jpg'\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 100%;\r\n   min-height: 100vh;\r\n   height: 100%;\r\n   background-image: url(${background});\r\n   background-size: cover;\r\n   background-position: center;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n`\r\n\r\nexport const Content = styled.div`\r\n   width: 500px;\r\n   min-height: 100vh;\r\n   height: 100%;\r\n   background-color: white;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n\r\n   @media (max-width: 959px) {\r\n      width: 100%;\r\n   }\r\n`","import styled from 'styled-components';\r\n\r\nexport const Header = styled.h1`\r\n   margin: 50px 0 0 0;\r\n   font-weight: 600;\r\n   font-size: 24px;\r\n   font-family: segoe;\r\n   text-align: center;\r\n   letter-spacing: 2px;\r\n`","import * as React from 'react';\r\nimport * as S from './StyledHeader';\r\n\r\n \r\nconst Header = ({text}) => {\r\n   return (  \r\n      <S.Header>\r\n         {text}\r\n      </S.Header>\r\n   );\r\n}\r\n \r\nexport default Header;","const primary = '#1890ff';\r\nconst primaryLight = '#40A9FF';\r\nconst redColor = '#f5222d';\r\nconst hoverRedColor = '#ff4d4f';\r\nconst redColorDisabled = '#f86b73';\r\nconst silverColor = '#d9d9d9';\r\nconst black85 = 'rgba(0,0,0,0.85)';\r\nconst black65 = 'rgba(0,0,0,0.65)';\r\nconst disable = '#f5f5f5';\r\n\r\nexport default {\r\n   primary,\r\n   primaryLight,\r\n   redColor,\r\n   hoverRedColor,\r\n   redColorDisabled,\r\n   silverColor,\r\n   black85,\r\n   black65,\r\n   disable\r\n}","import styled from 'styled-components';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport colors from '../../../assets/colors';\r\n\r\n\r\nexport const LoginAsWrapper = styled.div`\r\n   width: 85%;\r\n   margin: 40px auto 0 auto;\r\n   font-size: 14px;\r\n   font-family: segoe;\r\n   display: flex;\r\n`\r\n\r\nexport const LoginAsButton = styled.p`\r\n   margin-left: 10px;\r\n   color: ${({selected_style}) => selected_style ? colors.primary : 'rgba(0,0,0,0.65)'};\r\n   cursor: pointer;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 0 auto;\r\n   color: ${colors.primary};\r\n   text-align: center;\r\n   font-size: 14px;\r\n   font-family: segoe;\r\n   text-decoration: none;\r\n   transition: .3s;\r\n\r\n   :hover {\r\n      color: ${colors.primaryLight}\r\n      transition: .3s;\r\n   }\r\n`","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport { Input } from 'formik-antd'\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 85%;\r\n   height: 100%;\r\n   margin: 0 auto 20px auto;\r\n`\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 100%;\r\n   height: 60px;\r\n   margin: 0 0 5px 0;\r\n   color: rgba(0,0,0,0.65);\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const StyledInput = styled(Input)`\r\n   padding: 18px 10px;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`\r\n\r\nexport const Error = styled.p`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`\r\n\r\nexport const CheckboxWrapper = styled.div`\r\n   margin: 5px 0 0 0;\r\n\r\n   display: flex;\r\n   align-items: center;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   font-family: segoe;\r\n   font-size: 14px;\r\n   color: rgba(0,0,0,0.65);\r\n`\r\n\r\nexport const SubmitButtonWrapper = styled.div`\r\n   margin: 40px 0 0 0;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin-left: auto;\r\n   color: ${colors.primary};\r\n   text-decoration: none;\r\n   font-family: segoe;\r\n   font-size: 14px;\r\n   transition: .3s;\r\n\r\n   :hover {\r\n      color: ${colors.primaryLight};\r\n      transition: .3s;\r\n   }\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 10px 0 30px 0;\r\n`","import React from 'react';\r\nimport {Alert} from 'antd';\r\nimport * as S from './StyledFormAlert';\r\n\r\nconst FormAlert = ({result}) => {\r\n   const {success, error, successText} = result;\r\n\r\n   return (  \r\n      <S.Wrapper>\r\n         {error && (\r\n            <Alert \r\n               message={'Error'}\r\n               description={error} \r\n               type='error'\r\n               showIcon \r\n            />\r\n         )}\r\n         {success && (\r\n            <Alert \r\n               message='Success'\r\n               description={successText} \r\n               type=\"success\"\r\n               showIcon \r\n            />\r\n         )}\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default FormAlert;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Form, Checkbox, SubmitButton } from 'formik-antd';\r\n\r\nimport * as S from './StyledManagerLoginForm';\r\n\r\nimport FormAlert from '../../FormAlert/FormAlert';\r\n\r\n\r\nconst useForm = () => {\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [result, setResult] = React.useState({})\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n      \r\n      const response = await axios.post('/api/auth/login', values)\r\n      const {remember, email} = values\r\n      const {success} = response.data\r\n\r\n      if(remember) localStorage.setItem('user', email)\r\n      if(success) sessionStorage.setItem('session', true)\r\n\r\n      setLoading(false)\r\n      setResult(response.data)\r\n   }\r\n\r\n   return [loading, result, submitForm]\r\n}\r\n\r\n\r\n\r\nconst ManagerLoginForm = () => {\r\n   const [loading, result, submitForm] = useForm();\r\n\r\n   return (  \r\n      <S.Wrapper>\r\n         {result.success && <Redirect to='/user/reservations' />}\r\n         <FormAlert\r\n            result={result}\r\n         />\r\n         <Formik\r\n            initialValues={{\r\n               email: localStorage.getItem('user') || '',\r\n               password: '',\r\n               remember: false\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n               email: Yup\r\n                  .string()\r\n                  .email()\r\n                  .required('Email is required'),\r\n               password: Yup\r\n                  .string()\r\n                  .required('Password is required'),\r\n            })}\r\n            onSubmit={values => {\r\n               submitForm(values)\r\n            }}     \r\n         >\r\n            {({handleSubmit}) => (\r\n               <Form onSubmit={handleSubmit}>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='email' \r\n                        type='text' \r\n                        placeholder='Email' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='email' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='password' \r\n                        type='password' \r\n                        placeholder='Password' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='password' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.CheckboxWrapper>\r\n                     <Checkbox name='remember'>Remember me</Checkbox>\r\n                     <S.StyledLink to='/auth/forgot-password'>\r\n                        Forgot password\r\n                     </S.StyledLink>\r\n                  </S.CheckboxWrapper>\r\n                  <S.SubmitButtonWrapper>\r\n                     <SubmitButton block loading={loading}>\r\n                        Log in\r\n                     </SubmitButton>\r\n                  </S.SubmitButtonWrapper>\r\n               </Form>\r\n            )}\r\n         </Formik>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n\r\nexport default ManagerLoginForm;","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport { Input } from 'formik-antd'\r\n\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 85%;\r\n   height: 100%;\r\n   margin: 25px auto 20px auto;\r\n`\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 100%;\r\n   height: 60px;\r\n   margin: 0 0 5px 0;\r\n   color: rgba(0,0,0,0.65);\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const StyledInput = styled(Input)`\r\n   padding: 18px 10px;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`\r\n\r\nexport const SubmitButtonWrapper = styled.div`\r\n   margin: 10px 0 0 0;\r\n`","import React from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport * as S from './StyledEmployeeLoginForm'\r\n\r\nconst EmployeeLoginForm = () => {\r\n   return (  \r\n      <Formik\r\n         initialValues={{\r\n            username: '',\r\n            password: ''\r\n         }}\r\n         validationSchema={Yup.object().shape({\r\n            username: Yup\r\n               .string()\r\n               .required('Email is required'),\r\n            password: Yup\r\n               .string()\r\n               .required('Password is required'),\r\n         })}\r\n         onSubmit={values => {\r\n            //handleOnSubmit(values)\r\n            console.log(values)\r\n         }}     \r\n      >\r\n         {({handleSubmit}) => (\r\n            <S.Wrapper>\r\n               <Form onSubmit={handleSubmit}>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='username' \r\n                        type='text' \r\n                        placeholder='Username' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='username' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='password' \r\n                        type='password' \r\n                        placeholder='Password' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='password' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.SubmitButtonWrapper>\r\n                     <SubmitButton block>\r\n                        Log in\r\n                     </SubmitButton>\r\n                  </S.SubmitButtonWrapper>\r\n               </Form>\r\n            </S.Wrapper>\r\n         )}\r\n      </Formik>\r\n   );\r\n}\r\n \r\nexport default EmployeeLoginForm;","import * as React from 'react';\r\n\r\nimport * as S from './StyledLoginPanel';\r\nimport ManagerLoginForm from '../ManagerLoginForm/ManagerLoginForm';\r\nimport EmployeeLoginForm from '../EmployeeLoginForm/EmployeeLoginForm';\r\n\r\n\r\nconst useLoginType = () => {\r\n   const [loginAs, setLoginAs] = React.useState('manager');\r\n   const handleOnClick = (loginAs) => {\r\n      setLoginAs(loginAs)\r\n   }\r\n   return [loginAs, handleOnClick]\r\n}\r\n\r\n\r\nconst LoginPanel = () => {\r\n   const [loginAs, handleOnClick] = useLoginType();\r\n\r\n   return (  \r\n      <>\r\n         <S.LoginAsWrapper>\r\n            Log in as: \r\n            <S.LoginAsButton  \r\n               selected_style={loginAs === 'manager'}\r\n               onClick={() => handleOnClick('manager')}   \r\n            >\r\n               Manager\r\n            </S.LoginAsButton>\r\n            <S.LoginAsButton\r\n               selected_style={loginAs === 'employee'}\r\n               onClick={() => handleOnClick('employee')}\r\n            >\r\n               Employee\r\n            </S.LoginAsButton>\r\n         </S.LoginAsWrapper>\r\n         {loginAs === 'manager' ? <ManagerLoginForm /> : <EmployeeLoginForm />} \r\n         {loginAs === 'manager' && (\r\n            <S.StyledLink to='/auth/signup'>\r\n               Create an account\r\n            </S.StyledLink>        \r\n         )}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default LoginPanel;","import * as React from 'react';\r\nimport * as S from './StyledLoginPage';\r\n\r\nimport Header from '../../../components/Header/Header';\r\nimport LoginPanel from '../../../components/Auth/LoginPanel/LoginPanel';\r\n\r\n \r\nconst LoginPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <S.Content>\r\n            <Header text='Reservattio' /> \r\n            <LoginPanel />\r\n         </S.Content>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default LoginPage;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport background from '../../../assets/img/signup.jpg';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 100%;\r\n   min-height: 100vh;\r\n   height: 100%;\r\n   background-image: url(${background});\r\n   background-size: cover;\r\n   background-position: center;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n`\r\n\r\nexport const Content = styled.div`\r\n   width: 500px;\r\n   min-height: 100vh;\r\n   height: 100%;\r\n   background-color: white;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n\r\n   @media (max-width: 959px) {\r\n      width: 100%;\r\n   }\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 20px auto 0 auto;\r\n   color: ${colors.primary};\r\n   font-size: 16px;\r\n   font-family: segoe;\r\n   text-decoration: none;\r\n   transition: .3s;\r\n\r\n   :hover {\r\n      color: ${colors.primaryLight}\r\n      transition: .3s;\r\n   }\r\n`","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport { Input } from 'formik-antd'\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 85%;\r\n   height: 100%;\r\n   margin: 45px auto 20px auto;\r\n`\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 100%;\r\n   min-height: 60px;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n   color: rgba(0,0,0,0.65);\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const StyledInput = styled(Input)`\r\n   padding: 18px 10px;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`\r\n\r\nexport const Error = styled.p`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const useAuthForm = (url) => {\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [result, setResult] = React.useState({})\r\n   \r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n      \r\n      const response = await axios.post(url, values)\r\n      \r\n      setResult(response.data)\r\n      setLoading(false)\r\n   }\r\n   return [loading, result, submitForm]\r\n}","import React from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\n\r\nimport * as S from './StyledSignupForm';\r\nimport {useAuthForm} from '../../../hooks/useAuthForm';\r\n\r\nimport FormAlert from '../../FormAlert/FormAlert';\r\n\r\n\r\nconst SignupForm = () => {\r\n   const [loading, result, submitForm] = useAuthForm('/api/auth/signup');\r\n  \r\n   return (\r\n      <S.Wrapper> \r\n         <FormAlert\r\n            result={result}\r\n         />\r\n         <Formik\r\n            initialValues={{\r\n               name: '',\r\n               surname: '',\r\n               email: '',\r\n               password: '',\r\n               confirmPassword: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n               name: Yup\r\n                  .string()\r\n                  .min(3, 'Minimum 3 characters')\r\n                  .required('Name is required'),\r\n               surname: Yup\r\n                  .string()\r\n                  .min(3, 'Minimum 3 characters')\r\n                  .required('Surname is required'),\r\n               email: Yup\r\n                  .string()\r\n                  .email('Email must be a valid email')\r\n                  .required('Email is required'),\r\n               password: Yup\r\n                  .string()\r\n                  .min(8, 'Minimum 8 characters')\r\n                  .matches(/^(?=.*[A-Z])/, 'Must contain at least one uppercase character')\r\n                  .matches(/^(?=.*[0-9])/, 'Must contain at least one numeric character')\r\n                  .matches(/^(?=.*[!@#$%^&*()])/, 'Must contain at least one special character')\r\n                  .required('Password is required'),\r\n               confirmPassword: Yup\r\n                  .string()\r\n                  .required('Password must match')\r\n                  .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n            })}\r\n            onSubmit={values => {\r\n               submitForm(values)   \r\n            }}\r\n         >\r\n            {({handleSubmit}) => (\r\n               <Form onSubmit={handleSubmit}>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='name' \r\n                        type='text' \r\n                        placeholder='Name' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='name' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='surname' \r\n                        type='text' \r\n                        placeholder='Surname' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='surname' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='email' \r\n                        type='text' \r\n                        placeholder='Email' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='email' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='password' \r\n                        type='password' \r\n                        placeholder='Password' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='password' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='confirmPassword' \r\n                        type='password' \r\n                        placeholder='Confirm password' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='confirmPassword' \r\n                        component='p' \r\n                     />\r\n                  </S.FieldWrapper>        \r\n                  <SubmitButton block loading={loading}>\r\n                     Sign up\r\n                  </SubmitButton>\r\n               </Form>\r\n            )}\r\n         </Formik>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default SignupForm;","import React from 'react';\r\nimport * as S from './StyledSignupPage';\r\n\r\nimport Header from '../../../components/Header/Header';\r\nimport SignupForm from '../../../components/Auth/SignupForm/SignupForm';\r\n\r\nconst SignupPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <S.Content>\r\n            <Header text='Reservattio'/>\r\n            <SignupForm />\r\n            <S.StyledLink to='/auth/login'>\r\n               Already have an account? Log in.\r\n            </S.StyledLink>\r\n         </S.Content>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default SignupPage;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport background from '../../../assets/img/forgot.png';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 100%;\r\n   min-height: 100vh;\r\n   height: 100%;\r\n   background-image: url(${background});\r\n   background-size: cover;\r\n   background-position: center;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n`\r\n\r\nexport const Content = styled.div`\r\n   width: 500px;\r\n   min-height: 100vh;\r\n   height: 100%;\r\n   background-color: white;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n\r\n   @media (max-width: 959px) {\r\n      width: 100%;\r\n   }\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 0 auto;\r\n   color: ${colors.primary};\r\n   text-align: center;\r\n   font-size: 16px;\r\n   font-family: segoe;\r\n   text-decoration: none;\r\n   transition: .3s;\r\n\r\n   :hover {\r\n      color: ${colors.primaryLight}\r\n      transition: .3s;\r\n   }\r\n`","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport { Input } from 'formik-antd'\r\n\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 85%;\r\n   height: 100%;\r\n   margin: 45px auto 20px auto;\r\n`\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 100%;\r\n   height: 60px;\r\n   margin-bottom: 8px;\r\n   color: rgba(0,0,0,0.65);\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const StyledInput = styled(Input)`\r\n   padding: 18px 10px;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport {Formik} from 'formik';\r\nimport { Form, SubmitButton } from 'formik-antd'\r\nimport * as Yup from 'yup';\r\n\r\nimport {useAuthForm} from '../../../hooks/useAuthForm';\r\nimport * as S from './StyledForgotPasswordForm';\r\n\r\nimport FormAlert from '../../FormAlert/FormAlert';\r\n\r\n\r\nconst ForgotPasswordForm = () => {\r\n   const [loading, result, submitForm] = useAuthForm('/api/auth/forgot-password')\r\n\r\n   return (  \r\n      <S.Wrapper>\r\n         <FormAlert\r\n            result={result}\r\n         />\r\n         <Formik\r\n            initialValues={{\r\n               email: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n               email: Yup\r\n                  .string()\r\n                  .email('Email must be a valid email')\r\n                  .required('Email is required'),\r\n            })}\r\n            onSubmit={values => {\r\n               submitForm(values)\r\n            }}\r\n         >\r\n            {({handleSubmit}) => (\r\n               <Form onSubmit={handleSubmit}>\r\n                  <S.FieldWrapper>\r\n                     <S.StyledInput \r\n                        name='email' \r\n                        type='text' \r\n                        placeholder='Email' \r\n                     />\r\n                     <S.StyledErrorMessage \r\n                        name='email' \r\n                        component='div' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <SubmitButton block loading={loading}>\r\n                     Send password reset email\r\n                  </SubmitButton>\r\n               </Form>\r\n            )}\r\n         </Formik>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ForgotPasswordForm;","import React from 'react';\r\nimport * as S from './StyledForgotPasswordPage';\r\n\r\nimport Header from '../../../components/Header/Header';\r\nimport ForgotPasswordForm from '../../../components/Auth/ForgotPasswordForm/ForgotPasswordForm';\r\n\r\nconst ForgotPasswordPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <S.Content>\r\n            <Header\r\n               text='Reservattio'\r\n            />\r\n            <ForgotPasswordForm />\r\n            <S.StyledLink to='/auth/login'>\r\n               Cancel\r\n            </S.StyledLink>\r\n         </S.Content>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ForgotPasswordPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 100%;\r\n   min-height: 100vh;\r\n   height: 100%;\r\n   background-color: white;\r\n   \r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n\r\n   @media (max-width: 959px) {\r\n      flex-direction: column;\r\n   }\r\n`\r\n\r\nexport const Img = styled.img`\r\n   width: 478px;\r\n   height: 406px;\r\n\r\n   @media (max-width: 959px) {\r\n      width: 239px;\r\n      height: 203px;\r\n   }\r\n`\r\n\r\nexport const TextWrapper = styled.div`\r\n   height: 300px;\r\n   margin: 0 0 0 60px;\r\n   \r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n\r\n   @media (max-width: 959px) {\r\n      margin: 0;\r\n      padding: 0 20px;\r\n      justify-content: flex-start;\r\n   }\r\n`\r\n\r\nexport const Header = styled.h1`\r\n   margin-bottom: 24px;\r\n   font-weight: normal;\r\n   font-size: 60px;\r\n   font-family: nobel;\r\n   color: #434E59;\r\n\r\n   @media (max-width: 959px) {\r\n      font-size: 40px;\r\n   }\r\n`\r\n\r\nexport const Text = styled.p`\r\n   margin-top: -10px;\r\n   font-size: 20px;\r\n   font-family: segoe;\r\n   color: #595959;\r\n\r\n   @media (max-width: 959px) {\r\n      font-size: 14px;\r\n   }\r\n`","import * as React from 'react';\r\nimport * as S from './StyledErrorPage';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button } from 'antd';\r\n\r\nimport errorImg from '../../assets/img/404.png'\r\n\r\nconst ErrorPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <S.Img src={errorImg} />\r\n         <S.TextWrapper>\r\n            <S.Header>\r\n               404\r\n            </S.Header>\r\n            <S.Text>\r\n               Sorry, the page you visited does not exist\r\n            </S.Text>\r\n            <Link to='/auth/login'>\r\n               <Button type='primary'>\r\n                  Back to home\r\n               </Button>\r\n            </Link>\r\n         </S.TextWrapper>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ErrorPage;","import * as React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport LoginPage from '../pages/Auth/LoginPage/LoginPage';\r\nimport SignupPage from '../pages/Auth/SignupPage/SignupPage';\r\nimport ForgotPasswordPage from '../pages/Auth/ForgotPasswordPage/ForgotPasswordPage';\r\nimport ErrorPage from '../pages/ErrorPage/ErrorPage';\r\n\r\n \r\nconst AuthRoutes = () => {\r\n   return (  \r\n      <Switch>\r\n         <Route exact path='/auth/login' component={LoginPage} /> \r\n         <Route exact path='/auth/signup' component={SignupPage} /> \r\n         <Route exact path='/auth/forgot-password' component={ForgotPasswordPage} />\r\n         <Route component={ErrorPage} />\r\n      </Switch>\r\n   )\r\n}\r\n \r\nexport default AuthRoutes;","const LOADING_SERVICES = 'LOADING_SERVICES';\r\nconst FETCH_SERVICES = 'FETCH_SERVICES';\r\nconst ADD_SERVICE = 'ADD_SERVICE';\r\nconst EDIT_SERVICE = 'EDIT_SERVICE';\r\nconst DELETE_SERVICE = 'DELETE_SERVICE';\r\nconst IS_SEARCHING_SERVICES = 'IS_SEARCHING_SERVICES';\r\nconst SEARCH_SERVICES = 'SEARCH_SERVICES';\r\nconst DELETE_SEARCH_SERVICE = 'DELETE_SEARCH_SERVICE';\r\nconst EDIT_SEARCH_SERVICE = 'EDIT_SEARCH_SERVICE';\r\n\r\nexport default {\r\n   LOADING_SERVICES,\r\n   FETCH_SERVICES,\r\n   ADD_SERVICE,\r\n   EDIT_SERVICE,\r\n   DELETE_SERVICE,\r\n   IS_SEARCHING_SERVICES,\r\n   SEARCH_SERVICES,\r\n   DELETE_SEARCH_SERVICE,\r\n   EDIT_SEARCH_SERVICE\r\n}\r\n","import types from './types';\r\n\r\nconst loadingServices = item => ({\r\n   type: types.LOADING_SERVICES, item\r\n})\r\n\r\nconst addFetchedServices = item => ({\r\n   type: types.FETCH_SERVICES, item\r\n})\r\n\r\nconst addService = item => ({\r\n   type: types.ADD_SERVICE, item\r\n})\r\n\r\nconst editService = item => ({\r\n   type: types.EDIT_SERVICE, item\r\n})\r\n\r\nconst deleteService = item => ({\r\n   type: types.DELETE_SERVICE, item\r\n})\r\n\r\nconst isSearchingServices = item => ({\r\n   type: types.IS_SEARCHING_SERVICES, item\r\n})\r\n\r\nconst searchServices = item => ({\r\n   type: types.SEARCH_SERVICES, item\r\n})\r\n\r\nconst deleteSearchService = item => ({\r\n   type: types.DELETE_SEARCH_SERVICE, item\r\n})\r\n\r\nconst editSearchService = item => ({\r\n   type: types.EDIT_SEARCH_SERVICE, item\r\n})\r\n\r\nexport default {\r\n   loadingServices,\r\n   addFetchedServices,\r\n   addService,\r\n   editService,\r\n   deleteService,\r\n   isSearchingServices,\r\n   searchServices,\r\n   deleteSearchService,\r\n   editSearchService\r\n}\r\n","import actions from './actions';\r\n\r\nexport const fetchedServicesThunk = (data) => (dispatch) => {\r\n   dispatch(actions.addFetchedServices(data))\r\n}\r\n\r\nexport default {\r\n   fetchedServicesThunk\r\n}","const LOADING_CLIENTS = 'LOADING_CLIENTS';\r\nconst FETCH_CLIENTS = 'FETCH_CLIENTS';\r\nconst ADD_CLIENT = 'ADD_CLIENT';\r\nconst EDIT_CLIENT = 'EDIT_CLIENT';\r\nconst DELETE_CLIENT = 'DELETE_CLIENT';\r\nconst IS_SEARCHING_CLIENTS = 'IS_SEARCHING_CLIENTS';\r\nconst SEARCH_CLIENTS = 'SEARCH_CLIENTS';\r\nconst DELETE_SEARCH_CLIENT = 'DELETE_SEARCH_CLIENT';\r\nconst EDIT_SEARCH_CLIENT = 'EDIT_SEARCH_CLIENT';\r\nconst IMPORT_CLIENTS = 'IMPORT_CLIENTS';\r\n\r\nexport default {\r\n   LOADING_CLIENTS,\r\n   FETCH_CLIENTS,\r\n   ADD_CLIENT,\r\n   EDIT_CLIENT,\r\n   DELETE_CLIENT,\r\n   IS_SEARCHING_CLIENTS,\r\n   SEARCH_CLIENTS,\r\n   DELETE_SEARCH_CLIENT,\r\n   EDIT_SEARCH_CLIENT,\r\n   IMPORT_CLIENTS\r\n}\r\n","import types from './types';\r\n\r\nconst loadingClients = item => ({\r\n   type: types.LOADING_CLIENTS, item\r\n})\r\n\r\nconst addFetchedClients = item => ({\r\n   type: types.FETCH_CLIENTS, item\r\n})\r\n\r\nconst addClient = item => ({\r\n   type: types.ADD_CLIENT, item\r\n})\r\n\r\nconst editClient = item => ({\r\n   type: types.EDIT_CLIENT, item\r\n})\r\n\r\nconst deleteClient = item => ({\r\n   type: types.DELETE_CLIENT, item\r\n})\r\n\r\nconst isSearchingClients = item => ({\r\n   type: types.IS_SEARCHING_CLIENTS, item\r\n})\r\n\r\nconst searchClients = item => ({\r\n   type: types.SEARCH_CLIENTS, item\r\n})\r\n\r\nconst deleteSearchClient = item => ({\r\n   type: types.DELETE_SEARCH_CLIENT, item\r\n})\r\n\r\nconst editSearchClient = item => ({\r\n   type: types.EDIT_SEARCH_CLIENT, item\r\n})\r\n\r\n\r\nconst importClients = item => ({\r\n   type: types.IMPORT_CLIENTS, item\r\n})\r\n\r\nexport default {\r\n   loadingClients,\r\n   addFetchedClients,\r\n   addClient,\r\n   editClient,\r\n   deleteClient,\r\n   isSearchingClients,\r\n   searchClients,\r\n   deleteSearchClient,\r\n   editSearchClient,\r\n   importClients\r\n}\r\n","import actions from './actions';\r\n\r\nexport const fetchedClientsThunk = (data) => (dispatch) => {\r\n   dispatch(actions.addFetchedClients(data))\r\n}\r\n\r\nexport default {\r\n   fetchedClientsThunk\r\n}","const LOADING_EMPLOYEES = 'LOADING_EMPLOYEES';\r\nconst FETCH_EMPLOYEES = 'FETCH_EMPLOYEES';\r\nconst ADD_EMPLOYEE = 'ADD_EMPLOYEE';\r\nconst EDIT_EMPLOYEE = 'EDIT_EMPLOYEE';\r\nconst DELETE_EMPLOYEE = 'DELETE_EMPLOYEE';\r\nconst IS_SEARCHING_EMPLOYEES = 'IS_SEARCHING_EMPLOYEES';\r\nconst SEARCH_EMPLOYEES = 'SEARCH_EMPLOYEES';\r\nconst DELETE_SEARCH_EMPLOYEE = 'DELETE_SEARCH_EMPLOYEE';\r\nconst EDIT_SEARCH_EMPLOYEE = 'EDIT_SEARCH_EMPLOYEE';\r\n\r\nexport default {\r\n   LOADING_EMPLOYEES,\r\n   FETCH_EMPLOYEES,\r\n   ADD_EMPLOYEE,\r\n   EDIT_EMPLOYEE,\r\n   DELETE_EMPLOYEE,\r\n   IS_SEARCHING_EMPLOYEES,\r\n   SEARCH_EMPLOYEES,\r\n   DELETE_SEARCH_EMPLOYEE,\r\n   EDIT_SEARCH_EMPLOYEE\r\n}\r\n","import types from './types';\r\n\r\nconst loadingEmployees = item => ({\r\n   type: types.LOADING_EMPLOYEES, item\r\n})\r\n\r\nconst addFetchedEmployees = item => ({\r\n   type: types.FETCH_EMPLOYEES, item\r\n})\r\n\r\nconst addEmployee = item => ({\r\n   type: types.ADD_EMPLOYEE, item\r\n})\r\n\r\nconst editEmployee = item => ({\r\n   type: types.EDIT_EMPLOYEE, item\r\n})\r\n\r\nconst deleteEmployee = item => ({\r\n   type: types.DELETE_EMPLOYEE, item\r\n})\r\n\r\nconst isSearchingEmployees = item => ({\r\n   type: types.IS_SEARCHING_EMPLOYEES, item\r\n})\r\n\r\nconst searchEmployees = item => ({\r\n   type: types.SEARCH_EMPLOYEES, item\r\n})\r\n\r\nconst deleteSearchEmployee = item => ({\r\n   type: types.DELETE_SEARCH_EMPLOYEE, item\r\n})\r\n\r\nconst editSearchEmployee = item => ({\r\n   type: types.EDIT_SEARCH_EMPLOYEE, item\r\n})\r\n\r\nexport default {\r\n   loadingEmployees,\r\n   addFetchedEmployees,\r\n   addEmployee,\r\n   editEmployee,\r\n   deleteEmployee,\r\n   isSearchingEmployees,\r\n   searchEmployees,\r\n   deleteSearchEmployee,\r\n   editSearchEmployee\r\n}\r\n","import actions from './actions';\r\n\r\nexport const fetchedEmployeesThunk = (data) => (dispatch) => {\r\n   dispatch(actions.addFetchedEmployees(data))\r\n}\r\n\r\nexport default {\r\n   fetchedEmployeesThunk\r\n}","const LOADING_RESERVATIONS = 'LOADING_RESERVATIONS';\r\nconst FETCH_RESERVATIONS = 'FETCH_RESERVATIONS';\r\nconst ADD_RESERVATION = 'ADD_RESERVATION';\r\nconst EDIT_RESERVATION = 'EDIT_RESERVATION';\r\nconst DELETE_RESERVATION = 'DELETE_RESERVATION';\r\nconst IS_SEARCHING_RESERVATIONS = 'IS_SEARCHING_RESERVATIONS';\r\nconst SEARCH_RESERVATIONS = 'SEARCH_RESERVATIONS';\r\nconst DELETE_SEARCH_RESERVATION = 'DELETE_SEARCH_RESERVATION';\r\nconst EDIT_SEARCH_RESERVATION = 'EDIT_SEARCH_RESERVATION';\r\n\r\nexport default {\r\n   LOADING_RESERVATIONS,\r\n   FETCH_RESERVATIONS,\r\n   ADD_RESERVATION,\r\n   EDIT_RESERVATION,\r\n   DELETE_RESERVATION,\r\n   IS_SEARCHING_RESERVATIONS,\r\n   SEARCH_RESERVATIONS,\r\n   DELETE_SEARCH_RESERVATION,\r\n   EDIT_SEARCH_RESERVATION\r\n}\r\n","import types from './types';\r\n\r\nconst loadingReservations = item => ({\r\n   type: types.LOADING_RESERVATIONS, item\r\n})\r\n\r\nconst addFetchedReservations = item => ({\r\n   type: types.FETCH_RESERVATIONS, item\r\n})\r\n\r\nconst addReservation = item => ({\r\n   type: types.ADD_RESERVATION, item\r\n})\r\n\r\nconst editReservation = item => ({\r\n   type: types.EDIT_RESERVATION, item\r\n})\r\n\r\nconst deleteReservation = item => ({\r\n   type: types.DELETE_RESERVATION, item\r\n})\r\n\r\nconst isSearchingReservations = item => ({\r\n   type: types.IS_SEARCHING_RESERVATIONS, item\r\n})\r\n\r\nconst searchReservations = item => ({\r\n   type: types.SEARCH_RESERVATIONS, item\r\n})\r\n\r\nconst deleteSearchReservation = item => ({\r\n   type: types.DELETE_SEARCH_RESERVATION, item\r\n})\r\n\r\nconst editSearchReservation = item => ({\r\n   type: types.EDIT_SEARCH_RESERVATION, item\r\n})\r\n\r\n\r\nexport default {\r\n   loadingReservations,\r\n   addFetchedReservations,\r\n   addReservation,\r\n   editReservation,\r\n   deleteReservation,\r\n   isSearchingReservations,\r\n   searchReservations,\r\n   deleteSearchReservation,\r\n   editSearchReservation\r\n}\r\n","import actions from './actions';\r\n\r\nexport const fetchedReservationsThunk = (data) => (dispatch) => {\r\n   dispatch(actions.addFetchedReservations(data))\r\n}\r\n\r\nexport default {\r\n   fetchedReservationsThunk\r\n}","import styled from 'styled-components';\r\nimport {Layout} from 'antd';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nexport const StyledLayout = styled(Layout)`\r\n   background-color: #f0f2f5;\r\n   min-height: 100vh;\r\n\r\n   .ant-layout-content {\r\n      margin: 24px;\r\n   }\r\n`\r\n\r\nexport const SiderWrapper = styled.div`\r\n   .ant-layout-sider {\r\n      min-height: 100vh;\r\n      height: 100%;\r\n      border-right-color: rgb(232, 232, 232);\r\n      border-right-width: 1px;\r\n      border-right-style: solid;\r\n   }\r\n\r\n   .ant-menu-inline {\r\n      border: 0;\r\n   }\r\n`;\r\n\r\nexport const Logo = styled.div`\r\n   height: 32px;\r\n   margin: 16px;\r\n   background: rgba(255, 255, 255, 0.2);\r\n`\r\n\r\nexport const H2 = styled.h2`\r\n   text-align: center;\r\n   display: ${({hide}) => hide ? 'none' : 'block'}\r\n`\r\n\r\n\r\nexport const StyledHeader = styled(Header)`\r\n   background: #fff;\r\n   padding: 0;\r\n   border-bottom: 1px solid #e9e9e9;\r\n   display: flex;\r\n   justify-content: space-between;\r\n\r\n\r\n   .user-dropdown {\r\n      padding: 0 24px;\r\n      cursor: pointer;\r\n      display: inline-block;\r\n      transition: all 0.3s;\r\n      height: 100%;\r\n      > i {\r\n         vertical-align: middle;\r\n         color: @text-color;\r\n      }\r\n      &:hover {\r\n         background: rgba(0, 0, 0, 0.025);\r\n      }\r\n      :global(&.ant-popover-open) {\r\n         background: rgba(0, 0, 0, 0.025);\r\n      }\r\n   }\r\n   .user-dropdown-avatar {\r\n      margin: 20px 8px 20px 0;\r\n      vertical-align: top;\r\n   }\r\n   @media (max-width: 576px) {\r\n      .user-dropdown-text {\r\n         display: none;\r\n      }\r\n   }\r\n   .trigger {\r\n      font-size: 20px;\r\n      line-height: 64px;\r\n      padding: 0 24px;\r\n      cursor: pointer;\r\n      transition: color 0.3s;\r\n      &:hover {\r\n         color: var(--primary-color);\r\n      }\r\n   }\r\n`;","import styled from 'styled-components';\r\nimport {Menu} from 'antd'\r\n\r\nexport const StyledMenu = styled(Menu)`\r\n   .menu-item {\r\n      height: 50px;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n   }\r\n`\r\n\r\nexport const Span = styled.span`\r\n   font-size: 14px;\r\n`","import React from 'react';\r\nimport {Menu} from 'antd';\r\nimport {UserOutlined, TeamOutlined, FieldTimeOutlined, CopyOutlined, TagOutlined} from '@ant-design/icons';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport * as S from './StyledNavigation';\r\n\r\nconst Navigation = () => {\r\n   const iconStyle = {'fontSize': '18px'}\r\n\r\n   return (  \r\n      <S.StyledMenu theme=\"light\" mode=\"inline\" >\r\n         <Menu.Item key=\"1\" className='menu-item'>\r\n            <Link to='/user/employees'>\r\n               <UserOutlined style={iconStyle} />\r\n               <S.Span>Employees</S.Span>    \r\n            </Link>               \r\n         </Menu.Item>\r\n         <Menu.Item key=\"2\" className='menu-item'>\r\n            <Link to='/user/clients'>\r\n               <TeamOutlined style={iconStyle} />\r\n               <S.Span>Clients</S.Span>\r\n            </Link>               \r\n         </Menu.Item>\r\n         <Menu.Item key=\"3\" className='menu-item'>\r\n            <Link to='/user/reservations'>\r\n               <FieldTimeOutlined style={iconStyle} />\r\n               <S.Span>Reservations</S.Span>\r\n            </Link>               \r\n         </Menu.Item>\r\n         <Menu.Item key=\"4\" className='menu-item'>\r\n            <Link to='/user/services'>\r\n               <TagOutlined style={iconStyle} />\r\n               <S.Span>Services</S.Span>\r\n            </Link>               \r\n         </Menu.Item>\r\n         <Menu.Item key=\"5\" className='menu-item'>\r\n            <Link to='/user/audit'>\r\n               <CopyOutlined style={iconStyle} />\r\n               <S.Span>Audit Logs</S.Span>\r\n            </Link>               \r\n         </Menu.Item>\r\n      </S.StyledMenu> \r\n   );\r\n}\r\n \r\nexport default Navigation;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: ${({margin_style}) => margin_style ? '0 0 50px 0' : '0 0 30px 0'}\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 25px 0 15px 0;\r\n`","import React from 'react';\r\nimport {Breadcrumb as AntdBreadcrumb} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport * as S from './StyledBreadcrumb';\r\n\r\nconst Breadcrumb = ({links, text}) => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <AntdBreadcrumb>\r\n            {links.map((breadcrumb, index) => \r\n               <AntdBreadcrumb.Item key={index}>\r\n                  <Link to={breadcrumb.to}>\r\n                     {breadcrumb.label}\r\n                  </Link>\r\n               </AntdBreadcrumb.Item>\r\n            )}\r\n            <AntdBreadcrumb.Item>\r\n               {text}\r\n            </AntdBreadcrumb.Item>\r\n         </AntdBreadcrumb>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default Breadcrumb;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 0 30px 0;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 0 10px 0 0;\r\n`","import React from 'react';\r\nimport ReactExport from 'react-export-excel';\r\nimport {Button} from 'antd';\r\nimport {FileExcelOutlined} from '@ant-design/icons';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\n\r\nconst ClientsExportToExcel = ({fileName, buttonText, clients}) => {\r\n   return (  \r\n      <ExcelFile \r\n         element={\r\n            <Button type='default'>\r\n               <FileExcelOutlined />\r\n               {buttonText}\r\n            </Button>\r\n         }\r\n         filename={fileName} \r\n         fileExtension='xlsx'\r\n      >\r\n         <ExcelSheet data={clients} name={fileName}>\r\n            <ExcelColumn label='Name' value='name' />\r\n            <ExcelColumn label='Surname' value='surname' />\r\n            <ExcelColumn label='Phone' value='phone' />\r\n            <ExcelColumn label='Note' value='note' />\r\n         </ExcelSheet>\r\n      </ExcelFile>\r\n   );\r\n}\r\n \r\nexport default ClientsExportToExcel;\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport ClientsExportToExcel from '../Clients/ClientsExportToExcel/ClientsExportToExcel';\r\n\r\nconst ExportToExcel = ({entity}) => {\r\n   const {clients} = useSelector(state => state.clientsReducer)\r\n\r\n   return ( \r\n      <> \r\n         {entity === 'clients' &&\r\n            <ClientsExportToExcel \r\n               fileName={'clients_export'}\r\n               buttonText='Export to excel'\r\n               clients={clients}\r\n            />\r\n         }\r\n      </>\r\n   );\r\n}\r\n \r\nexport default ExportToExcel;","import React from 'react';\r\nimport {Button} from 'antd';\r\nimport {PlusOutlined, UploadOutlined, CopyOutlined} from '@ant-design/icons';\r\n\r\nimport * as S from './StyledButtonsGroup';\r\n\r\nimport ExportToExcel from '../ExportToExcel/ExportToExcel';\r\n\r\nconst ButtonsGroup = ({entity, showImport, showExport}) => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <S.StyledLink to={`/user/${entity}/new`}>\r\n            <Button type='primary'>\r\n               <PlusOutlined color='white' />\r\n               New\r\n            </Button>\r\n         </S.StyledLink>\r\n         {showImport &&\r\n            <S.StyledLink to={`/user/${entity}/import`}>\r\n               <Button type='primary'>\r\n                  <UploadOutlined />\r\n                  Import\r\n               </Button>\r\n            </S.StyledLink>\r\n         }\r\n         <S.StyledLink to={`/user/${entity}/audit?entityNames=${entity}`}>\r\n            <Button>\r\n               <CopyOutlined />\r\n               Audit Logs\r\n            </Button>\r\n         </S.StyledLink>\r\n         {showExport &&\r\n            <ExportToExcel \r\n               entity={entity}\r\n            />\r\n         }\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ButtonsGroup;","import styled from 'styled-components';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const StyledForm = styled(Form)`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   justify-content: space-between;\r\n`\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport { Select } from 'formik-antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport * as S from './StyledSelectClient';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst SelectClient = ({name}) => {\r\n   const {clients} = useSelector(state => state.clientsReducer)\r\n\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            Client:\r\n         </S.Label>\r\n         <Select \r\n            name={name}\r\n            placeholder='You can also input letters to search client'\r\n            optionFilterProp='children'\r\n            showSearch\r\n            filterOption={true}\r\n            allowClear={true}\r\n         >\r\n            {clients.map(client =>\r\n               <Option value={client.id} key={client.id}>\r\n                  {client.name} {client.surname} [{client.phone}]\r\n               </Option>\r\n            )}     \r\n         </Select>\r\n         <S.StyledErrorMessage \r\n            name={name}\r\n            component='p' \r\n         />\r\n      </S.FieldWrapper>\r\n   );\r\n}\r\n \r\nexport default SelectClient;","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport {DatePicker} from 'formik-antd';\r\n\r\nimport * as S from './StyledRangeDatePicker';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst RangeDatePicker = ({name, label}) => {\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            {label}:\r\n         </S.Label>\r\n         <RangePicker \r\n            name={name} \r\n            showTime={{ format: 'HH:mm' }}\r\n            format=\"YYYY-MM-DD HH:mm\"\r\n            style={{'width': '100%'}}   \r\n         />\r\n         <S.StyledErrorMessage \r\n            name={name}\r\n            component='p' \r\n         />\r\n      </S.FieldWrapper>\r\n   );\r\n}\r\n \r\nexport default RangeDatePicker;","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport { Select } from 'formik-antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport * as S from './StyledSelectEmployee';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst SelectEmployee = ({name}) => {\r\n   const { employees } = useSelector(state => state.employeesReducer)\r\n\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            Employee:\r\n         </S.Label>\r\n         <Select \r\n            name={name}\r\n            placeholder='You can also input letters to search employee'\r\n            optionFilterProp='children'\r\n            showSearch\r\n            filterOption={true}\r\n            allowClear={true}\r\n         >\r\n            {employees.map(employee =>\r\n               <Option value={employee.id} key={employee.id}>\r\n                  {employee.name} {employee.surname}\r\n               </Option>\r\n            )}     \r\n         </Select>\r\n         <S.StyledErrorMessage \r\n            name={name}\r\n            component='p' \r\n         />\r\n      </S.FieldWrapper>\r\n   );\r\n}\r\n \r\nexport default SelectEmployee;","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport { Select } from 'formik-antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport * as S from './StyledSelectService';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst SelectService = ({name}) => {\r\n   const { services } = useSelector(state => state.servicesReducer);\r\n\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            Service:\r\n         </S.Label>\r\n         <Select \r\n            name={name}\r\n            placeholder='You can also input letters to search service'\r\n            optionFilterProp='children'\r\n            showSearch\r\n            filterOption={true}\r\n            allowClear={true}\r\n         >\r\n            {services.map(service =>\r\n               <Option value={service.id} key={service.id}>\r\n                  {service.name}\r\n               </Option>\r\n            )}     \r\n         </Select>\r\n         <S.StyledErrorMessage \r\n            name={name} \r\n            component='p' \r\n         />\r\n      </S.FieldWrapper>\r\n   );\r\n}\r\n \r\nexport default SelectService;","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport colors from '../../assets/colors';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport { Input } from 'formik-antd';\r\n\r\nimport * as S from './StyledFormInput';\r\n\r\nconst FormInput = ({label, name, type}) => {\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            {label}:\r\n         </S.Label>\r\n         <Input \r\n            name={name}\r\n            type={type} \r\n         />\r\n         <S.StyledErrorMessage \r\n            name={name} \r\n            component='p' \r\n         />\r\n      </S.FieldWrapper>\r\n   );\r\n}\r\n \r\nexport default FormInput;","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport { Select } from 'formik-antd';\r\n\r\nimport * as S from './StyledSelectStatus';\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectStatus = ({name}) => {\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            Status:\r\n         </S.Label>\r\n         <Select name={name} allowClear={true}>\r\n            <Option value='Reserved'>Reserved</Option>\r\n            <Option value='In Progress'>In Progress</Option>\r\n            <Option value='Cancelled'>Cancelled</Option>\r\n            <Option value='Completed'>Completed</Option>\r\n         </Select>\r\n         <S.StyledErrorMessage \r\n            name={name} \r\n            component='p' \r\n         />\r\n      </S.FieldWrapper> \r\n   );\r\n}\r\n \r\nexport default SelectStatus;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ResetButton, SubmitButton} from 'formik-antd';\r\nimport { UndoOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport * as S from './StyledSearchReservationsForm';\r\nimport actions from '../../../app/reservations/actions';\r\n\r\nimport SelectClient from '../SelectClient/SelectClient';\r\nimport RangeDatePicker from '../RangeDatePicker/RangeDatePicker';\r\nimport SelectEmployee from '../SelectEmployee/SelectEmployee';\r\nimport SelectService from '../SelectService/SelectService';\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport SelectStatus from '../SelectStatus/SelectStatus';\r\n\r\n\r\nconst useForm = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const submitForm = async values => {\r\n      dispatch(actions.loadingReservations(true))\r\n\r\n      const date = values.date !== undefined\r\n         ? \r\n            [\r\n               moment(values.date[0]._d).format('YYYY-MM-DD HH:mm'), \r\n               moment(values.date[1]._d).format('YYYY-MM-DD HH:mm')\r\n            ]\r\n         :  undefined\r\n\r\n      const formValues = {...values, date}\r\n\r\n      const response = await axios.post('/api/user/reservations/search', formValues, {withCredentials: true})\r\n      const {data} = response.data;\r\n\r\n      if(data) dispatch(actions.searchReservations(data))\r\n\r\n      dispatch(actions.loadingReservations(false))\r\n      dispatch(actions.isSearchingReservations(true))\r\n   }\r\n\r\n   return [submitForm]\r\n}\r\n\r\n\r\n\r\nconst SearchReservationsForm = () => {\r\n   const {loading} = useSelector(state => state.reservationsReducer)\r\n   const [submitForm] = useForm();\r\n  \r\n   return (\r\n      <S.Wrapper> \r\n         <Formik\r\n            initialValues={{\r\n               id: '', \r\n               date: undefined, \r\n               room: '', \r\n               status: undefined,\r\n               clientId: undefined,\r\n               employeeId: undefined,\r\n               serviceId: undefined,\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n               date: Yup\r\n                  .array()\r\n                  .notRequired(),\r\n               room: Yup\r\n                  .string()\r\n                  .notRequired(),\r\n               status: Yup\r\n                  .string()\r\n                  .oneOf(['Reserved', 'In Progress', 'Cancelled', 'Completed'], 'Must be correct value')\r\n                  .notRequired(),\r\n               clientId: Yup\r\n                  .string()\r\n                  .notRequired(),\r\n               employeeId: Yup\r\n                  .string()\r\n                  .notRequired(),\r\n               serviceId: Yup\r\n                  .string()\r\n                  .notRequired(),\r\n            })}\r\n            onSubmit={values => {      \r\n               submitForm(values)   \r\n            }}\r\n         >\r\n            {({handleSubmit}) => (\r\n               <S.StyledForm onSubmit={handleSubmit}>\r\n                  <FormInput \r\n                     label='Id'\r\n                     name='id'\r\n                     type='text'\r\n                  />\r\n                  <SelectEmployee name='employeeId' />\r\n                  <RangeDatePicker name='date' label='Arrival' />\r\n                  <SelectClient name='clientId' />\r\n                  <FormInput \r\n                     label='Room'\r\n                     name='room'\r\n                     type='text'\r\n                  />\r\n                  <SelectService name='serviceId' />\r\n                  <SelectStatus name='status' />\r\n                  <S.ButtonsWrapper>\r\n                     <SubmitButton loading={loading}>\r\n                        Search\r\n                        <SearchOutlined />\r\n                     </SubmitButton>\r\n                     <ResetButton>\r\n                        Reset\r\n                        <UndoOutlined />\r\n                     </ResetButton>\r\n                  </S.ButtonsWrapper>\r\n               </S.StyledForm>\r\n            )}\r\n         </Formik>\r\n      </S.Wrapper>\r\n   )\r\n}\r\n \r\nexport default SearchReservationsForm;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 20px 0 0 0;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n   margin: 0 0 20px 0;\r\n   display: flex;\r\n\r\n   button {\r\n      margin: 0 10px 0 0;\r\n   }\r\n`\r\n\r\nexport const P = styled.p`\r\n   margin: 0 0 0 10px;\r\n   color: ${colors.primary};\r\n   display: flex;\r\n   align-items: center;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 0 10px;\r\n`\r\n\r\nexport const TableWrapper = styled.div`\r\n   border: 1px solid #e8e8e8;\r\n   border-radius: 4px;\r\n\r\n   .ant-table-tbody > tr > td {\r\n      padding: 10px 16px;\r\n   }\r\n\r\n   .ant-pagination {\r\n      margin: 20px;\r\n   }\r\n\r\n   .ant-pagination-total-text {\r\n      margin: 0 20px 0 0;\r\n   }\r\n`","import React from 'react';\r\nimport {Popconfirm, Button} from 'antd';\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport actions from '../../../app/reservations/actions';\r\n\r\nconst useTableAction = () => {\r\n   const dispatch = useDispatch()  \r\n   const [success, setSuccess] = React.useState(false)\r\n\r\n   const confirmDelete = async id => {\r\n      const response = await axios.post('/api/user/reservations/delete', {id: [id]}, {withCredentials: true})\r\n      const {success} = response.data;\r\n\r\n      if(success) {\r\n         dispatch(actions.deleteReservation([id]))\r\n         dispatch(actions.deleteSearchReservation([id]))\r\n         setSuccess(true)\r\n      }\r\n   }\r\n\r\n   return [success, confirmDelete]\r\n}\r\n\r\n\r\n\r\nconst DeleteReservation = ({id, buttonType}) => {\r\n   const [success, confirmDelete] = useTableAction()\r\n\r\n   return (  \r\n      <>\r\n         {success && <Redirect to='/user/reservations' />}\r\n         <Popconfirm \r\n            placement=\"topLeft\" \r\n            title='Are you sure to delete this reservation ?' \r\n            onConfirm={() => confirmDelete(id)} \r\n            okText='Yes' \r\n            cancelText='No'\r\n         >\r\n            <Button type={buttonType}>\r\n               {buttonType === 'primary' && <DeleteOutlined />}\r\n               Delete\r\n            </Button>\r\n         </Popconfirm>\r\n      </>\r\n   );\r\n}\r\n \r\nexport default DeleteReservation;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst ColumnEmployee = ({id}) => {\r\n   const {employees} = useSelector(state => state.employeesReducer) \r\n   const employee = employees.filter(employee => employee.id === id)\r\n\r\n   return <Link to={`/user/employees/${id}`}>{employee[0].name} {employee[0].surname}</Link>\r\n}\r\n \r\nexport default ColumnEmployee;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst ColumnClient = ({id}) => {\r\n   const {clients} = useSelector(state => state.clientsReducer) \r\n   const client = clients.filter(client => client.id === id)\r\n\r\n\r\n   return <Link to={`/user/clients/${id}`}>{client[0].name} {client[0].surname}</Link>\r\n}\r\n \r\nexport default ColumnClient;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst ColumnService = ({id}) => {\r\n   const {services} = useSelector(state => state.servicesReducer) \r\n   const service = services.filter(service => service.id === id)\r\n\r\n\r\n   return <Link to={`/user/services/${id}`}>{service[0].name}</Link>\r\n}\r\n \r\nexport default ColumnService;","import React from 'react';\r\nimport { Tag } from 'antd';\r\n\r\nimport * as S from '../../components/Reservations/ReservationsTable/StyledReservationsTable';\r\n\r\nimport DeleteReservation from '../../components/Reservations/DeleteReservation/DeleteReservation';\r\nimport ColumnEmployee from '../../components/Reservations/ColumnEmployee/ColumnEmployee';\r\nimport ColumnClient from '../../components/Reservations/ColumnClient/ColumnClient';\r\nimport ColumnService from '../../components/Reservations/ColumnService/ColumnService';\r\n\r\nexport const reservationsTableColumns = [\r\n   {  \r\n      width: 100,\r\n      title: 'Id', \r\n      dataIndex: 'id', \r\n      key: 'id', \r\n      sorter: (a, b) => a.id - b.id,\r\n      sortDirections: ['descend', 'ascend'],\r\n      defaultSortOrder: 'ascend',\r\n   },\r\n   {\r\n      width: 200,\r\n      title: 'Arrival',\r\n      dataIndex: 'arrival',\r\n      key: 'arrival',\r\n      sorter: (a, b) => a.arrival.trim().localeCompare(b.arrival.trim()),\r\n      sortDirections: ['descend', 'ascend'],\r\n      render: (dataIndex) => <span>{dataIndex}</span>\r\n   },\r\n   {\r\n      width: 200,\r\n      title: 'Departure',\r\n      dataIndex: 'departure',\r\n      key: 'departure',\r\n      sorter: (a, b) => a.departure.trim().localeCompare(b.departure.trim()),\r\n      sortDirections: ['descend', 'ascend'],\r\n      render: (dataIndex) => <span>{dataIndex}</span>\r\n   },\r\n   {\r\n      width: 220,\r\n      title: 'Employee',\r\n      dataIndex: 'employeeId',\r\n      key: 'employeeId',\r\n      render: (dataIndex) => <ColumnEmployee id={dataIndex} />\r\n   },\r\n   {\r\n      width: 250,\r\n      title: 'Service',\r\n      dataIndex: 'serviceId',\r\n      key: 'serviceId',\r\n      render: (dataIndex) => <ColumnService id={dataIndex} />\r\n   },\r\n   {\r\n      width: 220,\r\n      title: 'Client',\r\n      dataIndex: 'clientId',\r\n      key: 'clientId',\r\n      render: (dataIndex) => <ColumnClient id={dataIndex} />\r\n   },\r\n   {\r\n      width: 120,\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      sorter: (a, b) => a.status.trim().localeCompare(b.status.trim()),\r\n      sortDirections: ['descend', 'ascend'],\r\n      render: (dataIndex) => {\r\n         switch (dataIndex) {\r\n            case 'In Progress':\r\n               return <Tag color='green'>{dataIndex}</Tag>\r\n            case 'Reserved':\r\n               return <Tag color='geekblue'>{dataIndex}</Tag>\r\n            case 'Cancelled':\r\n               return <Tag color='red'>{dataIndex}</Tag>\r\n            case 'Completed':\r\n               return <Tag>{dataIndex}</Tag>\r\n            \r\n            default:\r\n               return <Tag>{dataIndex}</Tag>\r\n         }\r\n      }\r\n   },\r\n   { \r\n      width: 120,\r\n      title: 'Created At', key: 'createdAt', dataIndex: 'createdAt',\r\n      sorter: (a, b) => a.createdAt.trim().localeCompare(b.createdAt.trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      width: 220,\r\n      title: 'Action', \r\n      key: 'action',\r\n      render: ({id}) => \r\n         <>\r\n            <S.StyledLink to={`/user/reservations/${id}`}>View</S.StyledLink>\r\n            <S.StyledLink to={`/user/reservations/${id}/edit`}>Edit</S.StyledLink>\r\n            <DeleteReservation\r\n               id={id} \r\n               buttonType='link'\r\n            />\r\n         </>\r\n   },\r\n]","import React from 'react';\r\nimport {Button, Table, Popconfirm, Alert} from 'antd';\r\nimport { UndoOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport * as S from './StyledReservationsTable';\r\nimport {useReservationsTable} from '../../../hooks/useReservationsTable';\r\nimport {reservationsTableColumns} from '../../../assets/data/reservationsTableColumns';\r\n\r\n\r\nconst ReservationsTable = () => {\r\n   const [isReloading, selectedRowKeys, showTotal, reloadData, handleChangeRow, confirmDelete] = useReservationsTable()\r\n   const {loading, reservations, isSearching, searchedReservations} = useSelector(state => state.reservationsReducer)\r\n\r\n   const data = !isSearching \r\n      ?  reservations.map(reservation => ({...reservation, key: reservation.id}))\r\n      :  searchedReservations.map(reservation => ({...reservation, key: reservation.id}))\r\n   \r\n   const rowSelection = {\r\n      onChange: handleChangeRow,\r\n   }\r\n\r\n   const markedItems = reservations.filter(reservation => selectedRowKeys.includes(reservation.id))\r\n\r\n   return (  \r\n      <S.Wrapper>\r\n         <S.ButtonsWrapper>\r\n            <Popconfirm \r\n               placement=\"topLeft\" \r\n               title='Are you sure to delete selected reservations ?' \r\n               onConfirm={confirmDelete} \r\n               okText='Yes' \r\n               cancelText='No'\r\n            >\r\n               <Button type=\"primary\" disabled={markedItems.length === 0}>\r\n                  delete\r\n                  <DeleteOutlined />\r\n               </Button>\r\n            </Popconfirm>\r\n            <Button type='primary' disabled={!isSearching} loading={isReloading} onClick={reloadData}>\r\n               Reload\r\n               <UndoOutlined />\r\n            </Button>\r\n            {!isSearching \r\n               ?  <S.P>You now see all reservations.</S.P> \r\n               :  <S.P>You now see only searched reservations. Please click reload button, to see all reservations again.</S.P>\r\n            }\r\n         </S.ButtonsWrapper>\r\n         <S.TableWrapper>\r\n            {( markedItems.length > 0 && isSearching ) &&\r\n               <Alert\r\n                  message='Warning'\r\n                  description={`You have selected ${markedItems.length} items. If you do not see all items, please reload employees table to see all selected items.`}\r\n                  type='warning'\r\n                  showIcon\r\n               />\r\n            }\r\n            <Table\r\n               columns={reservationsTableColumns} \r\n               dataSource={data} \r\n               loading={loading}\r\n               scroll={{x: '100vh'}}\r\n               pagination={{\r\n                  showSizeChanger: true,\r\n                  showTotal,\r\n               }}\r\n               rowSelection={rowSelection}\r\n            />\r\n         </S.TableWrapper>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ReservationsTable;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport actions from '../app/reservations/actions';\r\n\r\nexport const useReservationsTable = () => {\r\n   const dispatch = useDispatch()\r\n   const {reservations, isSearching, searchedReservations} = useSelector(state => state.reservationsReducer)\r\n   const [isReloading, setIsReloading] = React.useState(false)\r\n   const [selectedRowKeys, setSelectedRowKeys] = React.useState([])\r\n\r\n   const showTotal = () => {\r\n      if(isSearching) return `Total ${searchedReservations.length} items`\r\n      else return `Total ${reservations.length} items`\r\n   }\r\n\r\n\r\n   const reloadData = () => {\r\n      setIsReloading(true) \r\n      dispatch(actions.isSearchingReservations(false)) \r\n      setIsReloading(false) \r\n   }\r\n\r\n   const handleChangeRow = (selectedRowKeys) => {\r\n      setSelectedRowKeys(selectedRowKeys)\r\n   }\r\n\r\n   const confirmDelete = async () => {\r\n      const response = await axios.post('/api/user/reservations/delete', {id: selectedRowKeys}, {withCredentials: true}) \r\n      const {success} = response.data; \r\n\r\n      if(success) {\r\n         dispatch(actions.deleteReservation(selectedRowKeys))\r\n         dispatch(actions.deleteSearchReservation(selectedRowKeys))\r\n      }\r\n   }\r\n   \r\n   return [isReloading, selectedRowKeys, showTotal, reloadData, handleChangeRow, confirmDelete]\r\n}","import React from 'react';\r\n\r\nimport * as S from './StyledReservationsPage';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport ButtonsGroup from '../../../components/ButtonsGroup/ButtonsGroup';\r\nimport SearchReservationsForm from '../../../components/Reservations/SearchReservationsForm/SearchReservationsForm';\r\nimport ReservationsTable from '../../../components/Reservations/ReservationsTable/ReservationsTable';\r\n\r\nconst ReservationsPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/reservations', label: 'Home'}\r\n            ]}\r\n            text='Reservations'\r\n         />\r\n         <S.StyledCard title='Reservations' bordered>\r\n            <ButtonsGroup \r\n               entity='reservations'\r\n               showImport={false}\r\n               showExport={false}\r\n            />\r\n            <S.StyledCard title='Search Reservations' margin_style='true'>\r\n               <SearchReservationsForm />\r\n            </S.StyledCard>\r\n            <ReservationsTable />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ReservationsPage;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import styled from 'styled-components';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`","import React from 'react';\r\nimport { Input } from 'formik-antd';\r\n\r\nimport * as S from './StyledFormTextArea';\r\n\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst FormTextArea = ({label, name, placeholder}) => {\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            {label}:\r\n         </S.Label>\r\n         <TextArea name={name} placeholder={placeholder} rows={4} autoSize={true} />\r\n      </S.FieldWrapper>\r\n   );\r\n}\r\n \r\nexport default FormTextArea;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { Alert } from 'antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport actions from '../../../app/reservations/actions';\r\nimport * as S from './StyledNewReservationForm';\r\n\r\nimport SelectClient from '../SelectClient/SelectClient';\r\nimport RangeDatePicker from '../RangeDatePicker/RangeDatePicker';\r\nimport SelectEmployee from '../SelectEmployee/SelectEmployee';\r\nimport SelectService from '../SelectService/SelectService';\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport SelectStatus from '../SelectStatus/SelectStatus';\r\nimport FormTextArea from '../../FormTextArea/FormTextArea';\r\n\r\n\r\nconst useForm = () => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [success, setSuccess] = React.useState(false)\r\n   const [err, setErr] = React.useState(false)\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n\r\n      const date = [\r\n         moment(values.date[0]._d).format('YYYY-MM-DD HH:mm'), \r\n         moment(values.date[1]._d).format('YYYY-MM-DD HH:mm')\r\n      ]\r\n\r\n      const formValues = {...values, date}\r\n\r\n      const response = await axios.post('/api/user/reservations/new', formValues, {withCredentials: true})\r\n      const {data, error} = response.data;\r\n\r\n      if(data) {\r\n         dispatch(actions.addReservation(data))\r\n         setSuccess(true)\r\n      } else {\r\n         setErr(error)\r\n      }\r\n      setLoading(false)\r\n   }\r\n   return [loading, success, err, submitForm]\r\n}\r\n\r\n\r\n\r\nconst NewReservationForm = () => {\r\n   const [loading, success, err, submitForm] = useForm();\r\n\r\n   return (\r\n      <>\r\n         {success && <Redirect to={`/user/reservations`} />}\r\n         <S.Wrapper> \r\n            {err && \r\n               <Alert \r\n                  message=\"Error\"\r\n                  description={err}\r\n                  type=\"error\"\r\n                  style={{'width': '300px', 'margin': '0 0 20px 0'}}\r\n                  showIcon\r\n               />\r\n            }\r\n            <Formik\r\n               initialValues={{\r\n                  date: [], \r\n                  room: '', \r\n                  status: '',\r\n                  clientId: '',\r\n                  employeeId: '',\r\n                  serviceId: '',\r\n                  note: '', \r\n                  cancellationNote: '',\r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                  date: Yup\r\n                     .array()\r\n                     .required('Date is required'),\r\n                  room: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  status: Yup\r\n                     .string()\r\n                     .oneOf(['Reserved', 'In Progress', 'Cancelled', 'Completed'], 'Must be correct value')\r\n                     .required('Status is required'),\r\n                  clientId: Yup\r\n                     .string()\r\n                     .required('Client is required'),\r\n                  employeeId: Yup\r\n                     .string()\r\n                     .required('Employee is required'),\r\n                  serviceId: Yup\r\n                     .string()\r\n                     .required('Service is required'),\r\n                  note: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  cancellationNote: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n               })}\r\n               onSubmit={values => {      \r\n                  submitForm(values)   \r\n               }}\r\n            >\r\n               {({handleSubmit}) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                     <SelectClient name='clientId' />\r\n                     <RangeDatePicker name='date' label='Period' />\r\n                     <SelectEmployee name='employeeId' />\r\n                     <SelectService name='serviceId' />\r\n                     <FormInput \r\n                        label='Room'\r\n                        name='room'\r\n                        type='text'\r\n                     />\r\n                     <SelectStatus name='status' />\r\n                     <FormTextArea \r\n                        label='Note'\r\n                        name='note'\r\n                        placeholder='Note regarding the visit'\r\n                     />\r\n                     <FormTextArea \r\n                        label='Cancellation Note'\r\n                        name='cancellationNote'\r\n                        placeholder='Note regarding the cancellation of a visit'\r\n                     />\r\n                     <S.ButtonsWrapper>\r\n                        <SubmitButton loading={loading}>\r\n                           Save\r\n                           <SaveOutlined />\r\n                        </SubmitButton>\r\n                        <ResetButton>\r\n                           Reset\r\n                           <UndoOutlined />\r\n                        </ResetButton>\r\n                     </S.ButtonsWrapper>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         </S.Wrapper>\r\n      </>\r\n   )\r\n}\r\n \r\nexport default NewReservationForm;","import React from 'react';\r\n\r\nimport * as S from './StyledReservationNewPage';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport NewReservationForm from '../../../components/Reservations/NewReservationForm/NewReservationForm';\r\n\r\n\r\nconst ReservationNewPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/reservations', label: 'Home'},\r\n               {to: '/user/reservations', label: 'Reservations'}\r\n            ]}\r\n            text='New Reservation'\r\n         />\r\n         <S.StyledCard title='New Reservation' bordered margin_style='true'>\r\n            <NewReservationForm />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ReservationNewPage;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useFetchItem = (url, entity) => {\r\n   const [loading, setLoading] = React.useState(true);\r\n   const [error, setError] = React.useState(false)\r\n   const [data, setData] = React.useState(null)\r\n\r\n   React.useEffect(() => {\r\n      setLoading(true);\r\n\r\n      const fetchData = async () => {\r\n         setError(false)\r\n\r\n         try {\r\n            const response = await axios.get(url, {withCredentials: true})\r\n            setData(response.data[entity])\r\n         } catch(error) {\r\n            setError(true)\r\n         }\r\n      \r\n         setLoading(false);\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   return [loading, error, data]\r\n}","import styled, {keyframes} from 'styled-components';\r\nimport colors from '../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 100%;\r\n   height: 100%;\r\n   overflow-x: hidden;\r\n   font-family: segoe;\r\n\r\n   display: flex;\r\n`\r\n\r\nexport const MainContent = styled.main`\r\n   width: 100%;\r\n   height: 100%;\r\n   overflow-x: hidden;\r\n   margin: 0 23px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Box = styled.div`\r\n   width: 100%;\r\n   height: 500px;\r\n   margin: 80px auto;\r\n   background-color: white;\r\n   border: 1px solid #E9E9E9;\r\n   border-radius: 5px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n`\r\n\r\nexport const spinnerLoader = keyframes`\r\n   0% {\r\n      transform: rotate(0deg);\r\n   }\r\n   100% {\r\n      transform: rotate(360deg);\r\n   }\r\n`\r\n\r\nexport const P = styled.p`\r\n   margin: 20px 0 0 0;\r\n   text-align: center;\r\n   font-size: 16px;\r\n`\r\n\r\nexport const Spinner = styled.div`\r\n   width: 150px;\r\n   height: 150px;\r\n   margin: 0 auto;\r\n   font-size: 2px;\r\n   border-radius: 50%;\r\n   border-top: 1.1em solid #a6d7ff};\r\n   border-right: 1.1em solid #a6d7ff;\r\n   border-bottom: 1.1em solid #a6d7ff;\r\n   border-left: 1.1em solid ${colors.primary};\r\n   transform: translateZ(0);\r\n   animation: ${spinnerLoader} .8s infinite linear;\r\n`\r\n","import React from 'react';\r\nimport * as S from './StyledLoadingPage';\r\n\r\n\r\nconst LoadingPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <S.MainContent>\r\n            <S.Box>\r\n               <S.Spinner></S.Spinner>\r\n               <S.P>Loading Data... </S.P>\r\n            </S.Box>\r\n         </S.MainContent>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default LoadingPage;","import styled, {css} from 'styled-components';\r\nimport {Card} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   button {\r\n      margin: 0 10px 0 0;\r\n   }\r\n`\r\n\r\nexport const DetailsWrapper = styled.div`\r\n   width: 90%;\r\n   height: auto;\r\n   margin: 60px 20px 40px 20px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Item = styled.h2`\r\n   width: 100%;\r\n   padding: 10px;\r\n   color: ${colors.black85};\r\n   font-size: 15px;\r\n\r\n   display: flex;\r\n`\r\n\r\nexport const Label = styled.div`\r\n   width: 25%;\r\n   text-align: right;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 0 0 0 15px;\r\n   font-weight: 600;\r\n`\r\n\r\nexport const Value = styled.div`\r\n   width: 65%;\r\n   margin: 0 0 0 15px;\r\n   font-weight: ${({font_light}) => font_light ? 400 : 600};\r\n   text-align: left;\r\n`\r\n\r\nexport const NoData = styled.span`\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Tag} from 'antd';\r\nimport {useSelector} from 'react-redux';\r\nimport {EditOutlined, DeleteOutlined, CopyOutlined} from '@ant-design/icons';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport DeleteReservation from '../../../components/Reservations/DeleteReservation/DeleteReservation';\r\n\r\nimport * as S from './StyledReservationDetailsPage'\r\n\r\n\r\nconst ReservationDetailsPage = ({data}) => {\r\n   const {clients} = useSelector(state => state.clientsReducer)\r\n   const {employees} = useSelector(state => state.employeesReducer)\r\n   const {services} = useSelector(state => state.servicesReducer)\r\n\r\n   const client = clients.filter(client => client.id === data.clientId)\r\n   const employee = employees.filter(employee => employee.id === data.employeeId)\r\n   const service = services.filter(service => service.id === data.serviceId)\r\n\r\n\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/reservations', label: 'Home'},\r\n               {to: '/user/reservations', label: 'Reservations'}\r\n            ]}\r\n            text={`Reservation: ${data.id}`}\r\n         />\r\n         <S.StyledCard title='Reservation Details' bordered>\r\n            <S.ButtonsWrapper>\r\n               <Link to={`/user/reservations/${data.id}/edit`}>\r\n                  <Button type='primary'>\r\n                     <EditOutlined />\r\n                     Edit\r\n                  </Button>\r\n               </Link>\r\n               <DeleteReservation \r\n                  id={data.id}\r\n                  buttonType='primary' \r\n               />\r\n               <Link to='/auth/login'>\r\n                  <Button>\r\n                     <CopyOutlined />\r\n                     Audit Logs\r\n                  </Button>\r\n               </Link>\r\n            </S.ButtonsWrapper>\r\n            <S.DetailsWrapper>\r\n               <S.Item>\r\n                  <S.Label>ID: </S.Label>\r\n                  <S.Value>{data.id}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Client: </S.Label>\r\n                  <S.StyledLink to={`/user/clients/${client[0].id}`}>\r\n                     {client[0].name} {client[0].surname}\r\n                  </S.StyledLink>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Arrival:</S.Label>\r\n                  <S.Value>\r\n                     {data.arrival}\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Departure:</S.Label>\r\n                  <S.Value>\r\n                     {data.departure}\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Employee: </S.Label>\r\n                  <S.StyledLink to={`/user/employees/${employee[0].id}`}>\r\n                     {employee[0].name} {employee[0].surname}\r\n                  </S.StyledLink>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Service: </S.Label>\r\n                  <S.StyledLink to={`/user/services/${service[0].id}`}>\r\n                     {service[0].name} \r\n                  </S.StyledLink>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Status:</S.Label>\r\n                  <S.Value font_light='true'>\r\n                     {\r\n                        {\r\n                           'In Progress': <Tag color='green'>{data.status}</Tag>,\r\n                           'Reserved': <Tag color='geekblue'>{data.status}</Tag>,\r\n                           'Cancelled': <Tag color='red'>{data.status}</Tag>,\r\n                           'Completed': <Tag>{data.status}</Tag>\r\n                        }  [data.status]\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>      \r\n               <S.Item>\r\n                  <S.Label>Room:</S.Label>\r\n                  <S.Value>\r\n                     {data.room \r\n                        ? data.room \r\n                        : <S.NoData>No Data</S.NoData>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Notes:</S.Label>\r\n                  <S.Value>\r\n                     {data.note\r\n                        ? data.note \r\n                        : <S.NoData>No Data</S.NoData>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Cancellation Note:</S.Label>\r\n                  <S.Value>\r\n                     {data.cancellationNote\r\n                        ? data.cancellationNote\r\n                        : <S.NoData>No Data</S.NoData>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Created At:</S.Label>\r\n                  <S.Value>{data.createdAt}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Updated At:</S.Label>\r\n                  <S.Value>{data.updatedAt}</S.Value>\r\n               </S.Item>\r\n            </S.DetailsWrapper>\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ReservationDetailsPage;","import React from 'react';\r\n\r\nimport {useFetchItem} from '../../../hooks/useFetchItem';\r\n\r\nimport LoadingPage from '../../../pages/LoadingPage/LoadingPage';\r\nimport ErrorPage from '../../../pages/ErrorPage/ErrorPage';\r\nimport ReservationDetailsPage from '../../../pages/Reservations/ReservationDetailsPage/ReservationDetailsPage';\r\n\r\n\r\nconst FetchReservation = ({match}) => {\r\n   const [loading, error, data] = useFetchItem(`/api/user/reservations/${match.params.id}`, 'reservation')\r\n\r\n   return (  \r\n      <>\r\n         {loading && <LoadingPage />}\r\n         {error && <ErrorPage />}\r\n         {data && <ReservationDetailsPage data={data} />}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default FetchReservation;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { Alert } from 'antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport actions from '../../../app/reservations/actions';\r\nimport * as S from './StyledEditReservationForm';\r\n\r\nimport SelectClient from '../SelectClient/SelectClient';\r\nimport RangeDatePicker from '../RangeDatePicker/RangeDatePicker';\r\nimport SelectEmployee from '../SelectEmployee/SelectEmployee';\r\nimport SelectService from '../SelectService/SelectService';\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport SelectStatus from '../SelectStatus/SelectStatus';\r\nimport FormTextArea from '../../FormTextArea/FormTextArea';\r\n\r\n// Wiekszosc moza reuzyc z tworzeniem\r\nconst useForm = (id) => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [success, setSuccess] = React.useState(false)\r\n   const [err, setErr] = React.useState(false)\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n\r\n      const date = [\r\n         moment(values.date[0]._d).format('YYYY-MM-DD HH:mm'), \r\n         moment(values.date[1]._d).format('YYYY-MM-DD HH:mm')\r\n      ]\r\n\r\n      const formValues = {...values, date}\r\n\r\n      const response = await axios.post(`/api/user/reservations/${id}/edit`, formValues, {withCredentials: true})\r\n      const {data, error} = response.data;\r\n\r\n      if(data) {\r\n         dispatch(actions.editReservation(data))\r\n         dispatch(actions.editSearchReservation(data))\r\n         setSuccess(true)\r\n      } else {\r\n         setErr(error)\r\n      }\r\n      setLoading(false)\r\n   }\r\n   return [loading, success, err, submitForm]\r\n}\r\n\r\n\r\n\r\nconst EditReservationForm = ({data}) => {\r\n   const [loading, success, err, submitForm] = useForm(data.id);\r\n   const {arrival, departure, room, status, clientId, employeeId, serviceId, note, cancellationNote} = data;\r\n\r\n   return (\r\n      <>\r\n         {success && <Redirect to={`/user/reservations/${data.id}`} />}\r\n         <S.Wrapper> \r\n            {err && \r\n               <Alert \r\n                  message=\"Error\"\r\n                  description={err}\r\n                  type=\"error\"\r\n                  style={{'width': '300px', 'margin': '0 0 20px 0'}}\r\n                  showIcon\r\n               />\r\n            }\r\n            <Formik\r\n               initialValues={{\r\n                  date: [moment(arrival), moment(departure)], \r\n                  room, \r\n                  status,\r\n                  clientId,\r\n                  employeeId,\r\n                  serviceId,\r\n                  note, \r\n                  cancellationNote,\r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                  date: Yup\r\n                     .array()\r\n                     .required('Date is required'),\r\n                  room: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  status: Yup\r\n                     .string()\r\n                     .oneOf(['Reserved', 'In Progress', 'Cancelled', 'Completed'], 'Must be correct value')\r\n                     .required('Status is required'),\r\n                  clientId: Yup\r\n                     .string()\r\n                     .required('Client is required'),\r\n                  employeeId: Yup\r\n                     .string()\r\n                     .required('Employee is required'),\r\n                  serviceId: Yup\r\n                     .string()\r\n                     .required('Service is required'),\r\n                  note: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  cancellationNote: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n               })}\r\n               onSubmit={values => {      \r\n                  submitForm(values)   \r\n               }}\r\n            >\r\n               {({handleSubmit}) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                     <SelectClient name='clientId' />\r\n                     <RangeDatePicker name='date' label='Period' />\r\n                     <SelectEmployee name='employeeId' />\r\n                     <SelectService name='serviceId' />\r\n                     <FormInput \r\n                        label='Room'\r\n                        name='room'\r\n                        type='text'\r\n                     />\r\n                     <SelectStatus name='status' />\r\n                     <FormTextArea \r\n                        label='Note'\r\n                        name='note'\r\n                        placeholder='Note regarding the visit'\r\n                     />\r\n                     <FormTextArea \r\n                        label='Cancellation Note'\r\n                        name='cancellationNote'\r\n                        placeholder='Note regarding the cancellation of a visit'\r\n                     />\r\n                     <S.ButtonsWrapper>\r\n                        <SubmitButton loading={loading}>\r\n                           Save\r\n                           <SaveOutlined />\r\n                        </SubmitButton>\r\n                        <ResetButton>\r\n                           Reset\r\n                           <UndoOutlined />\r\n                        </ResetButton>\r\n                     </S.ButtonsWrapper>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         </S.Wrapper>\r\n      </>\r\n   )\r\n}\r\n \r\nexport default EditReservationForm;","import React from 'react';\r\n\r\nimport * as S from './StyledReservationEditPage';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport EditReservationForm from '../../../components/Reservations/EditReservationForm/EditReservationForm';\r\n\r\n\r\nconst ReservationEditPage = ({data}) => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/reservations', label: 'Home'},\r\n               {to: '/user/reservations', label: 'Reservations'},\r\n               {to: `/user/reservations/${data.id}`, label: `Reservation: ${data.id}`}\r\n            ]}\r\n            text='Edit Reservation'\r\n         />\r\n         <S.StyledCard title='Edit Reservation' bordered margin_style='true'>\r\n            <EditReservationForm data={data} />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ReservationEditPage;","import React from 'react';\r\n\r\nimport {useFetchItem} from '../../../hooks/useFetchItem';\r\n\r\nimport LoadingPage from '../../../pages/LoadingPage/LoadingPage';\r\nimport ErrorPage from '../../../pages/ErrorPage/ErrorPage';\r\nimport ReservationEditPage from '../../../pages/Reservations/ReservationEditPage/ReservationEditPage';\r\n\r\nconst FetchReservationToEdit = ({match}) => {\r\n   const [loading, error, data] = useFetchItem(`/api/user/reservations/${match.params.id}`, 'reservation')\r\n   \r\n   return (  \r\n      <>\r\n         {loading && <LoadingPage />}\r\n         {error && <ErrorPage />}\r\n         {data && <ReservationEditPage data={data} />}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default FetchReservationToEdit;","import * as React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\n\r\nimport ReservationsPage from '../pages/Reservations/ReservationsPage/ReservationsPage';\r\nimport ReservationNewPage from '../pages/Reservations/ReservationNewPage/ReservationNewPage';\r\nimport FetchReservation from '../components/Reservations/FetchReservation/FetchReservation';\r\nimport FetchReservationToEdit from '../components/Reservations/FetchReservationToEdit/FetchReservationToEdit';\r\nimport ErrorPage from '../pages/ErrorPage/ErrorPage';\r\n\r\n\r\nconst ReservationsRoutes = () => {\r\n   return (  \r\n      <Switch>\r\n         <Route exact path='/user/reservations' component={ReservationsPage} /> \r\n         <Route exact path='/user/reservations/new' component={ReservationNewPage} /> \r\n         <Route exact path='/user/reservations/:id' component={FetchReservation} />\r\n         <Route exact path='/user/reservations/:id/edit' component={FetchReservationToEdit} />\r\n         <Route component={ErrorPage} />\r\n      </Switch>\r\n   )\r\n}\r\n \r\nexport default ReservationsRoutes;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: ${({margin_style}) => margin_style ? '0 0 50px 0' : '0 0 30px 0'}\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const StyledForm = styled(Form)`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   justify-content: space-between;\r\n`\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n   margin: 20px 0 0 0;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Input, ResetButton, SubmitButton } from 'formik-antd';\r\nimport { UndoOutlined, SearchOutlined } from '@ant-design/icons';\r\n\r\nimport * as S from './StyledSearchClientsForm';\r\nimport actions from '../../../app/clients/actions';\r\n\r\n\r\nconst useForm = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const submitForm = async values => {\r\n      dispatch(actions.loadingClients(true))\r\n\r\n      const response = await axios.post(`/api/user/clients/search`, values, {withCredentials: true})\r\n      const {data} = response.data;\r\n\r\n      if(data) dispatch(actions.searchClients(data))\r\n\r\n      dispatch(actions.loadingClients(false))\r\n      dispatch(actions.isSearchingClients(true))\r\n   }\r\n\r\n   return [submitForm]\r\n}\r\n\r\n\r\n\r\nconst SearchClientsForm = () => {\r\n   const {loading} = useSelector(state => state.clientsReducer)\r\n   const [submitForm] = useForm();\r\n\r\n   return (\r\n      <S.Wrapper> \r\n         <Formik\r\n            initialValues={{\r\n               id: '',\r\n               name: '', \r\n               surname: '', \r\n               phone: '', \r\n            }}\r\n            onSubmit={values => {      \r\n               submitForm(values)   \r\n            }}\r\n         >\r\n            {({handleSubmit}) => (\r\n               <S.StyledForm onSubmit={handleSubmit}>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Id:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='id' \r\n                        type='number' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Name:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='name' \r\n                        type='text' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Phone:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='phone' \r\n                        type='text' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Surname:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='surname' \r\n                        type='text' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.ButtonsWrapper>\r\n                     <SubmitButton loading={loading}>\r\n                        Search\r\n                        <SearchOutlined />\r\n                     </SubmitButton>\r\n                     <ResetButton>\r\n                        Reset\r\n                        <UndoOutlined /> \r\n                     </ResetButton>\r\n                  </S.ButtonsWrapper>\r\n               </S.StyledForm>\r\n            )}\r\n         </Formik>\r\n      </S.Wrapper>\r\n   )\r\n}\r\n \r\nexport default SearchClientsForm;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 20px 0 0 0;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n   margin: 0 0 20px 0;\r\n   display: flex;\r\n\r\n   button {\r\n      margin: 0 10px 0 0;\r\n   }\r\n`\r\n\r\nexport const P = styled.p`\r\n   margin: 0 0 0 10px;\r\n   color: ${colors.primary};\r\n   display: flex;\r\n   align-items: center;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 0 10px;\r\n`\r\n\r\nexport const TableWrapper = styled.div`\r\n   border: 1px solid #e8e8e8;\r\n   border-radius: 4px;\r\n\r\n   .ant-table-tbody > tr > td {\r\n      padding: 10px 16px;\r\n   }\r\n\r\n   .ant-pagination {\r\n      margin: 20px;\r\n   }\r\n\r\n   .ant-pagination-total-text {\r\n      margin: 0 20px 0 0;\r\n   }\r\n`","import React from 'react';\r\nimport {Popconfirm, Button} from 'antd';\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport actions from '../../../app/clients/actions';\r\n\r\nconst useTableAction = () => {\r\n   const dispatch = useDispatch()  \r\n   const [success, setSuccess] = React.useState(false)\r\n\r\n   const confirmDelete = async id => {\r\n      const response = await axios.post('/api/user/clients/delete', {id: [id]}, {withCredentials: true})\r\n      const {success} = response.data;\r\n\r\n      if(success) {\r\n         dispatch(actions.deleteClient([id]))\r\n         dispatch(actions.deleteSearchClient([id]))\r\n         setSuccess(true)\r\n      }\r\n   }\r\n\r\n   return [success, confirmDelete]\r\n}\r\n\r\n\r\n\r\nconst DeleteClient = ({id, buttonType}) => {\r\n   const [success, confirmDelete] = useTableAction()\r\n\r\n   return (  \r\n      <>\r\n         {success && <Redirect to='/user/clients' />}\r\n         <Popconfirm \r\n            placement=\"topLeft\" \r\n            title='Are you sure to delete this client ?' \r\n            onConfirm={() => confirmDelete(id)} \r\n            okText='Yes' \r\n            cancelText='No'\r\n         >\r\n            <Button type={buttonType}>\r\n               {buttonType === 'primary' && <DeleteOutlined />}\r\n               Delete\r\n            </Button>\r\n         </Popconfirm>\r\n      </>\r\n   );\r\n}\r\n \r\nexport default DeleteClient;","import React from 'react';\r\n\r\nimport * as S from '../../components/Clients/ClientsTable/StyledClientsTable';\r\n\r\nimport DeleteClient from '../../components/Clients/DeleteClient/DeleteClient';\r\n\r\nexport const clientsTableColumns = [\r\n   {  \r\n      title: 'Id', \r\n      dataIndex: 'id', \r\n      key: 'id', \r\n      sorter: (a, b) => a.id - b.id,\r\n      sortDirections: ['descend', 'ascend'],\r\n      defaultSortOrder: 'ascend'\r\n   },\r\n   { \r\n      title: 'Name', \r\n      dataIndex: 'name', \r\n      key: 'name', \r\n      sorter: (a, b) => a.name.toLowerCase().trim().localeCompare(b.name.toLowerCase().trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Surname', \r\n      dataIndex: 'surname', \r\n      key: 'surname', \r\n      sorter: (a, b) => a.surname.toLowerCase().trim().localeCompare(b.surname.toLowerCase().trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Phone', \r\n      dataIndex: 'phone', \r\n      key: 'phone', \r\n      sorter: (a, b) => a.phone.trim().localeCompare(b.phone.trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Created At', key: 'createdAt', dataIndex: 'createdAt',\r\n      sorter: (a, b) => a.createdAt.trim().localeCompare(b.createdAt.trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Action', \r\n      key: 'action',\r\n      render: ({id}) => \r\n         <>\r\n            <S.StyledLink to={`/user/clients/${id}`}>View</S.StyledLink>\r\n            <S.StyledLink to={`/user/clients/${id}/edit`}>Edit</S.StyledLink>\r\n            <DeleteClient \r\n               id={id} \r\n               buttonType='link'\r\n            />\r\n         </>\r\n   },\r\n]","import React from 'react';\r\nimport {Button, Table, Popconfirm, Alert} from 'antd';\r\nimport { UndoOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport * as S from './StyledClientsTable';\r\nimport {useClientsTable} from '../../../hooks/useClientsTable';\r\n\r\nimport {clientsTableColumns} from '../../../assets/data/clientsTableColumns';\r\n\r\n\r\n\r\nconst ClientsTable = () => {\r\n   const [isReloading, selectedRowKeys, showTotal, reloadData, handleChangeRow, confirmDelete] = useClientsTable()\r\n   const {loading, clients, isSearching, searchedClients} = useSelector(state => state.clientsReducer)\r\n\r\n   const data = !isSearching \r\n      ?  clients.map(client => ({...client, key: client.id}))\r\n      :  searchedClients.map(client => ({...client, key: client.id}))\r\n   \r\n   const rowSelection = {\r\n      onChange: handleChangeRow,\r\n   }\r\n\r\n   const markedItems = clients.filter(client => selectedRowKeys.includes(client.id))\r\n   \r\n   return (  \r\n      <S.Wrapper>\r\n         <S.ButtonsWrapper>\r\n            <Popconfirm \r\n               placement=\"topLeft\" \r\n               title='Are you sure to delete selected clients ?' \r\n               onConfirm={confirmDelete} \r\n               okText='Yes' \r\n               cancelText='No'\r\n            >\r\n               <Button type=\"primary\" disabled={markedItems.length === 0}>\r\n                  delete\r\n                  <DeleteOutlined />\r\n               </Button>\r\n            </Popconfirm>\r\n            <Button type='primary' disabled={!isSearching} loading={isReloading} onClick={reloadData}>\r\n               Reload\r\n               <UndoOutlined />\r\n            </Button>\r\n            {!isSearching \r\n               ?  <S.P>You now see all Clients.</S.P> \r\n               :  <S.P>You now see only searched Clients. Please click reload button, to see all clients again.</S.P>\r\n            }\r\n         </S.ButtonsWrapper>\r\n         <S.TableWrapper>\r\n            {( markedItems.length > 0 && isSearching ) &&\r\n               <Alert\r\n                  message='Warning'\r\n                  description={`You have selected ${markedItems.length} items. If you do not see all items, please reload clients table to see all selected items.`}\r\n                  type='warning'\r\n                  showIcon\r\n               />\r\n            }\r\n            <Table\r\n               columns={clientsTableColumns} \r\n               dataSource={data} \r\n               loading={loading}\r\n               pagination={{\r\n                  showSizeChanger: true,\r\n                  showTotal,\r\n               }}\r\n               rowSelection={rowSelection}\r\n            />\r\n         </S.TableWrapper>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ClientsTable;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport actions from '../app/clients/actions';\r\n\r\nexport const useClientsTable = () => {\r\n   const dispatch = useDispatch()\r\n   const {clients, isSearching, searchedClients} = useSelector(state => state.clientsReducer)\r\n   const [isReloading, setIsReloading] = React.useState(false)\r\n   const [selectedRowKeys, setSelectedRowKeys] = React.useState([])\r\n\r\n   const showTotal = () => {\r\n      if(isSearching) return `Total ${searchedClients.length} items`\r\n      else return `Total ${clients.length} items`\r\n   }\r\n\r\n   const reloadData = () => {\r\n      setIsReloading(true)\r\n      dispatch(actions.isSearchingClients(false))\r\n      setIsReloading(false)\r\n   }\r\n\r\n   const handleChangeRow = (selectedRowKeys) => {\r\n      setSelectedRowKeys(selectedRowKeys)\r\n   }\r\n\r\n   const confirmDelete = async () => {\r\n      const response = await axios.post('/api/user/clients/delete', {id: selectedRowKeys}, {withCredentials: true})\r\n      const {success} = response.data;\r\n\r\n      if(success) {\r\n         dispatch(actions.deleteClient(selectedRowKeys))\r\n         dispatch(actions.deleteSearchClient(selectedRowKeys))\r\n      }\r\n   }\r\n   \r\n   return [isReloading, selectedRowKeys, showTotal, reloadData, handleChangeRow, confirmDelete]\r\n}","import React from 'react';\r\n\r\nimport * as S from './StyledClientsPage';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport ButtonsGroup from '../../../components/ButtonsGroup/ButtonsGroup';\r\nimport SearchClientsForm from '../../../components/Clients/SearchClientsForm/SearchClientsForm';\r\nimport ClientsTable from '../../../components/Clients/ClientsTable/ClientsTable';\r\n\r\n\r\nconst ClientsPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/clients', label: 'Home'}\r\n            ]}\r\n            text='Clients'\r\n         />\r\n         <S.StyledCard title='Clients' bordered>\r\n            <ButtonsGroup \r\n               entity='clients'\r\n               showImport={true}\r\n               showExport={true}\r\n            />\r\n            <S.StyledCard title='Search Clients' margin_style='true'>\r\n               <SearchClientsForm />\r\n            </S.StyledCard>\r\n            <ClientsTable />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ClientsPage;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nimport * as S from './StyledNewClientForm';\r\nimport actions from '../../../app/clients/actions';\r\n\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport FormTextArea from '../../FormTextArea/FormTextArea';\r\n\r\n\r\nconst useForm = () => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [success, setSuccess] = React.useState(false)\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n\r\n      const response = await axios.post('/api/user/clients/new', values, {withCredentials: true})\r\n      const {data} = response.data;\r\n\r\n      if(data) {\r\n         dispatch(actions.addClient(data))\r\n         setSuccess(true)\r\n      }\r\n\r\n      setLoading(false)\r\n   }\r\n\r\n   return [loading, success, submitForm]\r\n}\r\n\r\n\r\n\r\nconst NewClientForm = () => {\r\n   const [loading, success, submitForm] = useForm();\r\n\r\n   return (\r\n      <>\r\n         {success && <Redirect to='/user/clients' />}\r\n         <S.Wrapper> \r\n            <Formik\r\n               initialValues={{\r\n                  name: '',\r\n                  surname: '',\r\n                  phone: '',\r\n                  note: '', \r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                  name: Yup\r\n                     .string()\r\n                     .min(3, 'Client name must have at least 3 letters')\r\n                     .required('Client name is required'),\r\n                  surname: Yup\r\n                     .string()\r\n                     .min(3, 'Client surname must have at least 3 letters')\r\n                     .required('Client surname is required'),\r\n                  phone: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  note: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n               })}\r\n               onSubmit={values => {      \r\n                  submitForm(values)   \r\n               }}\r\n            >\r\n               {({handleSubmit}) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                     <FormInput \r\n                        label='Name'\r\n                        name='name'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Surname'\r\n                        name='surname'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Phone'\r\n                        name='phone'\r\n                        type='text'\r\n                     />\r\n                     <FormTextArea \r\n                        label='Note'\r\n                        name='note'\r\n                        placeholder='Note regarding the client'\r\n                     />\r\n                     <S.ButtonsWrapper>\r\n                        <SubmitButton loading={loading}>\r\n                           Save\r\n                           <SaveOutlined />\r\n                        </SubmitButton>\r\n                        <ResetButton>\r\n                           Reset\r\n                           <UndoOutlined />\r\n                        </ResetButton>\r\n                     </S.ButtonsWrapper>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         </S.Wrapper>\r\n      </>\r\n   )\r\n}\r\n \r\nexport default NewClientForm;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`","import React from 'react';\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport NewClientForm from '../../../components/Clients/NewClientForm/NewClientForm';\r\n\r\nimport * as S from './StyledClientNewPage';\r\n\r\nconst ClientNewPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/clients', label: 'Home'},\r\n               {to: '/user/clients', label: 'Clients'}\r\n            ]}\r\n            text='New Client'\r\n         />\r\n         <S.StyledCard title='New Client' bordered margin_style='true'>\r\n            <NewClientForm />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ClientNewPage;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: ${({margin_style}) => margin_style ? '0 0 50px 0' : '0 0 30px 0'}\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\nimport { Alert } from 'antd';\r\n\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 50%;\r\n   margin: 30px 0;\r\n   font-size: 40px;\r\n   border: 1px dashed #d9d9d9;\r\n   border-radius: 4px;\r\n   position: relative;\r\n   overflow: hidden;\r\n   transition: .3s;\r\n\r\n   :hover {\r\n      border: 1px dashed ${colors.primary};\r\n      transition: .3s;\r\n   }\r\n`\r\n\r\nexport const ImportButton = styled.button`\r\n   width: 100%;\r\n   height: 100%;\r\n   padding: 0 0 15px 0;\r\n   background-color: #fafafa;\r\n   font-size: 14px;\r\n   outline: 0;\r\n   border: 0;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n`\r\n\r\nexport const ImportInput = styled.input`\r\n   width: 100%;\r\n   height: 100%;\r\n   position: absolute;\r\n   left: 0;\r\n   top: 0;\r\n   opacity: 0;\r\n`\r\n\r\nexport const IconWrapper = styled.div`\r\n   font-size: 50px;\r\n   color: ${colors.primary};\r\n`\r\n\r\nexport const StyledAlert = styled(Alert)`\r\n   width: 50%;\r\n   margin: 0 0 30px 0;\r\n`\r\n\r\nexport const Div = styled.div`\r\n   margin: 0 0 40px 0; \r\n   font-weight: 700;\r\n`\r\n\r\nexport const P = styled.p`\r\n   margin: ${({indent}) => indent ? '0 0 0 60px' : '0 0 0 40px'};\r\n`","import React from 'react';\r\nimport { Spin, Card } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\n\r\nimport * as S from './StyledClientsImport';\r\nimport {useImport} from '../../../hooks/useImport';\r\n\r\nconst ClientsImport = () => {\r\n   const [loading, data, error, uploadFile, showError] = useImport()\r\n\r\n   return (  \r\n      <>\r\n         {error && showError(error)}\r\n         <S.Wrapper>\r\n            <Spin size='large' spinning={loading}>\r\n               <S.ImportButton type='file'>\r\n                  <S.IconWrapper>\r\n                     <InboxOutlined color='white'/>\r\n                  </S.IconWrapper>\r\n                  Click or drag the file to this area to upload\r\n               </S.ImportButton>\r\n               <S.ImportInput  \r\n                  type='file' \r\n                  accept='.xls, .xlsx' \r\n                  onChange={(event) => uploadFile(event)} \r\n                  disabled={loading}\r\n               />\r\n            </Spin>\r\n         </S.Wrapper>\r\n         {data && \r\n            <>\r\n               <S.StyledAlert message=\"Data imported succesfully.\" type=\"success\" />\r\n               <Card title='Imported Data'>\r\n                  {data !==  null && data.map(client => \r\n                     <S.Div key={client.id}>\r\n                        <S.P>[</S.P>\r\n                        <S.P indent='true'>name: {client.name}</S.P>\r\n                        <S.P indent='true'>surname: {client.surname}</S.P>\r\n                        <S.P indent='true'>phone: {client.phone}</S.P>\r\n                        <S.P indent='true'>note: {client.note}</S.P>\r\n                        <S.P>]</S.P>\r\n                     </S.Div>   \r\n                  )}\r\n               </Card>\r\n            </>\r\n         }\r\n      </>\r\n   );\r\n}\r\n \r\nexport default ClientsImport;","import React from 'react';\r\nimport axios from 'axios';\r\nimport XLSX from 'xlsx';\r\nimport {useDispatch} from 'react-redux';\r\nimport { notification } from 'antd';\r\n\r\nimport actions from '../app/clients/actions';\r\n\r\nexport const useImport = () => {\r\n   const dispatch = useDispatch()\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [data, setData] = React.useState(null)\r\n   const [error, setError] = React.useState(null)\r\n\r\n   const importedClients = []\r\n   let counter = 1\r\n\r\n   const showError = (error) => {\r\n      if(error !== null) {\r\n         notification.error({\r\n            message: 'Import Error',\r\n            description: error,\r\n            placement: 'topRight',\r\n            showIcon: true,\r\n         });\r\n         setError(null)\r\n      }\r\n   }\r\n\r\n   const uploadFile = (e) => {\r\n      setLoading(true)\r\n      const files = e.target.files, f = files[0];\r\n\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = async function (e) {\r\n         const data = e.target.result;\r\n         let readedData = XLSX.read(data, {type: 'binary'});\r\n         const wsname = readedData.SheetNames[0];\r\n         const ws = readedData.Sheets[wsname];\r\n         const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n\r\n         for(let i = 1; i < dataParse.length; i++) {\r\n            const client = {\r\n               name: dataParse[i][0],\r\n               surname: dataParse[i][1],\r\n               phone: dataParse[i][2],\r\n               note: dataParse[i][3],\r\n            }\r\n            importedClients.push(client)        \r\n            counter++         \r\n         }\r\n\r\n         if(counter === dataParse.length) {\r\n            const response = await axios.post('/api/user/clients/import', {importedClients}, {withCredentials: true})\r\n            const {data, error} = response.data;\r\n\r\n            if(data) {\r\n               setData(data)\r\n               setError(null)\r\n               dispatch(actions.importClients(data))\r\n            }\r\n            \r\n            if(error) {\r\n               setError(error)\r\n               setData(null)\r\n            }\r\n            \r\n            setLoading(false)\r\n         }\r\n      };\r\n      reader.readAsBinaryString(f)\r\n   }\r\n\r\n   return [loading, data, error, uploadFile, showError]\r\n}","import React from 'react';\r\n\r\nimport * as S from './StyledImportClientsPage';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport ClientsExportToExcel from '../../../components/Clients/ClientsExportToExcel/ClientsExportToExcel';\r\nimport ClientsImport from '../../../components/Clients/ClientsImport/ClientsImport';\r\n\r\nconst ImportClientsPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/clients', label: 'Home'},\r\n               {to: '/user/clients', label: 'Clients'}\r\n            ]}\r\n            text='Import Clients'\r\n         />\r\n         <S.StyledCard title='Import Clients' bordered margin_style='true'>\r\n            <ClientsExportToExcel \r\n               fileName='clients_import_template'\r\n               buttonText='Download the template'\r\n               clients={[]}\r\n            />\r\n            <ClientsImport />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ImportClientsPage;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useFetchClient = (id) => {\r\n   const [loading, setLoading] = React.useState(true);\r\n   const [error, setError] = React.useState(false)\r\n   const [data, setData] = React.useState()\r\n\r\n   React.useEffect(() => {\r\n      setLoading(true);\r\n\r\n      const fetchData = async () => {\r\n         setError(false)\r\n\r\n         try {\r\n            const response = await axios.get(`/api/user/clients/${id}`, {withCredentials: true})\r\n            // można dać samo response.data i reuzyc ten hook\r\n            setData(response.data.client)\r\n         } catch(error) {\r\n            setError(true)\r\n         }\r\n      \r\n         setLoading(false);\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   return [loading, error, data]\r\n}","import styled, {css} from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   button {\r\n      margin: 0 10px 0 0;\r\n   }\r\n`\r\n\r\nexport const DetailsWrapper = styled.div`\r\n   width: 90%;\r\n   height: auto;\r\n   margin: 60px 20px 40px 20px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Item = styled.h2`\r\n   width: 100%;\r\n   padding: 10px;\r\n   color: ${colors.black85};\r\n   font-size: 15px;\r\n\r\n   display: flex;\r\n`\r\n\r\nexport const Label = styled.div`\r\n   width: 25%;\r\n   text-align: right;\r\n`\r\n\r\nexport const Value = styled.div`\r\n   width: 65%;\r\n   margin: 0 0 0 15px;\r\n   font-weight: 500;\r\n   text-align: left;\r\n`\r\n\r\nexport const NoData = styled.span`\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'antd';\r\nimport {EditOutlined, CopyOutlined} from '@ant-design/icons';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport DeleteClient from '../../../components/Clients/DeleteClient/DeleteClient';\r\n\r\nimport * as S from './StyledClientDetailsPage'\r\n\r\nconst ClientDetailsPage = ({data}) => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/clients', label: 'Home'},\r\n               {to: '/user/clients', label: 'Clients'}\r\n            ]}\r\n            text={`Client: ${data.id}`}\r\n         />\r\n         <S.StyledCard title='Client Details' bordered>\r\n            <S.ButtonsWrapper>\r\n               <Link to={`/user/clients/${data.id}/edit`}>\r\n                  <Button type='primary'>\r\n                     <EditOutlined />\r\n                     Edit\r\n                  </Button>\r\n               </Link>\r\n               <DeleteClient\r\n                  id={data.id}\r\n                  buttonType='primary' \r\n               />\r\n               <Link to='/auth/login'>\r\n                  <Button>\r\n                     <CopyOutlined />\r\n                     Audit Logs\r\n                  </Button>\r\n               </Link>\r\n            </S.ButtonsWrapper>\r\n            <S.DetailsWrapper>\r\n               <S.Item>\r\n                  <S.Label>ID: </S.Label>\r\n                  <S.Value>{data.id}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Name: </S.Label>\r\n                  <S.Value>{data.name}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Surname: </S.Label>\r\n                  <S.Value>{data.surname}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Phone:</S.Label>\r\n                  <S.Value>\r\n                     {data.phone\r\n                        ? data.phone\r\n                        : <S.NoData>No Data</S.NoData>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Note:</S.Label>\r\n                  <S.Value>\r\n                     {data.note\r\n                        ? data.note\r\n                        : <S.NoData>No Data</S.NoData>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Created At:</S.Label>\r\n                  <S.Value>{data.createdAt}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Updated At:</S.Label>\r\n                  <S.Value>{data.updatedAt}</S.Value>\r\n               </S.Item>\r\n            </S.DetailsWrapper>\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ClientDetailsPage;","import React from 'react';\r\n\r\nimport {useFetchClient} from '../../../hooks/useFetchClient';\r\n\r\nimport LoadingPage from '../../../pages/LoadingPage/LoadingPage';\r\nimport ClientDetailsPage from '../../../pages/Clients/ClientDetailsPage/ClientDetailsPage';\r\nimport ErrorPage from '../../../pages/ErrorPage/ErrorPage';\r\n\r\n\r\nconst FetchClient = ({match}) => {\r\n   const [loading, error, data] = useFetchClient(match.params.id)\r\n   \r\n   return (  \r\n      <>\r\n         {loading && <LoadingPage />}\r\n         {error && <ErrorPage />}\r\n         {data && <ClientDetailsPage data={data} />}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default FetchClient;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport actions from '../../../app/clients/actions';\r\nimport * as S from './StyledEditClientForm';\r\n\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport FormTextArea from '../../FormTextArea/FormTextArea';\r\n\r\n\r\nconst useForm = (id) => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [success, setSuccess] = React.useState(false)\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n\r\n      const response = await axios.post(`/api/user/clients/${id}/edit`, values, {withCredentials: true})\r\n      const {data} = response.data;\r\n\r\n      if(data) {\r\n         dispatch(actions.editClient(data))\r\n         dispatch(actions.editSearchClient(data))\r\n         setSuccess(true)\r\n      }\r\n\r\n      setLoading(false)\r\n   }\r\n\r\n   return [loading, success, submitForm]\r\n}\r\n\r\n\r\n\r\nconst EditClientForm = ({data}) => {\r\n   const [loading, success, submitForm] = useForm(data.id);\r\n\r\n   return (\r\n      <>\r\n         {success && <Redirect to={`/user/clients/${data.id}`} />}\r\n         <S.Wrapper> \r\n            <Formik\r\n               initialValues={{\r\n                  name: data.name,\r\n                  surname: data.surname,\r\n                  phone: data.phone, \r\n                  note: data.note\r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                     name: Yup\r\n                        .string()\r\n                        .min(3, 'Client name must have at least 3 letters')\r\n                        .required('Client name is required'),\r\n                     surname: Yup\r\n                        .string()\r\n                        .min(3, 'Client surname must have at least 3 letters')\r\n                        .required('Client surname is required'),\r\n                     phone: Yup\r\n                        .string()\r\n                        .notRequired(),\r\n                     note: Yup\r\n                        .string()\r\n                        .notRequired(),\r\n                  })}\r\n               onSubmit={values => {      \r\n                  submitForm(values)   \r\n               }}\r\n            >\r\n               {({handleSubmit}) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                     <FormInput \r\n                        label='Name'\r\n                        name='name'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Surname'\r\n                        name='surname'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Phone'\r\n                        name='phone'\r\n                        type='text'\r\n                     />\r\n                     <FormTextArea \r\n                        label='Note'\r\n                        name='note'\r\n                        placeholder='Note regarding the client'\r\n                     />\r\n                     <S.ButtonsWrapper>\r\n                        <SubmitButton loading={loading}>\r\n                           Save\r\n                           <SaveOutlined />\r\n                        </SubmitButton>\r\n                        <ResetButton>\r\n                           Reset\r\n                           <UndoOutlined />\r\n                        </ResetButton>\r\n                     </S.ButtonsWrapper>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         </S.Wrapper>\r\n      </>\r\n   )\r\n}\r\n \r\nexport default EditClientForm;","import React from 'react';\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\n\r\nimport * as S from './StyledClientEditPage';\r\n\r\nimport EditClientForm from '../../../components/Clients/EditClientForm/EditClientForm';\r\n\r\n\r\nconst ClientEditPage = ({data}) => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/clients', label: 'Home'},\r\n               {to: '/user/clients', label: 'Clients'},\r\n               {to: `/user/clients/${data.id}`, label: `Client: ${data.id}`}\r\n            ]}\r\n            text='Edit Client'\r\n         />\r\n         <S.StyledCard title='Edit Client' bordered margin_style='true'>\r\n            <EditClientForm data={data} />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ClientEditPage;","import React from 'react';\r\n\r\nimport {useFetchClient} from '../../../hooks/useFetchClient';\r\n\r\nimport LoadingPage from '../../../pages/LoadingPage/LoadingPage';\r\nimport ErrorPage from '../../../pages/ErrorPage/ErrorPage';\r\nimport ClientEditPage from '../../../pages/Clients/ClientEditPage/ClientEditPage';\r\n\r\n\r\nconst FetchClient = ({match}) => {\r\n   const [loading, error, data] = useFetchClient(match.params.id)\r\n   \r\n   return (  \r\n      <>\r\n         {loading && <LoadingPage />}\r\n         {error && <ErrorPage />}\r\n         {data && <ClientEditPage data={data} />}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default FetchClient;","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport ClientsPage from '../pages/Clients/ClientsPage/ClientsPage';\r\nimport ClientNewPage from '../pages/Clients/ClientNewPage/ClientNewPage';\r\nimport ImportClientsPage from '../pages/Clients/ImportClientsPage/ImportClientsPage';\r\nimport FetchClient from '../components/Clients/FetchClient/FetchClient';\r\nimport FetchClientToEdit from '../components/Clients/FetchClientToEdit/FetchClientToEdit';\r\nimport ErrorPage from '../pages/ErrorPage/ErrorPage';\r\n\r\nconst ClientsRoutes = () => {\r\n   return (  \r\n      <Switch>\r\n         <Route exact path='/user/clients' component={ClientsPage} />\r\n         <Route exact path='/user/clients/new' component={ClientNewPage} /> \r\n         <Route exact path='/user/clients/import' component={ImportClientsPage} />\r\n         {/* Może reużyć te dwa dodając propsa isEdit  */}\r\n         <Route exact path='/user/clients/:id' component={FetchClient} />\r\n         <Route exact path='/user/clients/:id/edit' component={FetchClientToEdit} />\r\n         <Route component={ErrorPage} />\r\n      </Switch>\r\n   );\r\n}\r\n \r\nexport default ClientsRoutes;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 30px 0;\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\nimport { Form } from 'formik-antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const StyledForm = styled(Form)`\r\n   width: 100%;\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   justify-content: space-between;\r\n`\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n   margin: 20px 0 0 0;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import React from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { Alert } from 'antd';\r\nimport { ResetButton, SubmitButton } from 'formik-antd';\r\nimport { UndoOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport * as S from './StyledSearchServicesForm';\r\nimport actions from '../../../app/services/actions';\r\n\r\nimport FormInput from '../../FormInput/FormInput';\r\n\r\n\r\nconst useForm = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const submitForm = async values => {\r\n      dispatch(actions.loadingServices(true))\r\n\r\n      const response = await axios.post(`/api/user/services/search`, values, {withCredentials: true})\r\n      const {data} = response.data;\r\n\r\n      if(data) dispatch(actions.searchServices(data))\r\n\r\n      dispatch(actions.loadingServices(false))\r\n      dispatch(actions.isSearchingServices(true))\r\n   }\r\n\r\n   return [submitForm]\r\n}\r\n\r\n\r\nconst SearchServicesForm = () => {\r\n   const {loading} = useSelector(state => state.servicesReducer)\r\n   const [submitForm] = useForm();\r\n\r\n   return (\r\n      <S.Wrapper> \r\n         <Formik\r\n            initialValues={{\r\n               id: '',\r\n               name: '', \r\n               priceFrom: '',\r\n               priceTo: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n               priceFrom: Yup\r\n                  .number('Letters are not allowed')\r\n                  .lessThan(2147483647, 'Can not be higher or equal 21474836467')\r\n                  .positive('Price can not be negative number or 0'),\r\n               priceTo: Yup\r\n                  .number('Letters are not allowed')\r\n                  .lessThan(2147483647, 'Can not be higher or equal 21474836467')\r\n                  .positive('Price can not be negative number or 0')\r\n            })}\r\n            onSubmit={values => {      \r\n               submitForm(values)   \r\n            }}\r\n         >\r\n            {({handleSubmit}) => (\r\n               <S.StyledForm onSubmit={handleSubmit}>\r\n                  <FormInput \r\n                     label='Id'\r\n                     name='id'\r\n                     type='number'\r\n                  />\r\n                  <FormInput \r\n                     label='Name'\r\n                     name='name'\r\n                     type='text'\r\n                  />\r\n                  <FormInput \r\n                     label='Price From'\r\n                     name='priceFrom'\r\n                     type='number'\r\n                  />\r\n                  <FormInput \r\n                     label='Price To'\r\n                     name='priceTo'\r\n                     type='number'\r\n                  />\r\n                  <S.ButtonsWrapper>\r\n                     <SubmitButton loading={loading}> \r\n                        Search\r\n                        <SearchOutlined />\r\n                     </SubmitButton>\r\n                     <ResetButton>\r\n                        Reset\r\n                        <UndoOutlined />\r\n                     </ResetButton>\r\n                  </S.ButtonsWrapper>\r\n               </S.StyledForm>\r\n            )}\r\n         </Formik>\r\n      </S.Wrapper>\r\n   )\r\n}\r\n \r\nexport default SearchServicesForm;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 20px 0 0 0;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n   margin: 0 0 20px 0;\r\n   display: flex;\r\n\r\n   button {\r\n      margin: 0 10px 0 0;\r\n   }\r\n`\r\n\r\nexport const P = styled.p`\r\n   margin: 0 0 0 10px;\r\n   color: ${colors.primary};\r\n   display: flex;\r\n   align-items: center;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 0 10px;\r\n`\r\n\r\nexport const TableWrapper = styled.div`\r\n   border: 1px solid #e8e8e8;\r\n   border-radius: 4px;\r\n\r\n   .ant-table-tbody > tr > td {\r\n      padding: 10px 16px;\r\n   }\r\n\r\n   .ant-pagination {\r\n      margin: 20px;\r\n   }\r\n\r\n   .ant-pagination-total-text {\r\n      margin: 0 20px 0 0;\r\n   }\r\n`","import React from 'react';\r\nimport {Popconfirm, Button} from 'antd';\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport actions from '../../../app/services/actions';\r\n\r\nconst useTableAction = () => {\r\n   const dispatch = useDispatch()  \r\n   const [success, setSuccess] = React.useState(false)\r\n\r\n   const confirmDelete = async id => {\r\n      const response = await axios.post('/api/user/services/delete', {id: [id]}, {withCredentials: true})\r\n      const {success} = response.data;\r\n\r\n      if(success) {\r\n         dispatch(actions.deleteService([id]))\r\n         dispatch(actions.deleteSearchService([id]))\r\n         setSuccess(true)\r\n      }\r\n   }\r\n\r\n   return [success, confirmDelete]\r\n}\r\n\r\n\r\n\r\nconst DeleteService = ({id, buttonType}) => {\r\n   const [success, confirmDelete] = useTableAction()\r\n\r\n   return (  \r\n      <>\r\n         {success && <Redirect to='/user/services' />}\r\n         <Popconfirm \r\n            placement=\"topLeft\" \r\n            title='Are you sure to delete this service ?' \r\n            onConfirm={() => confirmDelete(id)} \r\n            okText='Yes' \r\n            cancelText='No'\r\n         >\r\n            <Button type={buttonType}>\r\n               {buttonType === 'primary' && <DeleteOutlined />}\r\n               Delete\r\n            </Button>\r\n         </Popconfirm>\r\n      </>\r\n   );\r\n}\r\n \r\nexport default DeleteService;","import React from 'react';\r\n\r\nimport * as S from '../../components/Services/ServicesTable/StyledServicesTable';\r\n\r\nimport DeleteService from '../../components/Services/DeleteService/DeleteService';\r\n\r\nexport const servicesTableColumns = [\r\n   {  \r\n      title: 'Id', \r\n      dataIndex: 'id', \r\n      key: 'id', \r\n      sorter: (a, b) => a.id - b.id,\r\n      sortDirections: ['descend', 'ascend'],\r\n      defaultSortOrder: 'ascend'\r\n   },\r\n   { \r\n      title: 'Name', \r\n      dataIndex: 'name', \r\n      key: 'name', \r\n      sorter: (a, b) => a.name.toLowerCase().trim().localeCompare(b.name.toLowerCase().trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Price', dataIndex: 'price', \r\n      key: 'price', \r\n      render: (dataIndex) => <span>${dataIndex}</span>,\r\n      sorter: (a, b) => a.price - b.price,\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Created At', \r\n      key: 'createdAt', \r\n      dataIndex: 'createdAt',\r\n      sorter: (a, b) => a.createdAt.trim().localeCompare(b.createdAt.trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Action', \r\n      key: 'action',\r\n      render: ({id}) => \r\n         <>\r\n            <S.StyledLink to={`/user/services/${id}`}>View</S.StyledLink>\r\n            <S.StyledLink to={`/user/services/${id}/edit`}>Edit</S.StyledLink>\r\n            <DeleteService \r\n               id={id} \r\n               buttonType='link'\r\n            />\r\n         </>\r\n   },\r\n]","import React from 'react';\r\nimport {Button, Table, Popconfirm, Alert} from 'antd';\r\nimport { UndoOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport * as S from './StyledServicesTable';\r\nimport {useServicesTable} from '../../../hooks/useServicesTable';\r\n\r\nimport {servicesTableColumns} from '../../../assets/data/servicesTableColumns';\r\n\r\n\r\n\r\nconst ServicesTable = () => {\r\n   const [isReloading, selectedRowKeys, showTotal, reloadData, handleChangeRow, confirmDelete] = useServicesTable()\r\n   const {loading, services, isSearching, searchedServices} = useSelector(state => state.servicesReducer)\r\n\r\n   const data = !isSearching \r\n      ?  services.map(service => ({...service, key: service.id}))\r\n      :  searchedServices.map(service => ({...service, key: service.id}))\r\n   \r\n   const rowSelection = {\r\n      onChange: handleChangeRow,\r\n   }\r\n\r\n   const markedItems = services.filter(service => selectedRowKeys.includes(service.id))\r\n   \r\n   return (  \r\n      <S.Wrapper>\r\n         <S.ButtonsWrapper>\r\n            <Popconfirm \r\n               placement=\"topLeft\" \r\n               title='Are you sure to delete selected services ?' \r\n               onConfirm={confirmDelete} \r\n               okText='Yes' \r\n               cancelText='No'\r\n            >\r\n               <Button type=\"primary\" disabled={markedItems.length === 0}>\r\n                  delete\r\n                  <DeleteOutlined />\r\n               </Button>\r\n            </Popconfirm>\r\n            <Button type='primary' disabled={!isSearching} loading={isReloading} onClick={reloadData}>\r\n               Reload\r\n               <UndoOutlined />\r\n            </Button>\r\n            {!isSearching \r\n               ?  <S.P>You now see all Services.</S.P> \r\n               :  <S.P>You now see only searched Services. Please click reload button, to see all services again.</S.P>\r\n            }\r\n         </S.ButtonsWrapper>\r\n         <S.TableWrapper>\r\n            {( markedItems.length > 0 && isSearching ) &&\r\n               <Alert\r\n                  message='Warning'\r\n                  description={`You have selected ${markedItems.length} items. If you do not see all items, please reload services table to see all selected items.`}\r\n                  type='warning'\r\n                  showIcon\r\n               />\r\n            }\r\n            <Table\r\n               columns={servicesTableColumns} \r\n               dataSource={data} \r\n               loading={loading}\r\n               pagination={{\r\n                  showSizeChanger: true,\r\n                  showTotal,\r\n               }}\r\n               rowSelection={rowSelection}\r\n            />\r\n         </S.TableWrapper>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ServicesTable;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport actions from '../app/services/actions';\r\n\r\nexport const useServicesTable = () => {\r\n   const dispatch = useDispatch()\r\n   const {services, isSearching, searchedServices} = useSelector(state => state.servicesReducer)\r\n   const [isReloading, setIsReloading] = React.useState(false)\r\n   const [selectedRowKeys, setSelectedRowKeys] = React.useState([])\r\n\r\n   const showTotal = () => {\r\n      if(isSearching) return `Total ${searchedServices.length} items`\r\n      else return `Total ${services.length} items`\r\n   }\r\n\r\n   const reloadData = () => {\r\n      setIsReloading(true)\r\n      dispatch(actions.isSearchingServices(false))\r\n      setIsReloading(false)\r\n   }\r\n\r\n   const handleChangeRow = (selectedRowKeys) => {\r\n      setSelectedRowKeys(selectedRowKeys)\r\n   }\r\n\r\n   const confirmDelete = async () => {\r\n      const response = await axios.post('/api/user/services/delete', {id: selectedRowKeys}, {withCredentials: true})\r\n      const {success} = response.data;\r\n\r\n      if(success) {\r\n         dispatch(actions.deleteService(selectedRowKeys))\r\n         dispatch(actions.deleteSearchService(selectedRowKeys))\r\n      }\r\n   }\r\n   \r\n   return [isReloading, selectedRowKeys, showTotal, reloadData, handleChangeRow, confirmDelete]\r\n}","import React from 'react';\r\n\r\nimport * as S from './StyledServicesPage';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport ButtonsGroup from '../../../components/ButtonsGroup/ButtonsGroup';\r\nimport SearchServicesForm from '../../../components/Services/SearchServicesForm/SearchServicesForm';\r\nimport ServicesTable from '../../../components/Services/ServicesTable/ServicesTable';\r\n\r\n\r\n\r\nconst ServicesPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/services', label: 'Home'}\r\n            ]}\r\n            text='Services'\r\n         />\r\n         <S.StyledCard title='Services' bordered>\r\n            <ButtonsGroup \r\n               entity='services'\r\n               showExportImport={false}\r\n            />\r\n            <S.StyledCard title='Search Services'>\r\n               <SearchServicesForm />\r\n            </S.StyledCard>\r\n            <ServicesTable />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ServicesPage;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport actions from '../../../app/services/actions';\r\nimport * as S from './StyledNewServiceForm';\r\n\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport FormTextArea from '../../FormTextArea/FormTextArea';\r\n\r\n\r\nconst useForm = () => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [success, setSuccess] = React.useState(false)\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n\r\n      const response = await axios.post('/api/user/services/new', values, {withCredentials: true})\r\n      const {data} = response.data;\r\n\r\n      if(data) {\r\n         dispatch(actions.addService(data))\r\n         setSuccess(true)\r\n      }\r\n\r\n      setLoading(false)\r\n   }\r\n\r\n   return [loading, success, submitForm]\r\n}\r\n\r\n\r\n\r\nconst NewServiceForm = () => {\r\n   const [loading, success, submitForm] = useForm();\r\n\r\n   return (\r\n      <>\r\n         {success && <Redirect to='/user/services' />}\r\n         <S.Wrapper> \r\n            <Formik\r\n               initialValues={{\r\n                  name: '',\r\n                  price: '', \r\n                  note: ''\r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                  name: Yup\r\n                     .string()\r\n                     .min(3, 'Service name must have at least 3 letters')\r\n                     .required('Service name is required'),\r\n                  price: Yup\r\n                     .number('Letters are not allowed')\r\n                     .lessThan(2147483647, 'Price can not be higher or equal 21474836467')\r\n                     .positive('Price can not be negative number or 0')\r\n                     .required('Service price is required'),\r\n                  note: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n               })}\r\n               onSubmit={values => {      \r\n                  submitForm(values)   \r\n               }}\r\n            >\r\n               {({handleSubmit}) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                     <FormInput \r\n                        label='Name'\r\n                        name='name'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Price'\r\n                        name='price'\r\n                        type='number'\r\n                     />\r\n                     <FormTextArea \r\n                        label='Note'\r\n                        name='note'\r\n                        placeholder='Note regarding the service'\r\n                     />\r\n                     <S.ButtonsWrapper>\r\n                        <SubmitButton loading={loading}>\r\n                           Save\r\n                           <SaveOutlined />\r\n                        </SubmitButton>\r\n                        <ResetButton>\r\n                           Reset\r\n                           <UndoOutlined />\r\n                        </ResetButton>\r\n                     </S.ButtonsWrapper>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         </S.Wrapper>\r\n      </>\r\n   )\r\n}\r\n \r\nexport default NewServiceForm;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`","import React from 'react';\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\n\r\nimport NewServiceForm from '../../../components/Services/NewServiceForm/NewServiceForm';\r\n\r\nimport * as S from './StyledServiceNewPage';\r\n\r\n\r\nconst ServiceNewPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/services', label: 'Home'},\r\n               {to: '/user/services', label: 'Services'}\r\n            ]}\r\n            text='New Service'\r\n         />\r\n         <S.StyledCard title='New Service' bordered margin_style='true'>\r\n            <NewServiceForm />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ServiceNewPage;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useFetchService = (id) => {\r\n   const [loading, setLoading] = React.useState(true);\r\n   const [error, setError] = React.useState(false)\r\n   const [data, setData] = React.useState(null)\r\n\r\n   React.useEffect(() => {\r\n      setLoading(true);\r\n\r\n      const fetchData = async () => {\r\n         setError(false)\r\n\r\n         try {\r\n            const response = await axios.get(`/api/user/services/${id}`, {withCredentials: true})\r\n            setData(response.data.service)\r\n         } catch(error) {\r\n            setError(true)\r\n         }\r\n      \r\n         setLoading(false);\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   return [loading, error, data]\r\n}","import styled, {css} from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   button {\r\n      margin: 0 10px 0 0;\r\n   }\r\n`\r\n\r\nexport const DetailsWrapper = styled.div`\r\n   width: 90%;\r\n   height: auto;\r\n   margin: 60px 20px 40px 20px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Item = styled.h2`\r\n   width: 100%;\r\n   padding: 10px;\r\n   color: ${colors.black85};\r\n   font-size: 15px;\r\n\r\n   display: flex;\r\n`\r\n\r\nexport const Label = styled.div`\r\n   width: 25%;\r\n   text-align: right;\r\n`\r\n\r\nexport const Value = styled.div`\r\n   width: 65%;\r\n   margin: 0 0 0 15px;\r\n   font-weight: 500;\r\n   text-align: left;\r\n`\r\n\r\nexport const NoData = styled.span`\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'antd';\r\nimport {EditOutlined, CopyOutlined} from '@ant-design/icons';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport DeleteService from '../../../components/Services/DeleteService/DeleteService';\r\n\r\nimport * as S from './StyledServiceDetailsPage'\r\n\r\nconst ServiceDetailsPage = ({data}) => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/serivces', label: 'Home'},\r\n               {to: '/user/services', label: 'Services'}\r\n            ]}\r\n            text={`Service: ${data.id}`}\r\n         />\r\n         <S.StyledCard title='Service Details' bordered>\r\n            <S.ButtonsWrapper>\r\n               <Link to={`/user/services/${data.id}/edit`}>\r\n                  <Button type='primary'>\r\n                     <EditOutlined />\r\n                     Edit\r\n                  </Button>\r\n               </Link>\r\n               <DeleteService \r\n                  id={data.id}\r\n                  buttonType='primary' \r\n               />\r\n               <Link to='/auth/login'>\r\n                  <Button>\r\n                     <CopyOutlined />\r\n                     Audit Logs\r\n                  </Button>\r\n               </Link>\r\n            </S.ButtonsWrapper>\r\n            <S.DetailsWrapper>\r\n               <S.Item>\r\n                  <S.Label>ID: </S.Label>\r\n                  <S.Value>{data.id}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Name: </S.Label>\r\n                  <S.Value>{data.name}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Price: </S.Label>\r\n                  <S.Value>${data.price}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Note:</S.Label>\r\n                  <S.Value>\r\n                     {data.note\r\n                        ? data.note\r\n                        : <S.NoData>No Data</S.NoData>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Created At:</S.Label>\r\n                  <S.Value>{data.createdAt}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Updated At:</S.Label>\r\n                  <S.Value>{data.updatedAt}</S.Value>\r\n               </S.Item>\r\n            </S.DetailsWrapper>\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ServiceDetailsPage;","import React from 'react';\r\n\r\nimport {useFetchService} from '../../../hooks/useFetchService';\r\n\r\nimport LoadingPage from '../../../pages/LoadingPage/LoadingPage';\r\nimport ErrorPage from '../../../pages/ErrorPage/ErrorPage';\r\nimport ServiceDetailsPage from '../../../pages/Services/ServiceDetailsPage/ServiceDetailsPage';\r\n\r\n\r\nconst FetchService = ({match}) => {\r\n   const [loading, error, data] = useFetchService(match.params.id)\r\n   \r\n   return (  \r\n      <>\r\n         {loading && <LoadingPage />}\r\n         {error && <ErrorPage />}\r\n         {data && <ServiceDetailsPage data={data} />}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default FetchService;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport actions from '../../../app/services/actions';\r\nimport * as S from './StyledEditServiceForm';\r\n\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport FormTextArea from '../../FormTextArea/FormTextArea';\r\n\r\n\r\nconst useForm = (id) => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [success, setSuccess] = React.useState(false)\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n\r\n      const response = await axios.post(`/api/user/services/${id}/edit`, values, {withCredentials: true})\r\n      const {data} = response.data;\r\n\r\n      if(data) {\r\n         dispatch(actions.editService(data))\r\n         dispatch(actions.editSearchService(data))\r\n         setSuccess(true)\r\n      }\r\n\r\n      setLoading(false)\r\n   }\r\n\r\n   return [loading, success, submitForm]\r\n}\r\n\r\n\r\n\r\nconst EditServiceForm = ({data}) => {\r\n   const [loading, success, submitForm] = useForm(data.id);\r\n\r\n   return (\r\n      <>\r\n         {success && <Redirect to={`/user/services/${data.id}`} />}\r\n         <S.Wrapper> \r\n            <Formik\r\n               initialValues={{\r\n                  name: data.name,\r\n                  price: data.price, \r\n                  note: data.note\r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                  name: Yup\r\n                     .string()\r\n                     .min(3, 'Service name must have at least 3 letters')\r\n                     .required('Service name is required'),\r\n                  price: Yup\r\n                     .number('Letters are not allowed')\r\n                     .required('Service price is required'),\r\n                  note: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n               })}\r\n               onSubmit={values => {      \r\n                  submitForm(values)   \r\n               }}\r\n            >\r\n               {({handleSubmit}) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                     <FormInput \r\n                        label='Name'\r\n                        name='name'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Price'\r\n                        name='price'\r\n                        type='number'\r\n                     />\r\n                     <FormTextArea \r\n                        label='Note'\r\n                        name='note'\r\n                        placeholder='Note regarding the service'\r\n                     />\r\n                     <S.ButtonsWrapper>\r\n                        <SubmitButton loading={loading}>\r\n                           Save\r\n                           <SaveOutlined />\r\n                        </SubmitButton>\r\n                        <ResetButton>\r\n                           Reset\r\n                           <UndoOutlined />\r\n                        </ResetButton>\r\n                     </S.ButtonsWrapper>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         </S.Wrapper>\r\n      </>\r\n   )\r\n}\r\n \r\nexport default EditServiceForm;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`","import React from 'react';\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\n\r\nimport EditServiceForm from '../../../components/Services/EditServiceForm/EditServiceForm';\r\n\r\nimport * as S from './StyledServiceEditPage';\r\n\r\n\r\nconst ServiceEditPage = ({data}) => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/services', label: 'Home'},\r\n               {to: '/user/services', label: 'Services'},\r\n               {to: `/user/services/${data.id}`, label: `Service: ${data.id}`}\r\n            ]}\r\n            text='Edit Service'\r\n         />\r\n         <S.StyledCard title='Edit Service' bordered margin_style='true'>\r\n            <EditServiceForm data={data} />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default ServiceEditPage;","import React from 'react';\r\n\r\nimport {useFetchService} from '../../../hooks/useFetchService';\r\n\r\nimport LoadingPage from '../../../pages/LoadingPage/LoadingPage';\r\nimport ErrorPage from '../../../pages/ErrorPage/ErrorPage';\r\nimport ServiceEditPage from '../../../pages/Services/ServiceEditPage/ServiceEditPage';\r\n\r\n\r\nconst FetchServiceToEdit = ({match}) => {\r\n   const [loading, error, data] = useFetchService(match.params.id)\r\n   \r\n   return (  \r\n      <>\r\n         {loading && <LoadingPage />}\r\n         {error && <ErrorPage />}\r\n         {data && <ServiceEditPage data={data} />}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default FetchServiceToEdit;","import * as React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport ServicesPage from '../pages/Services/ServicesPage/ServicesPage';\r\nimport ServiceNewPage from '../pages/Services/ServiceNewPage/ServiceNewPage';\r\nimport FetchService from '../components/Services/FetchService/FetchService';\r\nimport FetchServiceToEdit from '../components/Services/FetchServiceToEdit/FetchServiceToEdit';\r\nimport ErrorPage from '../pages/ErrorPage/ErrorPage';\r\n\r\n\r\nconst ServicesRoutes = () => {\r\n   return (  \r\n      <Switch>\r\n         <Route exact path='/user/services' component={ServicesPage} />\r\n         <Route exact path='/user/services/new' component={ServiceNewPage} /> \r\n         <Route exact path='/user/services/:id' component={FetchService} />\r\n         <Route exact path='/user/services/:id/edit' component={FetchServiceToEdit} />\r\n         <Route component={ErrorPage} />\r\n      </Switch>\r\n   )\r\n}\r\n \r\nexport default ServicesRoutes;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 30px 0;\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 20px 0 0 0;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n   margin: 0 0 20px 0;\r\n   display: flex;\r\n\r\n   button {\r\n      margin: 0 10px 0 0;\r\n   }\r\n`\r\n\r\nexport const P = styled.p`\r\n   margin: 0 0 0 10px;\r\n   color: ${colors.primary};\r\n   display: flex;\r\n   align-items: center;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n   margin: 0 10px;\r\n`\r\n\r\nexport const TableWrapper = styled.div`\r\n   border: 1px solid #e8e8e8;\r\n   border-radius: 4px;\r\n\r\n   .ant-table-tbody > tr > td {\r\n      padding: 10px 16px;\r\n   }\r\n\r\n   .ant-pagination {\r\n      margin: 20px;\r\n   }\r\n\r\n   .ant-pagination-total-text {\r\n      margin: 0 20px 0 0;\r\n   }\r\n`","import React from 'react';\r\nimport {Popconfirm, Button} from 'antd';\r\nimport {DeleteOutlined} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport actions from '../../../app/employees/actions';\r\n\r\nconst useTableAction = () => {\r\n   const dispatch = useDispatch()  \r\n   const [success, setSuccess] = React.useState(false)\r\n\r\n   const confirmDelete = async id => {\r\n      const response = await axios.post('/api/user/employees/delete', {id: [id]}, {withCredentials: true})\r\n      const {success} = response.data;\r\n\r\n      if(success) {\r\n         dispatch(actions.deleteEmployee([id]))\r\n         dispatch(actions.deleteSearchEmployee([id]))\r\n         setSuccess(true)\r\n      }\r\n   }\r\n\r\n   return [success, confirmDelete]\r\n}\r\n\r\n\r\n\r\nconst DeleteEmployee = ({id, buttonType}) => {\r\n   const [success, confirmDelete] = useTableAction()\r\n\r\n   return (  \r\n      <>\r\n         {success && <Redirect to='/user/employees' />}\r\n         {/* To by mozna było reuzyc client, employee etc zmienic na item*/}\r\n         <Popconfirm \r\n            placement=\"topLeft\" \r\n            title='Are you sure to delete this employee ?' \r\n            onConfirm={() => confirmDelete(id)} \r\n            okText='Yes' \r\n            cancelText='No'\r\n         >\r\n            <Button type={buttonType}>\r\n               {buttonType === 'primary' && <DeleteOutlined />}\r\n               Delete\r\n            </Button>\r\n         </Popconfirm>\r\n      </>\r\n   );\r\n}\r\n \r\nexport default DeleteEmployee;","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const FormWrapper = styled.div`\r\n   width: 100%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const DataWrapper = styled.div`\r\n   width: 60%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const FormInputWrapper = styled(DataWrapper)``\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 40px 0 0 15px;\r\n   }\r\n`\r\n\r\n","import React from 'react';\r\nimport { Modal, Alert, Button, notification } from 'antd';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nimport * as S from './StyledChangeEmployeePassword';\r\n\r\n\r\nconst useModal = (id) => {\r\n   const [visible, setVisible] = React.useState(false)\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [error, setError] = React.useState(false)\r\n\r\n   const showModal = () => {\r\n      setError(false)\r\n      setVisible(true)\r\n   }\r\n\r\n   const showNotification = () => {\r\n      notification.success({message: 'Password change successfully', placement: 'topRight'})\r\n   }\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n      try {\r\n         const response = await axios.post(`/api/user/employees/${id}/change-password`, values, {withCredentials: true})\r\n         const {success} = response.data\r\n         if(success) {\r\n            setError(false)\r\n            setVisible(false)\r\n            showNotification()\r\n         } \r\n      } catch(err) {\r\n         setError(true)\r\n      }\r\n      setLoading(false)\r\n   }\r\n\r\n   const handleCancel = e => {\r\n      setError(false)\r\n      setVisible(false)\r\n   }\r\n\r\n   return [visible, loading, error, showModal, submitForm, handleCancel]\r\n}\r\n\r\n\r\n\r\nconst ChangeEmployeePassword = ({id, email}) => {\r\n   const [visible, loading, error, showModal, submitForm, handleCancel] = useModal(id);\r\n\r\n   return (  \r\n      <>\r\n         <Button type='link' onClick={showModal}>\r\n            Change password\r\n         </Button>\r\n         <Modal\r\n            title='Change password'\r\n            footer={null}\r\n            visible={visible}\r\n            onCancel={handleCancel}\r\n         >\r\n            {error && \r\n               <Alert\r\n                  message='Something goes wrong...'\r\n                  description='Can not change password right now.'\r\n                  type='error'\r\n                  showIcon\r\n                  style={{'margin': '0 0 20px 0'}}\r\n               />\r\n            }\r\n            <S.DataWrapper>\r\n               <S.Label>\r\n                  Id:\r\n               </S.Label>\r\n               {id}\r\n            </S.DataWrapper>\r\n            <S.DataWrapper>\r\n               <S.Label>\r\n                  Login:\r\n               </S.Label>\r\n               {email}\r\n            </S.DataWrapper>\r\n            <S.FormWrapper> \r\n               <Formik\r\n                  initialValues={{\r\n                     password: '',\r\n                     confirmPassword: ''\r\n                  }}\r\n                  validationSchema={Yup.object().shape({\r\n                     password: Yup\r\n                        .string()\r\n                        .min(8, 'Minimum 8 characters')\r\n                        .matches(/^(?=.*[A-Z])/, 'Must contain at least one uppercase character')\r\n                        .matches(/^(?=.*[0-9])/, 'Must contain at least one numeric character')\r\n                        .matches(/^(?=.*[!@#$%^&*()])/, 'Must contain at least one special character')\r\n                        .required('Password is required'),\r\n                     confirmPassword: Yup\r\n                        .string()\r\n                        .required('Password must match')\r\n                        .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n                  })}\r\n                  onSubmit={values => {      \r\n                     submitForm(values)   \r\n                  }}\r\n               >\r\n                  {({handleSubmit}) => (\r\n                     <Form onSubmit={handleSubmit}>\r\n                        <S.FormInputWrapper>\r\n                           <S.Label>\r\n                              New Password:\r\n                           </S.Label>\r\n                           <Input.Password name='password' />\r\n                           <S.StyledErrorMessage \r\n                              name='password'\r\n                              component='p'\r\n                           />\r\n                        </S.FormInputWrapper>\r\n                        <S.FormInputWrapper>\r\n                           <S.Label>\r\n                              Confirm Password:\r\n                           </S.Label>\r\n                           <Input.Password name='confirmPassword' />\r\n                           <S.StyledErrorMessage \r\n                              name='confirmPassword'\r\n                              component='p'\r\n                           />\r\n                        </S.FormInputWrapper>\r\n                        <S.ButtonsWrapper>\r\n                           <SubmitButton loading={loading}>\r\n                              Save\r\n                              <SaveOutlined />\r\n                           </SubmitButton>\r\n                           <ResetButton>\r\n                              Reset\r\n                              <UndoOutlined />\r\n                           </ResetButton>\r\n                        </S.ButtonsWrapper>\r\n                     </Form>\r\n                  )}\r\n               </Formik>\r\n            </S.FormWrapper>\r\n         </Modal>\r\n      </>\r\n   );\r\n}\r\n \r\nexport default ChangeEmployeePassword;","import React from 'react';\r\nimport { Tag } from 'antd';\r\n\r\nimport * as S from '../../components/Employees/EmployeesTable/StyledEmployeesTable';\r\n\r\nimport DeleteEmployee from '../../components/Employees/DeleteEmployee/DeleteEmployee';\r\nimport ChangeEmployeePassword from '../../components/Employees/ChangeEmployeePassword/ChangeEmployeePassword';\r\n\r\nexport const employeesTableColumns = [\r\n   {  \r\n      title: 'Id', \r\n      dataIndex: 'id', \r\n      key: 'id', \r\n      sorter: (a, b) => a.id - b.id,\r\n      sortDirections: ['descend', 'ascend'],\r\n      defaultSortOrder: 'ascend'\r\n   },\r\n   { \r\n      title: 'Name', \r\n      dataIndex: 'name', \r\n      key: 'name', \r\n      sorter: (a, b) => a.name.toLowerCase().trim().localeCompare(b.name.toLowerCase().trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Surname', \r\n      dataIndex: 'surname', \r\n      key: 'surname', \r\n      sorter: (a, b) => a.surname.toLowerCase().trim().localeCompare(b.surname.toLowerCase().trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   {\r\n      title: 'Enable', \r\n      dataIndex: 'enable', \r\n      key: 'enable', \r\n      render: (dataIndex) => \r\n         <span>\r\n            {dataIndex\r\n               ?  <Tag color=\"green\">Yes</Tag>\r\n               :  <Tag color=\"magenta\">No</Tag>\r\n            }\r\n         </span>\r\n   },\r\n   {\r\n      title: 'Email', \r\n      dataIndex: 'email', \r\n      key: 'email', \r\n      sorter: (a, b) => a.surname.toLowerCase().trim().localeCompare(b.surname.toLowerCase().trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Phone', \r\n      dataIndex: 'phone', \r\n      key: 'phone', \r\n      sorter: (a, b) => a.phone.trim().localeCompare(b.phone.trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Created At', key: 'createdAt', dataIndex: 'createdAt',\r\n      sorter: (a, b) => a.createdAt.trim().localeCompare(b.createdAt.trim()),\r\n      sortDirections: ['descend', 'ascend']\r\n   },\r\n   { \r\n      title: 'Action', \r\n      key: 'action',\r\n      render: ({id, email}) => \r\n         <>\r\n            <S.StyledLink to={`/user/employees/${id}`}>View</S.StyledLink>\r\n            <S.StyledLink to={`/user/employees/${id}/edit`}>Edit</S.StyledLink>\r\n            <ChangeEmployeePassword \r\n               id={id}\r\n               email={email}\r\n            />\r\n            <DeleteEmployee\r\n               id={id} \r\n               buttonType='link'\r\n            />\r\n         </>\r\n   },\r\n]","import React from 'react';\r\nimport {Button, Table, Popconfirm, Alert} from 'antd';\r\nimport { UndoOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport * as S from './StyledEmployeesTable';\r\nimport {useEmployeesTable} from '../../../hooks/useEmployeesTable';\r\nimport {employeesTableColumns} from '../../../assets/data/employeesTableColumns';\r\n\r\n\r\nconst EmployeesTable = () => {\r\n   const [isReloading, selectedRowKeys, showTotal, reloadData, handleChangeRow, confirmDelete] = useEmployeesTable()\r\n   const {loading, employees, isSearching, searchedEmployees} = useSelector(state => state.employeesReducer)\r\n\r\n   const data = !isSearching \r\n      ?  employees.map(employee => ({...employee, key: employee.id}))\r\n      :  searchedEmployees.map(employee => ({...employee, key: employee.id}))\r\n   \r\n   const rowSelection = {\r\n      onChange: handleChangeRow,\r\n   }\r\n\r\n   const markedItems = employees.filter(employee => selectedRowKeys.includes(employee.id))\r\n\r\n   return (  \r\n      <S.Wrapper>\r\n         <S.ButtonsWrapper>\r\n            <Popconfirm \r\n               placement=\"topLeft\" \r\n               title='Are you sure to delete selected employees ?' \r\n               onConfirm={confirmDelete} \r\n               okText='Yes' \r\n               cancelText='No'\r\n            >\r\n               <Button type=\"primary\" disabled={markedItems.length === 0}>\r\n                  delete\r\n                  <DeleteOutlined />\r\n               </Button>\r\n            </Popconfirm>\r\n            <Button type='primary' disabled={!isSearching} loading={isReloading} onClick={reloadData}>\r\n               Reload\r\n               <UndoOutlined />\r\n            </Button>\r\n            {!isSearching \r\n               ?  <S.P>You now see all Employees.</S.P> \r\n               :  <S.P>You now see only searched Employees. Please click reload button, to see all employees again.</S.P>\r\n            }\r\n         </S.ButtonsWrapper>\r\n         <S.TableWrapper>\r\n            {( markedItems.length > 0 && isSearching ) &&\r\n               <Alert\r\n                  message='Warning'\r\n                  description={`You have selected ${markedItems.length} items. If you do not see all items, please reload employees table to see all selected items.`}\r\n                  type='warning'\r\n                  showIcon\r\n               />\r\n            }\r\n            <Table\r\n               columns={employeesTableColumns} \r\n               dataSource={data} \r\n               loading={loading}\r\n               pagination={{\r\n                  showSizeChanger: true,\r\n                  showTotal,\r\n               }}\r\n               rowSelection={rowSelection}\r\n            />\r\n         </S.TableWrapper>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default EmployeesTable;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport actions from '../app/employees/actions';\r\n\r\nexport const useEmployeesTable = () => {\r\n   const dispatch = useDispatch()\r\n   const {employees, isSearching, searchedEmployees} = useSelector(state => state.employeesReducer)\r\n   const [isReloading, setIsReloading] = React.useState(false)\r\n   const [selectedRowKeys, setSelectedRowKeys] = React.useState([])\r\n\r\n   const showTotal = () => {\r\n      if(isSearching) return `Total ${searchedEmployees.length} items`\r\n      else return `Total ${employees.length} items`\r\n   }\r\n\r\n   const reloadData = () => {\r\n      setIsReloading(true)\r\n      dispatch(actions.isSearchingEmployees(false))\r\n      setIsReloading(false)\r\n   }\r\n\r\n   const handleChangeRow = (selectedRowKeys) => {\r\n      setSelectedRowKeys(selectedRowKeys)\r\n   }\r\n\r\n   const confirmDelete = async () => {\r\n      const response = await axios.post('/api/user/employees/delete', {id: selectedRowKeys}, {withCredentials: true})\r\n      const {success} = response.data;\r\n\r\n      if(success) {\r\n         dispatch(actions.deleteEmployee(selectedRowKeys))\r\n         dispatch(actions.deleteSearchEmployee(selectedRowKeys))\r\n      }\r\n   }\r\n   \r\n   return [isReloading, selectedRowKeys, showTotal, reloadData, handleChangeRow, confirmDelete]\r\n}","import styled from 'styled-components';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const StyledForm = styled(Form)`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   justify-content: space-between;\r\n`\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n   margin: 20px 0 0 0;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import styled from 'styled-components';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`","import React from 'react';\r\nimport { Select } from 'formik-antd';\r\n\r\nimport * as S from './StyledSelectEnable';\r\n\r\nconst { Option } = Select;\r\n\r\nconst SelectEnable = () => {\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            Enable:\r\n         </S.Label>\r\n         <Select name='enable' defaultValue=\"all\" >\r\n            <Option value='all'>All</Option>\r\n            <Option value='yes'>Only Yes</Option>\r\n            <Option value='no'>Only No</Option>\r\n         </Select>\r\n      </S.FieldWrapper> \r\n   );\r\n}\r\n \r\nexport default SelectEnable;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Input, ResetButton, SubmitButton } from 'formik-antd';\r\nimport { UndoOutlined, SearchOutlined } from '@ant-design/icons';\r\n\r\nimport * as S from './StyledSearchEmployeesForm';\r\nimport actions from '../../../app/employees/actions';\r\n\r\nimport SelectEnable from '../SelectEnable/SelectEnable';\r\n\r\n\r\nconst useForm = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const submitForm = async values => {\r\n      dispatch(actions.loadingEmployees(true))\r\n\r\n      const response = await axios.post(`/api/user/employees/search`, values, {withCredentials: true})\r\n      const {data} = response.data;\r\n\r\n      if(data) dispatch(actions.searchEmployees(data))\r\n\r\n      dispatch(actions.loadingEmployees(false))\r\n      dispatch(actions.isSearchingEmployees(true))\r\n   }\r\n\r\n   return [submitForm]\r\n}\r\n\r\n\r\n\r\nconst SearchEmployeesForm = () => {\r\n   const {loading} = useSelector(state => state.employeesReducer)\r\n   const [submitForm] = useForm();\r\n\r\n   return (\r\n      <S.Wrapper> \r\n         <Formik\r\n            initialValues={{\r\n               id: '',\r\n               name: '',\r\n               surname: '',\r\n               phone: '',\r\n               email: '',\r\n               enable: 'all',\r\n            }}\r\n            onSubmit={values => {      \r\n               submitForm(values)   \r\n            }}\r\n         >\r\n            {({handleSubmit}) => (\r\n               <S.StyledForm onSubmit={handleSubmit}>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Id:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='id' \r\n                        type='number' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Name:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='name' \r\n                        type='text' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Phone:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='phone' \r\n                        type='text' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Surname:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='surname' \r\n                        type='text' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <S.FieldWrapper>\r\n                     <S.Label>\r\n                        Email:\r\n                     </S.Label>\r\n                     <Input \r\n                        name='email' \r\n                        type='text' \r\n                     />\r\n                  </S.FieldWrapper>\r\n                  <SelectEnable />\r\n                  <S.ButtonsWrapper>\r\n                     <SubmitButton loading={loading}>\r\n                        Search\r\n                        <SearchOutlined />\r\n                     </SubmitButton>\r\n                     <ResetButton>\r\n                        Reset\r\n                        <UndoOutlined /> \r\n                     </ResetButton>\r\n                  </S.ButtonsWrapper>\r\n               </S.StyledForm>\r\n            )}\r\n         </Formik>\r\n      </S.Wrapper>\r\n   )\r\n}\r\n \r\nexport default SearchEmployeesForm;","import React from 'react';\r\n\r\nimport * as S from './StyledEmployeesPage';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport ButtonsGroup from '../../../components/ButtonsGroup/ButtonsGroup';\r\nimport EmployeesTable from '../../../components/Employees/EmployeesTable/EmployeesTable';\r\nimport SearchEmployeesForm from '../../../components/Employees/SearchEmployeesForm/SearchEmployeesForm';\r\n\r\n\r\nconst EmployeesPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/employees', label: 'Home'}\r\n            ]}\r\n            text='Employees'\r\n         />\r\n         <S.StyledCard title='Employees' bordered>\r\n            <ButtonsGroup \r\n               entity='employees'\r\n               showExportImport={false}\r\n            />\r\n            <S.StyledCard title='Search Employees'>\r\n               <SearchEmployeesForm />\r\n            </S.StyledCard>\r\n            <EmployeesTable />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default EmployeesPage;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","export const reservations = [\r\n   {label: 'Access to reservations', value: 'reservations-access'}, \r\n   {label: 'Add and edit reservations', value: 'reservations-modify'}, \r\n   {label: 'Delete reservations', value: 'reservations-delete'},\r\n];\r\n\r\nexport const employees = [\r\n   {label: 'Access to employees', value: 'employees-access'},\r\n   {label: 'Add and edit employees', value: 'employees-modify'}, \r\n   {label: 'Change employee password', value: 'employee-password'},\r\n   {label: 'Delete employees', value: 'employees-delete'},\r\n];\r\n\r\nexport const services = [\r\n   {label: 'Access to services', value: 'services-access'},\r\n   {label: 'Add and edit services', value: 'services-modify'},\r\n   {label: 'Delete services', value: 'services-delete'},\r\n];\r\n\r\nexport const profile = [\r\n   {label: 'Access to profile', value: 'profile-access'},\r\n   {label: 'Edit profile data', value: 'profile-modify'},\r\n];\r\n\r\nexport const audit = [\r\n   {label: 'Access to audit logs', value: 'audit-logs-access'},\r\n];\r\n\r\nexport const clients = [\r\n   {label: 'Access to clients', value: 'clients-access'},\r\n   {label: 'Add and edit clients', value: 'clients-modify'},\r\n   {label: 'Delete clients', value: 'clients-delete'},\r\n   {label: 'Import clients', value: 'clients-import'},\r\n   {label: 'Export clients', value: 'clients-export'},\r\n];","import styled from 'styled-components';\r\nimport {ErrorMessage} from 'formik';\r\n\r\nimport colors from '../../assets/colors';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const StyledErrorMessage = styled(ErrorMessage)`\r\n   margin-right: auto;\r\n   margin-left: 5px;\r\n   font-family: 'segoe';\r\n   font-size: 14px;\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport {Select} from 'formik-antd';\r\n\r\nimport {reservations, employees, services, profile, audit, clients} from '../../assets/data/selectRoles';\r\nimport * as S from './StyledSelectRoles';\r\n\r\nconst {Option, OptGroup} = Select;\r\n\r\n\r\nconst useSelect = (initialRoles) => {\r\n   const [selectedItems, setSelectedItems] = React.useState([]);\r\n\r\n   const handleChange = selectedItems => {\r\n      setSelectedItems(selectedItems)\r\n   };\r\n\r\n   React.useEffect(() => {\r\n      const fetchRoles = () => {\r\n         setSelectedItems(initialRoles)\r\n      }\r\n      fetchRoles()\r\n   }, [])\r\n   \r\n   \r\n   return [selectedItems, handleChange]\r\n}\r\n\r\n\r\n\r\nconst SelectRoles = ({name, initialRoles}) => {\r\n   const [selectedItems, handleChange] = useSelect(initialRoles);\r\n\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            Roles:\r\n         </S.Label>\r\n         <Select\r\n            name={name}\r\n            mode='multiple'\r\n            placeholder='Roles list'\r\n            value={selectedItems}\r\n            onChange={handleChange}\r\n         >\r\n            <OptGroup label='Reservations'>\r\n               {reservations.map(item => (\r\n                  <Option key={item.value} value={item.value}>\r\n                     {item.label}\r\n                  </Option>\r\n               ))}\r\n            </OptGroup>\r\n            <OptGroup label='Employees'>\r\n               {employees.map(item => (\r\n                  <Option key={item.value} value={item.value}>\r\n                     {item.label}\r\n                  </Option>\r\n               ))}\r\n            </OptGroup>\r\n            <OptGroup label='Services'>\r\n               {services.map(item => (\r\n                  <Option key={item.value} value={item.value}>\r\n                     {item.label}\r\n                  </Option>\r\n               ))}\r\n            </OptGroup>\r\n            <OptGroup label='Clients'>\r\n               {clients.map(item => (\r\n                  <Option key={item.value} value={item.value}>\r\n                     {item.label}\r\n                  </Option>\r\n               ))}\r\n            </OptGroup>\r\n            <OptGroup label='Profile'>\r\n               {profile.map(item => (\r\n                  <Option key={item.value} value={item.value}>\r\n                     {item.label}\r\n                  </Option>\r\n               ))}\r\n            </OptGroup>\r\n            <OptGroup label='Audit'>\r\n               {audit.map(item => (\r\n                  <Option key={item.value} value={item.value}>\r\n                     {item.label}\r\n                  </Option>\r\n               ))}\r\n            </OptGroup>\r\n         </Select>\r\n         <S.StyledErrorMessage \r\n            name={name} \r\n            component='p' \r\n         />\r\n      </S.FieldWrapper>\r\n   );\r\n}\r\n \r\nexport default SelectRoles;","import styled from 'styled-components';\r\nimport {Switch} from 'formik-antd';\r\nimport colors from '../../assets/colors';\r\n\r\nexport const FieldWrapper = styled.div`\r\n   width: 48%;\r\n   height: 100%;\r\n   margin-bottom: 8px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Label = styled.label`\r\n   margin: 5px 10px 0 0;\r\n   font-weight: 600;\r\n   color: black;\r\n`\r\n\r\nexport const StyledSwitch = styled(Switch)`\r\n   width: 50px;\r\n   margin: 10px 0 0 0;\r\n`","import React from 'react';\r\n\r\nimport * as S from './StyledFormSwitch';\r\n\r\nconst FormSwitch = ({label, name, defaultChecked}) => {\r\n   return (  \r\n      <S.FieldWrapper>\r\n         <S.Label>\r\n            {label}:\r\n         </S.Label>\r\n         <S.StyledSwitch\r\n            name={name} \r\n            defaultChecked={defaultChecked}\r\n         />\r\n      </S.FieldWrapper>\r\n   );\r\n}\r\n \r\nexport default FormSwitch;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { Alert } from 'antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport actions from '../../../app/employees/actions';\r\nimport * as S from './StyledNewEmployeeForm';\r\n\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport FormTextArea from '../../FormTextArea/FormTextArea';\r\nimport SelectRoles from '../../SelectRoles/SelectRoles';\r\nimport FormSwitch from '../../FormSwitch/FormSwitch';\r\n\r\n\r\nconst useForm = () => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [success, setSuccess] = React.useState(false)\r\n   const [err, setErr] = React.useState(false)\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n      const response = await axios.post('/api/user/employees/new', values, {withCredentials: true})\r\n      const {data, error} = response.data;\r\n\r\n      if(data) {\r\n         dispatch(actions.addEmployee(data))\r\n         setSuccess(true)\r\n      } else {\r\n         setErr(error)\r\n      }\r\n      setLoading(false)\r\n   }\r\n   return [loading, success, err, submitForm]\r\n}\r\n\r\n\r\n\r\nconst NewEmployeeForm = () => {\r\n   const [loading, success, err, submitForm] = useForm();\r\n\r\n   return (\r\n      <>\r\n         {success && <Redirect to='/user/employees' />}\r\n         <S.Wrapper> \r\n            {err && \r\n               <Alert \r\n                  message=\"Error\"\r\n                  description={err}\r\n                  type=\"error\"\r\n                  style={{'width': '300px', 'margin': '0 0 20px 0'}}\r\n                  showIcon\r\n               />\r\n            }\r\n            <Formik\r\n               initialValues={{\r\n                  name: '',\r\n                  surname: '',\r\n                  phone: '',\r\n                  email: '',\r\n                  password: '',\r\n                  confirmPassword: '',\r\n                  roles: [],\r\n                  note: '', \r\n                  enable: true,\r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                  name: Yup\r\n                     .string()\r\n                     .min(3, 'Employee name must have at least 3 letters')\r\n                     .required('Employee name is required'),\r\n                  surname: Yup\r\n                     .string()\r\n                     .min(3, 'Employee surname must have at least 3 letters')\r\n                     .required('Employee surname is required'),\r\n                  phone: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  email: Yup\r\n                     .string()\r\n                     .email('Email must be a valid email')\r\n                     .required('Email is required'),\r\n                  password: Yup\r\n                     .string()\r\n                     .min(8, 'Minimum 8 characters')\r\n                     .matches(/^(?=.*[A-Z])/, 'Must contain at least one uppercase character')\r\n                     .matches(/^(?=.*[0-9])/, 'Must contain at least one numeric character')\r\n                     .matches(/^(?=.*[!@#$%^&*()])/, 'Must contain at least one special character')\r\n                     .required('Password is required'),\r\n                  confirmPassword: Yup\r\n                     .string()\r\n                     .required('Password must match')\r\n                     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n                  roles: Yup\r\n                     .array().of(Yup.string())\r\n                     .required('Roles are required'),\r\n                  note: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  enable: Yup\r\n                     .boolean()\r\n                     .required('Enable status is required')\r\n               })}\r\n               onSubmit={values => {      \r\n                  submitForm(values)   \r\n               }}\r\n            >\r\n               {({handleSubmit}) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                     <FormInput \r\n                        label='Name'\r\n                        name='name'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Surname'\r\n                        name='surname'\r\n                        type='text'\r\n                     />\r\n                     <SelectRoles \r\n                        name='roles'\r\n                        initialRoles={[]}\r\n                     />\r\n                     <FormInput \r\n                        label='Phone'\r\n                        name='phone'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Email'\r\n                        name='email'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Password'\r\n                        name='password'\r\n                        type='password'\r\n                     />\r\n                     <FormInput \r\n                        label='Confirm Password'\r\n                        name='confirmPassword'\r\n                        type='password'\r\n                     />\r\n                     <FormTextArea \r\n                        label='Note'\r\n                        name='note'\r\n                        placeholder='Note regarding the employee'\r\n                     />\r\n                     <FormSwitch \r\n                        label='Enable Account'\r\n                        name='enable'\r\n                        defaultChecked={true}\r\n                     />\r\n                     <S.ButtonsWrapper>\r\n                        <SubmitButton loading={loading}>\r\n                           Save\r\n                           <SaveOutlined />\r\n                        </SubmitButton>\r\n                        <ResetButton>\r\n                           Reset\r\n                           <UndoOutlined />\r\n                        </ResetButton>\r\n                     </S.ButtonsWrapper>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         </S.Wrapper>\r\n      </>\r\n   )\r\n}\r\n \r\nexport default NewEmployeeForm;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`","import React from 'react';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport NewEmployeeForm from '../../../components/Employees/NewEmployeeForm/NewEmployeeForm';\r\n\r\nimport * as S from './StyledEmployeeNewPage';\r\n\r\n\r\nconst EmployeeNewPage = () => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/employees', label: 'Home'},\r\n               {to: '/user/employees', label: 'Employees'}\r\n            ]}\r\n            text='New Employee'\r\n         />\r\n         <S.StyledCard title='New Employee' bordered margin_style='true'>\r\n            <NewEmployeeForm />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default EmployeeNewPage;","import styled, {css} from 'styled-components';\r\nimport {Card, Tag} from 'antd';\r\n\r\nimport colors from '../../../assets/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   button {\r\n      margin: 0 10px 0 0;\r\n   }\r\n`\r\n\r\nexport const DetailsWrapper = styled.div`\r\n   width: 90%;\r\n   height: auto;\r\n   margin: 60px 20px 40px 20px;\r\n\r\n   display: flex;\r\n   flex-direction: column;\r\n`\r\n\r\nexport const Item = styled.h2`\r\n   width: 100%;\r\n   padding: 10px;\r\n   color: ${colors.black85};\r\n   font-size: 15px;\r\n\r\n   display: flex;\r\n`\r\n\r\nexport const Label = styled.div`\r\n   width: 25%;\r\n   text-align: right;\r\n`\r\n\r\nexport const Value = styled.div`\r\n   width: 65%;\r\n   margin: 0 0 0 15px;\r\n   font-weight: 500;\r\n   text-align: left;\r\n`\r\n\r\nexport const StyledTag = styled(Tag)`\r\n   margin-bottom: 10px; \r\n   padding: 5px 10px;\r\n`\r\n\r\nexport const NoData = styled.span`\r\n   color: ${colors.redColor};\r\n`","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Tag} from 'antd';\r\nimport {EditOutlined, CopyOutlined} from '@ant-design/icons';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport DeleteEmployee from '../../../components/Employees/DeleteEmployee/DeleteEmployee';\r\n\r\nimport * as S from './StyledEmployeeDetailsPage'\r\nimport {reservations, employees, services, clients, profile, audit} from '../../../assets/data/selectRoles';\r\n\r\nconst EmployeeDetailsPage = ({data}) => {\r\n   const initialArray = [];\r\n   const roles = initialArray.concat(reservations, employees, services, clients, profile, audit)\r\n   const filterRoles = roles.filter(role => data.roles.includes(role.value))\r\n   const employeeRoles = filterRoles.map(role => {\r\n      if(data.roles.includes(role.value)) {\r\n         return role.label\r\n      }\r\n   })\r\n   \r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/employees', label: 'Home'},\r\n               {to: '/user/employees', label: 'Employees'}\r\n            ]}\r\n            text={`Employee: ${data.id}`}\r\n         />\r\n         <S.StyledCard title='Employee Details' bordered>\r\n            <S.ButtonsWrapper>\r\n               <Link to={`/user/employees/${data.id}/edit`}>\r\n                  <Button type='primary'>\r\n                     <EditOutlined />\r\n                     Edit\r\n                  </Button>\r\n               </Link>\r\n               <DeleteEmployee\r\n                  id={data.id}\r\n                  buttonType='primary' \r\n               />\r\n               <Link to='/auth/login'>\r\n                  <Button>\r\n                     <CopyOutlined />\r\n                     Audit Logs\r\n                  </Button>\r\n               </Link>\r\n            </S.ButtonsWrapper>\r\n            <S.DetailsWrapper>\r\n               <S.Item>\r\n                  <S.Label>ID: </S.Label>\r\n                  <S.Value>{data.id}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Name: </S.Label>\r\n                  <S.Value>{data.name}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Surname: </S.Label>\r\n                  <S.Value>{data.surname}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Phone:</S.Label>\r\n                  <S.Value>\r\n                     {data.phone\r\n                        ? data.phone\r\n                        : <S.NoData>No Data</S.NoData>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Email:</S.Label>\r\n                  <S.Value>\r\n                     {data.email}\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Enable:</S.Label>\r\n                  <S.Value>\r\n                     {data.enable\r\n                        ?  <Tag color=\"green\">Yes</Tag>\r\n                        :  <Tag color=\"magenta\">No</Tag>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Roles:</S.Label>\r\n                  <S.Value>\r\n                     {employeeRoles.map(role => <S.StyledTag color='blue'>{role}</S.StyledTag>)}\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Note:</S.Label>\r\n                  <S.Value>\r\n                     {data.note\r\n                        ? data.note\r\n                        : <S.NoData>No Data</S.NoData>\r\n                     }\r\n                  </S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Created At:</S.Label>\r\n                  <S.Value>{data.createdAt}</S.Value>\r\n               </S.Item>\r\n               <S.Item>\r\n                  <S.Label>Updated At:</S.Label>\r\n                  <S.Value>{data.updatedAt}</S.Value>\r\n               </S.Item>\r\n            </S.DetailsWrapper>\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default EmployeeDetailsPage;","import React from 'react';\r\n\r\nimport {useFetchItem} from '../../../hooks/useFetchItem';\r\n\r\nimport LoadingPage from '../../../pages/LoadingPage/LoadingPage';\r\nimport ErrorPage from '../../../pages/ErrorPage/ErrorPage';\r\nimport EmployeeDetailsPage from '../../../pages/Employees/EmployeeDetailsPage/EmployeeDetailsPage';\r\n\r\n\r\nconst FetchEmployee = ({match}) => {\r\n   // Dac useFetchItem i reuzyc dla wszystkich fetchPojedynczego\r\n   const [loading, error, data] = useFetchItem(`/api/user/employees/${match.params.id}`, 'employee')\r\n   \r\n   return (  \r\n      <>\r\n         {loading && <LoadingPage />}\r\n         {error && <ErrorPage />}\r\n         {data && <EmployeeDetailsPage data={data} />}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default FetchEmployee;","import styled from 'styled-components';\r\nimport {Card} from 'antd';\r\n\r\nexport const Wrapper = styled.div`\r\n   margin: 0 25px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n   margin: 0 0 40px 0;\r\n   border-radius: 4px;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n   width: 90%;\r\n   height: 100%;\r\n   margin: 15px auto 25px auto;\r\n`\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n   width: 100%;\r\n\r\n   display: flex;\r\n   justify-content: flex-end;\r\n\r\n   button {\r\n      margin: 0 0 0 15px;\r\n   }\r\n`","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Formik} from 'formik';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Form, SubmitButton, ResetButton } from 'formik-antd';\r\nimport { Alert } from 'antd';\r\nimport { UndoOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport actions from '../../../app/employees/actions';\r\nimport * as S from './StyledEditEmployeeForm';\r\n\r\nimport FormInput from '../../FormInput/FormInput';\r\nimport FormTextArea from '../../FormTextArea/FormTextArea';\r\nimport SelectRoles from '../../SelectRoles/SelectRoles';\r\nimport FormSwitch from '../../FormSwitch/FormSwitch';\r\n\r\n\r\nconst useForm = (id) => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(false)\r\n   const [success, setSuccess] = React.useState(false)\r\n   const [err, setErr] = React.useState(false)\r\n\r\n   const submitForm = async values => {\r\n      setLoading(true)\r\n      const response = await axios.post(`/api/user/employees/${id}/edit`, values, {withCredentials: true})\r\n      const {data, error} = response.data;\r\n\r\n      if(data) {\r\n         dispatch(actions.editEmployee(data))\r\n         dispatch(actions.editSearchEmployee(data))\r\n         setSuccess(true)\r\n      } else {\r\n         setErr(error)\r\n      }\r\n      setLoading(false)\r\n   }\r\n   return [loading, success, err, submitForm]\r\n}\r\n\r\n\r\n\r\nconst EditEmployeeForm = ({data}) => {\r\n   const [loading, success, err, submitForm] = useForm(data.id);\r\n   const {name, surname, phone, email, roles, note, enable, type} = data;\r\n\r\n   return (\r\n      <>\r\n         {success && <Redirect to={`/user/employees/${data.id}`} />}\r\n         <S.Wrapper> \r\n            {err && \r\n               <Alert \r\n                  message=\"Error\"\r\n                  description={err}\r\n                  type=\"error\"\r\n                  style={{'width': '300px', 'margin': '0 0 20px 0'}}\r\n                  showIcon\r\n               />\r\n            }\r\n            <Formik\r\n               initialValues={{\r\n                  name,\r\n                  surname,\r\n                  phone,\r\n                  email,\r\n                  roles,\r\n                  note, \r\n                  enable,\r\n               }}\r\n               validationSchema={Yup.object().shape({\r\n                  name: Yup\r\n                     .string()\r\n                     .min(3, 'Employee name must have at least 3 letters')\r\n                     .required('Employee name is required'),\r\n                  surname: Yup\r\n                     .string()\r\n                     .min(3, 'Employee surname must have at least 3 letters')\r\n                     .required('Employee surname is required'),\r\n                  phone: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  email: Yup\r\n                     .string()\r\n                     .email('Email must be a valid email')\r\n                     .notRequired(),\r\n                  roles: Yup\r\n                     .array().of(Yup.string())\r\n                     .required('Roles are required'),\r\n                  note: Yup\r\n                     .string()\r\n                     .notRequired(),\r\n                  enable: Yup\r\n                     .boolean()\r\n                     .required('Enable status is required')\r\n               })}\r\n               onSubmit={values => {      \r\n                  submitForm(values)   \r\n               }}\r\n            >\r\n               {({handleSubmit}) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                     <FormInput \r\n                        label='Name'\r\n                        name='name'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Surname'\r\n                        name='surname'\r\n                        type='text'\r\n                     />\r\n                     <SelectRoles \r\n                        name='roles'\r\n                        initialRoles={roles}\r\n                     />\r\n                     <FormInput \r\n                        label='Phone'\r\n                        name='phone'\r\n                        type='text'\r\n                     />\r\n                     <FormInput \r\n                        label='Email'\r\n                        name='email'\r\n                        type='text'\r\n                     />\r\n                     <FormTextArea \r\n                        label='Note'\r\n                        name='note'\r\n                        placeholder='Note regarding the employee'\r\n                     />\r\n                     <FormSwitch \r\n                        label='Enable Account'\r\n                        name='enable'\r\n                        defaultChecked={true}\r\n                     />\r\n                     <S.ButtonsWrapper>\r\n                        <SubmitButton loading={loading}>\r\n                           Save\r\n                           <SaveOutlined />\r\n                        </SubmitButton>\r\n                        <ResetButton>\r\n                           Reset\r\n                           <UndoOutlined />\r\n                        </ResetButton>\r\n                     </S.ButtonsWrapper>\r\n                  </Form>\r\n               )}\r\n            </Formik>\r\n         </S.Wrapper>\r\n      </>\r\n   )\r\n}\r\n \r\nexport default EditEmployeeForm;","import React from 'react';\r\n\r\nimport * as S from './StyledEmployeeEditPage';\r\n\r\nimport Breadcrumb from '../../../components/Breadcrumb/Breadcrumb';\r\nimport EditEmployeeForm from '../../../components/Employees/EditEmployeeForm/EditEmployeeForm';\r\n\r\n\r\nconst EmployeeEditPage = ({data}) => {\r\n   return (  \r\n      <S.Wrapper>\r\n         <Breadcrumb \r\n            links={[\r\n               {to: '/user/employees', label: 'Home'},\r\n               {to: '/user/employees', label: 'Employees'},\r\n               {to: `/user/employees/${data.id}`, label: `Employee: ${data.id}`}\r\n            ]}\r\n            text='Edit Employee'\r\n         />\r\n         <S.StyledCard title='Edit Employee' bordered margin_style='true'>\r\n            <EditEmployeeForm data={data} />\r\n         </S.StyledCard>\r\n      </S.Wrapper>\r\n   );\r\n}\r\n \r\nexport default EmployeeEditPage;","import React from 'react';\r\n\r\nimport {useFetchItem} from '../../../hooks/useFetchItem';\r\n\r\nimport LoadingPage from '../../../pages/LoadingPage/LoadingPage';\r\nimport ErrorPage from '../../../pages/ErrorPage/ErrorPage';\r\nimport EmployeeEditPage from '../../../pages/Employees/EmployeeEditPage/EmployeeEditPage';\r\n\r\n\r\nconst FetchEmployee = ({match}) => {\r\n   // Dac useFetchItem i reuzyc dla wszystkich fetchPojedynczego\r\n   const [loading, error, data] = useFetchItem(`/api/user/employees/${match.params.id}`, 'employee')\r\n   \r\n   // Dac warunek jesli edit to to jesli nie to tamto\r\n   return (  \r\n      <>\r\n         {loading && <LoadingPage />}\r\n         {error && <ErrorPage />}\r\n         {data && <EmployeeEditPage data={data} />}\r\n      </>\r\n   );\r\n}\r\n \r\nexport default FetchEmployee;","import * as React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport EmployeesPage from '../pages/Employees/EmployeesPage/EmployeesPage';\r\nimport EmployeeNewPage from '../pages/Employees/EmployeeNewPage/EmployeeNewPage';\r\nimport FetchEmployee from '../components/Employees/FetchEmployee/FetchEmployee';\r\nimport FetchEmployeeToEdit from '../components/Employees/FetchEmployeeToEdit/FetchEmployeeToEdit';\r\nimport ErrorPage from '../pages/ErrorPage/ErrorPage';\r\n\r\n\r\nconst EmployeesRoutes = () => {\r\n   return (  \r\n      <Switch>\r\n         <Route exact path='/user/employees' component={EmployeesPage} />\r\n         <Route exact path='/user/employees/new' component={EmployeeNewPage} /> \r\n         {/* Dac props edit false */}\r\n         <Route exact path='/user/employees/:id' component={FetchEmployee} />\r\n         {/* Dac props Edit true*/}\r\n         <Route exact path='/user/employees/:id/edit' component={FetchEmployeeToEdit} />\r\n         <Route component={ErrorPage} />\r\n      </Switch>\r\n   )\r\n}\r\n \r\nexport default EmployeesRoutes;","import * as React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport ReservationsRoutes from './ReservationsRoutes';\r\nimport ClientsRoutes from './ClientsRoutes';\r\nimport ServicesRoutes from './ServicesRoutes';\r\nimport EmployeesRoutes from './EmployeesRoutes';\r\nimport ErrorPage from '../pages/ErrorPage/ErrorPage';\r\n\r\n\r\nconst AppRoutes = () => {\r\n   return (  \r\n      <Switch>\r\n         <Route path='/user/reservations' component={ReservationsRoutes} />\r\n         <Route path='/user/clients' component={ClientsRoutes} />\r\n         <Route path='/user/services' component={ServicesRoutes} />\r\n         <Route path='/user/employees' component={EmployeesRoutes} />\r\n         <Route component={ErrorPage} />\r\n      </Switch>\r\n   )\r\n}\r\n \r\nexport default AppRoutes;","import React from 'react';\r\nimport {Layout} from 'antd';\r\nimport {MenuUnfoldOutlined, MenuFoldOutlined} from '@ant-design/icons';\r\n\r\nimport * as S from './StyledAppLayout'\r\n\r\nimport Navigation from '../../components/Navigation/Navigation';\r\nimport AppRoutes from '../../routes/AppRoutes';\r\n\r\n\r\nconst useLayout = () => {\r\n   const [collapsed, setCollapsed] = React.useState(false)\r\n\r\n   const collapseMenuToggle = () => {\r\n      setCollapsed(!collapsed)\r\n   }\r\n\r\n   return [collapsed, collapseMenuToggle]; \r\n}\r\n\r\n\r\nconst AppLayout = () => {\r\n   const [collapsed, collapseMenuToggle] = useLayout();\r\n\r\n   return (\r\n      <S.StyledLayout>\r\n         <S.SiderWrapper>\r\n            <Layout.Sider theme=\"light\" trigger={null} collapsible collapsed={collapsed} >\r\n               <S.Logo>\r\n                  <S.H2 hide={collapsed}> \r\n                     Reservattio\r\n                  </S.H2>\r\n               </S.Logo>\r\n               <Navigation />\r\n            </Layout.Sider>\r\n         </S.SiderWrapper>\r\n         <Layout>\r\n            <S.StyledHeader>\r\n               {collapsed \r\n                  ? <MenuUnfoldOutlined className='trigger' onClick={collapseMenuToggle}/> \r\n                  : <MenuFoldOutlined className='trigger' onClick={collapseMenuToggle}/>\r\n               }\r\n               {/* Tutaj dac komponent tego dropdown */}\r\n            </S.StyledHeader>\r\n            <AppRoutes />\r\n         </Layout>\r\n      </S.StyledLayout>\r\n   )\r\n}\r\n \r\nexport default AppLayout;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport {fetchedServicesThunk} from '../../app/services/thunks';\r\nimport {fetchedClientsThunk} from '../../app/clients/thunks';\r\nimport {fetchedEmployeesThunk} from '../../app/employees/thunks';\r\nimport {fetchedReservationsThunk} from '../../app/reservations/thunks';\r\n\r\n\r\nimport AppLayout from '../../layout/AppLayout/AppLayout';\r\nimport LoadingPage from '../../pages/LoadingPage/LoadingPage';\r\n\r\n\r\nconst useFetch = () => {\r\n   const dispatch = useDispatch();\r\n   const [loading, setLoading] = React.useState(true);\r\n\r\n   React.useEffect(() => {\r\n      setLoading(true);\r\n\r\n      const fetchData = async () => {\r\n         const account = await axios.get('/api/account/logged-account');\r\n         const {fetched} = account.data\r\n\r\n         if(fetched) {\r\n            dispatch(fetchedReservationsThunk(fetched[0].Reservations))\r\n            dispatch(fetchedEmployeesThunk(fetched[0].Employees))\r\n            dispatch(fetchedClientsThunk(fetched[0].Clients))\r\n            dispatch(fetchedServicesThunk(fetched[0].Services))\r\n         }\r\n         setLoading(false);\r\n      }\r\n      fetchData()\r\n   }, [])\r\n\r\n   return [loading]\r\n}\r\n\r\n\r\n\r\nconst FetchAccountData = () => {\r\n   const [loading] = useFetch();\r\n\r\n   return (\r\n      <>\r\n         {loading ? <LoadingPage /> : <AppLayout />}\r\n      </>\r\n   )\r\n}\r\n \r\nexport default FetchAccountData;","import * as React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport ProtectAgainstLogout from '../components/ProtectAgainstLogout/ProtectAgainstLogout';\r\nimport ProtectAgainstLogin from '../components/ProtectAgainstLogin/ProtectAgainstLogin';\r\nimport AuthRoutes from './AuthRoutes';\r\nimport ErrorPage from '../pages/ErrorPage/ErrorPage';\r\nimport FetchAccountData from '../components/FetchAccountData/FetchAccountData';\r\n\r\n\r\n\r\nconst RootRoutes = () => {\r\n   return (  \r\n      <Switch>\r\n         <Route exact path='/' render={() => <Redirect to='/auth/login' />} />\r\n         <ProtectAgainstLogout path='/auth' component={AuthRoutes} />\r\n         <ProtectAgainstLogin path=\"/user\" component={FetchAccountData} />\r\n         <Route component={ErrorPage} />\r\n      </Switch>\r\n   );\r\n}\r\n \r\nexport default RootRoutes;","import types from './types';\r\nimport produce from 'immer';\r\n\r\nconst INITIAL_STATE = {\r\n   loading: false,\r\n   services: [],\r\n   isSearching: false,\r\n   searchedServices: [],\r\n}\r\n\r\nconst servicesReducer = (state = INITIAL_STATE, action) => {\r\n   switch(action.type) {\r\n      case types.LOADING_SERVICES: \r\n         return produce(state, draftState => {\r\n            draftState.loading = action.item\r\n         })\r\n\r\n      case types.FETCH_SERVICES: \r\n         return produce(state, draftState => {\r\n            draftState.services = action.item\r\n         })\r\n\r\n      case types.ADD_SERVICE:\r\n         return produce(state, draftState => {\r\n            draftState.services = draftState.services.concat(action.item)\r\n         })\r\n\r\n      case types.EDIT_SERVICE:\r\n         return produce(state, draftState => {\r\n            draftState.services = draftState.services.filter(service => service.id !== action.item.id)\r\n            draftState.services = draftState.services.concat(action.item)\r\n         })\r\n\r\n      case types.DELETE_SERVICE:\r\n         return produce(state, draftState => {\r\n            draftState.services = draftState.services.filter(service => !action.item.includes(service.id))\r\n         })\r\n\r\n      case types.IS_SEARCHING_SERVICES:\r\n         return produce(state, draftState => {\r\n            draftState.isSearching = action.item\r\n         })\r\n\r\n      case types.SEARCH_SERVICES:\r\n         return produce(state, draftState => {\r\n            draftState.searchedServices = action.item\r\n         })\r\n\r\n      case types.DELETE_SEARCH_SERVICE:\r\n         return produce(state, draftState => {\r\n            draftState.searchedServices = draftState.searchedServices.filter(service => !action.item.includes(service.id))\r\n         })\r\n      \r\n      case types.EDIT_SEARCH_SERVICE:\r\n         return produce(state, draftState => {\r\n            draftState.searchedServices = draftState.searchedServices.filter(service => service.id !== action.item.id)\r\n            draftState.searchedServices = draftState.searchedServices.concat(action.item)\r\n         })\r\n       \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default servicesReducer;","import servicesReducer from './reducer'; \r\n\r\nexport {default as servicesTypes} from './types';\r\nexport {default as servicesActions} from './actions'; \r\nexport default servicesReducer;","import types from './types';\r\nimport produce from 'immer';\r\n\r\nconst INITIAL_STATE = {\r\n   loading: false,\r\n   clients: [],\r\n   isSearching: false,\r\n   searchedClients: [],\r\n}\r\n\r\nconst clientsReducer = (state = INITIAL_STATE, action) => {\r\n   switch(action.type) {\r\n      case types.LOADING_CLIENTS: \r\n         return produce(state, draftState => {\r\n            draftState.loading = action.item\r\n         })\r\n\r\n      case types.FETCH_CLIENTS: \r\n         return produce(state, draftState => {\r\n            draftState.clients = action.item\r\n         })\r\n\r\n      case types.ADD_CLIENT:\r\n         return produce(state, draftState => {\r\n            draftState.clients = draftState.clients.concat(action.item)\r\n         })\r\n\r\n      case types.EDIT_CLIENT:\r\n         return produce(state, draftState => {\r\n            draftState.clients = draftState.clients.filter(client => client.id !== action.item.id)\r\n            draftState.clients = draftState.clients.concat(action.item)\r\n         })\r\n\r\n      case types.DELETE_CLIENT:\r\n         return produce(state, draftState => {\r\n            draftState.clients = draftState.clients.filter(client => !action.item.includes(client.id))\r\n         })\r\n\r\n      case types.IS_SEARCHING_CLIENTS:\r\n         return produce(state, draftState => {\r\n            draftState.isSearching = action.item\r\n         })\r\n\r\n      case types.SEARCH_CLIENTS:\r\n         return produce(state, draftState => {\r\n            draftState.searchedClients = action.item\r\n         })\r\n\r\n      case types.DELETE_SEARCH_CLIENT:\r\n         return produce(state, draftState => {\r\n            draftState.searchedClients = draftState.searchedClients.filter(client => !action.item.includes(client.id))\r\n         })\r\n\r\n      case types.EDIT_SEARCH_CLIENT:\r\n         return produce(state, draftState => {\r\n            draftState.searchedClients = draftState.searchedClients.filter(client => client.id !== action.item.id)\r\n            draftState.searchedClients = draftState.searchedClients.concat(action.item)\r\n         })\r\n\r\n      case types.IMPORT_CLIENTS:\r\n         return produce(state, draftState => {\r\n            draftState.clients = draftState.clients.concat(action.item)\r\n         })\r\n       \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default clientsReducer;","import clientsReducer from './reducer'; \r\n\r\nexport {default as clientsTypes} from './types';\r\nexport {default as clientsActions} from './actions'; \r\nexport default clientsReducer;","import types from './types';\r\nimport produce from 'immer';\r\n\r\nconst INITIAL_STATE = {\r\n   loading: false,\r\n   employees: [],\r\n   isSearching: false,\r\n   searchedEmployees: [],\r\n}\r\n\r\nconst employeesReducer = (state = INITIAL_STATE, action) => {\r\n   switch(action.type) {\r\n      case types.LOADING_EMPLOYEES: \r\n         return produce(state, draftState => {\r\n            draftState.loading = action.item\r\n         })\r\n\r\n      case types.FETCH_EMPLOYEES: \r\n         return produce(state, draftState => {\r\n            draftState.employees = action.item\r\n         })\r\n\r\n      case types.ADD_EMPLOYEE:\r\n         return produce(state, draftState => {\r\n            draftState.employees = draftState.employees.concat(action.item)\r\n         })\r\n\r\n      case types.EDIT_EMPLOYEE:\r\n         return produce(state, draftState => {\r\n            draftState.employees = draftState.employees.filter(employee => employee.id !== action.item.id)\r\n            draftState.employees = draftState.employees.concat(action.item)\r\n         })\r\n\r\n      case types.DELETE_EMPLOYEE:\r\n         return produce(state, draftState => {\r\n            draftState.employees = draftState.employees.filter(employee => !action.item.includes(employee.id))\r\n         })\r\n\r\n      case types.IS_SEARCHING_EMPLOYEES:\r\n         return produce(state, draftState => {\r\n            draftState.isSearching = action.item\r\n         })\r\n\r\n      case types.SEARCH_EMPLOYEES:\r\n         return produce(state, draftState => {\r\n            draftState.searchedEmployees = action.item\r\n         })\r\n\r\n      case types.DELETE_SEARCH_EMPLOYEE:\r\n         return produce(state, draftState => {\r\n            draftState.searchedEmployees = draftState.searchedEmployees.filter(employee => !action.item.includes(employee.id))\r\n         })\r\n\r\n      case types.EDIT_SEARCH_EMPLOYEE:\r\n         return produce(state, draftState => {\r\n            draftState.searchedEmployees = draftState.searchedEmployees.filter(employee => employee.id !== action.item.id)\r\n            draftState.searchedEmployees = draftState.searchedEmployees.concat(action.item)\r\n         })\r\n       \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default employeesReducer;","import employeesReducer from './reducer'; \r\n\r\nexport {default as employeesTypes} from './types';\r\nexport {default as employeesActions} from './actions'; \r\nexport default employeesReducer;","import types from './types';\r\nimport produce from 'immer';\r\n\r\nconst INITIAL_STATE = {\r\n   loading: false,\r\n   reservations: [],\r\n   isSearching: false,\r\n   searchedReservations: [],\r\n}\r\n\r\nconst reservationsReducer = (state = INITIAL_STATE, action) => {\r\n   switch(action.type) {\r\n      case types.LOADING_RESERVATIONS: \r\n         return produce(state, draftState => {\r\n            draftState.loading = action.item\r\n         })\r\n\r\n      case types.FETCH_RESERVATIONS: \r\n         return produce(state, draftState => {\r\n            draftState.reservations = action.item\r\n         })\r\n\r\n      case types.ADD_RESERVATION:\r\n         return produce(state, draftState => {\r\n            draftState.reservations = draftState.reservations.concat(action.item)\r\n         })\r\n\r\n      case types.EDIT_RESERVATION:\r\n         return produce(state, draftState => {\r\n            draftState.reservations = draftState.reservations.filter(reservation => reservation.id !== action.item.id)\r\n            draftState.reservations = draftState.reservations.concat(action.item)\r\n         })\r\n\r\n      case types.DELETE_RESERVATION:\r\n         return produce(state, draftState => {\r\n            draftState.reservations = draftState.reservations.filter(reservation => \r\n               !action.item.includes(reservation.id))\r\n         })\r\n\r\n      case types.IS_SEARCHING_RESERVATIONS:\r\n         return produce(state, draftState => {\r\n            draftState.isSearching = action.item\r\n         })\r\n\r\n      case types.SEARCH_RESERVATIONS:\r\n         return produce(state, draftState => {\r\n            draftState.searchedReservations = action.item\r\n         })\r\n\r\n      case types.DELETE_SEARCH_RESERVATION:\r\n         return produce(state, draftState => {\r\n            draftState.searchedReservations = draftState.searchedReservations.filter(reservation => \r\n               !action.item.includes(reservation.id))\r\n         })\r\n\r\n         case types.EDIT_SEARCH_RESERVATION:\r\n            return produce(state, draftState => {\r\n               draftState.searchedReservations = draftState.searchedReservations.filter(reservation => reservation.id !== action.item.id)\r\n               draftState.searchedReservations = draftState.searchedReservations.concat(action.item)\r\n            })\r\n       \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default reservationsReducer;","import reservationsReducer from './reducer'; \r\n\r\nexport {default as reservationsTypes} from './types';\r\nexport {default as reservationsActions} from './actions'; \r\nexport default reservationsReducer;","import { combineReducers } from 'redux';\r\n\r\nimport servicesReducer from './app/services'; \r\nimport clientsReducer from './app/clients';\r\nimport employeesReducer from './app/employees';\r\nimport reservationsReducer from './app/reservations';\r\n\r\nconst appReducer = combineReducers({\r\n   servicesReducer,\r\n   clientsReducer,\r\n   employeesReducer,\r\n   reservationsReducer\r\n})\r\n\r\n// reset redux store\r\nconst rootReducer = (state, action) => {\r\n   if(action.type === 'RESET_STORE') state = undefined;\r\n   return appReducer(state, action);\r\n}\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport RootRoutes from './routes/RootRoutes';\nimport store from './store';\n\n\nReactDOM.render(\n   <Router>\n      <Provider store={store}>\n         <RootRoutes />\n      </Provider>\n   </Router>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}